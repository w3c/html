<p>This draft is proposed to the Web Platform Working Group as the basis for a Proposed Recommendation 
for HTML 5.1 that would obsolete the <a href="https://www.w3.org/TR/">HTML 5.0 Recommendation</a>.</p> 
<p>The <a href="https://w3c.github.io/test-results/html51/implementation-report.html">implementation report</a> 
produced for this version demonstrates that in almost every case changes are matched by interoperable implementation.
In the instances where there is not yet interoperable implementation, there are warnings explicitly 
pointing this out:</p>

<dl>
          <dt>Matching for the <a><code>:dir</code></a> CSS <a href="#pseudoclasses">pseudo-class selectors<a/></dt>
            <dd>This is implemented in Firefox. It cannot be tested directly without
            a matching implementation of the CSS selector itself. It is not an HTML feature <i>per se</i>, it
            is a description that matches the CSS selector to HTML's <a>directionality</a> algorithm.</dd>
          <dt><a>Unhandled promise rejection</a> and {{rejectionhandled}}</dt>
            <dd>This feature has been partially implemented implemented in Blink. Promises are becoming an integral
            part of the Web Platform, and this was adopted for consistency with WHATWG.</dd>
          <dt>Making <code>createTFoot()</code> insert at the end of a table</dt>
            <dd>This is currently implemented in Firefox.
            There is poor interoperabiity in this area, but this is a desirable behaviour, and provides
            consistency with WHATWG.
          <dt><code>probablySupportsContext()</code> for <{canvas}></dt>
            <dd>This is a convenience function meant to return <code>false</code> if called 
            on a canvas that definitely doesn't support the relevant context, and <code>true</code> otherwise.
            It is not currently known to be implemented in any browser.</dd>
          <dt>The <code>close()</code> method for blobs, and hooks added for CSP 3 blocking styles and events</dt>
            <dd>The places where these are mentioned are in algorithms. If they are not implemented, there is
            no problem caused as the algorithm continues to work as expected.</dd>
</dl>
 
<p>Of the items marked "at risk" in the original Candidate Recommendation, the following have been removed:</p>
<ul>
 <li>The <code>dialog</code> element</li>
 <li>The <code>registerContentHandler()</code>, <code>isContentHandlerRegistered()</code> and <code>isProtocolHandlerRegistered()</code> methods</li>
 <li>The <code>datetime</code> value for the <code>type</code> attribute of the <code>input</code> element</li>
 <li>unimplemented parts of the autofill mechanism</li>
 <li>The <code>label</code> element is no longer Reassociatable</li>
 <li>the <code>toolbar</code> type for the <code>menu</code> element</li>
 <li>the <code>inputmode</code> attribute</li>
<ul>
 
<p>The remaining items were retained:</p>
<ul>
 <li>the remainder of autocomplete</li>
 <li>The <code>menu</code> and <code>menuitem</code> elements with the <code>contextmenu</code> type</li>
 <li>The <code>datetime-local</code> value for the <code>type</code> attribute of the <code>input</code> element</li>
 <li>the use of text tracks to expose in-band metadata</li>
 <li>The <code>keygen</code> element</li>
</ul>
 
<p>The Working Group aims to recharter at the end of October, and to produce an HTML 5.2 Recommendation
in late 2017 that would obsolete the HTML 5.1 Recommendation it aims to publish in late 2016
based on this draft.</p>
