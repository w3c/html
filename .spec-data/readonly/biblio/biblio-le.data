d:leiri
leiri
3 November 2008
NOTE
Legacy extended IRIs for XML resource identification
https://www.w3.org/TR/leiri/




Henry Thompson
Richard Tobin
Norman Walsh
-
d:leiri-20081103
leiri-20081103
3 November 2008
NOTE
Legacy extended IRIs for XML resource identification
https://www.w3.org/TR/2008/NOTE-leiri-20081103/
https://www.w3.org/TR/2008/NOTE-leiri-20081103/



Henry Thompson
Richard Tobin
Norman Walsh
-
d:lewg1
LEWG1

CLOSED
Test Issue
https://wg21.link/lewg1




-
d:lewg10
LEWG10

NEEDS_PAPER
Provide a function to compute x mod 2**n
https://wg21.link/lewg10




-
d:lewg100
LEWG100

WORDING_REVIEW
Unify the interfaces of optional, any, and variant
https://wg21.link/lewg100




-
d:lewg101
LEWG101

WORDING_REVIEW
If vector::reserve(n) reallocates, capacity()==n
https://wg21.link/lewg101




-
d:lewg102
LEWG102

ADOPTED
clamp()
https://wg21.link/lewg102




-
d:lewg103
LEWG103

WORDING_REVIEW
shared_ptr::weak_type
https://wg21.link/lewg103




-
d:lewg104
LEWG104

DESIGN_REVIEW
Function wrapper for const- and ref-qualified operator()
https://wg21.link/lewg104




-
d:lewg105
LEWG105

ADOPTED
Remove Deprecated iostreams aliases
https://wg21.link/lewg105




-
d:lewg106
LEWG106

ADOPTED
Adopt not_fn for C++17 and remove not1 & not2
https://wg21.link/lewg106




-
d:lewg107
LEWG107

ADOPTED
Adopt Type Traits Variable Templates for C++17
https://wg21.link/lewg107




-
d:lewg108
LEWG108

WORDING_REVIEW
Additions to Filesystem supporting Relative Paths
https://wg21.link/lewg108




-
d:lewg109
LEWG109

ADOPTED
Logical Operator Type Traits
https://wg21.link/lewg109




-
d:lewg11
LEWG11

NEEDS_PAPER
equal_range() should return a range
https://wg21.link/lewg11




-
d:lewg110
LEWG110

WORDING_REVIEW
Add a multiline option to std::regex for the ECMAScript engine
https://wg21.link/lewg110




-
d:lewg111
LEWG111

DESIGN_REVIEW
A specialization-friendly std::common_type
https://wg21.link/lewg111




-
d:lewg112
LEWG112

ADOPTED
Proxy Iterators for the Ranges Extensions
https://wg21.link/lewg112




-
d:lewg113
LEWG113

ADOPTED
A 3-Argument Overload for std::hypot
https://wg21.link/lewg113




-
d:lewg114
LEWG114

ADOPTED
Add Constexpr Modifiers to reverse_iterator, move_iterator, array and Range Access
https://wg21.link/lewg114




-
d:lewg115
LEWG115

ADOPTED
Fix enable_shared_from_this
https://wg21.link/lewg115




-
d:lewg116
LEWG116

DESIGN_REVIEW
Support Civil Time in the standard library
https://wg21.link/lewg116




-
d:lewg117
LEWG117

SG_REVIEW
Fixed-Point Real Numbers
https://wg21.link/lewg117




-
d:lewg118
LEWG118

DESIGN_REVIEW
Flat Associative Containers
https://wg21.link/lewg118




-
d:lewg119
LEWG119

CLOSED
Extending raw_storage_iterator
https://wg21.link/lewg119




-
d:lewg12
LEWG12

NEEDS_PAPER
noexcept and the wide/narrow contract theory
https://wg21.link/lewg12




-
d:lewg120
LEWG120

WORDING_REVIEW
New uninitialized_* algorithms and destroy(range)
https://wg21.link/lewg120




-
d:lewg121
LEWG121

CLOSED
Unstable remove algorithms
https://wg21.link/lewg121




-
d:lewg122
LEWG122

DESIGN_REVIEW
A uniform way to undo type erasure
https://wg21.link/lewg122




-
d:lewg123
LEWG123

CLOSED
Function wrappers with allocators and noexcept
https://wg21.link/lewg123




-
d:lewg124
LEWG124

CLOSED
Change is_transparent to a metafunction
https://wg21.link/lewg124




-
d:lewg125
LEWG125

WORDING_REVIEW
Building overload sets from function objects
https://wg21.link/lewg125




-
d:lewg126
LEWG126

DESIGN_REVIEW
A generic match function
https://wg21.link/lewg126




-
d:lewg127
LEWG127

CLOSED
Interactions Between Coroutines and Networking Library
https://wg21.link/lewg127




-
d:lewg128
LEWG128

ADOPTED
Coroutines
https://wg21.link/lewg128




-
d:lewg129
LEWG129

DESIGN_REVIEW
Circular-buffer queues
https://wg21.link/lewg129




-
d:lewg13
LEWG13

NEEDS_PAPER
Making tuple concept-friendly
https://wg21.link/lewg13




-
d:lewg130
LEWG130

ADOPTED
High-performance number<->string conversions
https://wg21.link/lewg130




-
d:lewg131
LEWG131

ADOPTED
Make std::owner_less more flexible
https://wg21.link/lewg131




-
d:lewg132
LEWG132

WORDING_REVIEW
emplace* should return the new element
https://wg21.link/lewg132




-
d:lewg133
LEWG133

CLOSED
Remove result_type and friends
https://wg21.link/lewg133




-
d:lewg134
LEWG134

ADOPTED
Minor additions to <chrono>
https://wg21.link/lewg134




-
d:lewg135
LEWG135

DESIGN_REVIEW
Explicitly total-, weak-, and partial-ordering customization points
https://wg21.link/lewg135




-
d:lewg136
LEWG136

CLOSED
Boolean conversion for Standard Library types
https://wg21.link/lewg136




-
d:lewg137
LEWG137

DESIGN_REVIEW
Easy lexical conversions
https://wg21.link/lewg137




-
d:lewg138
LEWG138

CLOSED
read/write view of a sequence of characters
https://wg21.link/lewg138




-
d:lewg139
LEWG139

DESIGN_REVIEW
bitset inclusion test methods
https://wg21.link/lewg139




-
d:lewg14
LEWG14

CLOSED
Multidimensional bounds, index and array_view
https://wg21.link/lewg14




-
d:lewg140
LEWG140

DESIGN_REVIEW
Container operations that handle failure w/o exceptions
https://wg21.link/lewg140




-
d:lewg141
LEWG141

READY
constexpr std::thread::hardware_{constructive,destructive}_interference_size
https://wg21.link/lewg141




-
d:lewg142
LEWG142

DESIGN_REVIEW
Tweaks to the Kona Variant
https://wg21.link/lewg142




-
d:lewg143
LEWG143

DESIGN_REVIEW
memory_resource_ptr: A Limited Smart Pointer for memory_resource Correctness
https://wg21.link/lewg143




-
d:lewg144
LEWG144

DESIGN_REVIEW
Regular expressions with Unicode character types
https://wg21.link/lewg144




-
d:lewg145
LEWG145

CLOSED
Warning about concurrent use of random number engines
https://wg21.link/lewg145




-
d:lewg146
LEWG146

WORDING_REVIEW
Update the C reference to C11
https://wg21.link/lewg146




-
d:lewg147
LEWG147

WORDING_REVIEW
span: reference to a single-dimensional contiguous range of objects
https://wg21.link/lewg147




-
d:lewg148
LEWG148

DESIGN_REVIEW
Bitset Iterators, Masks, and Container Operations
https://wg21.link/lewg148




-
d:lewg149
LEWG149

WORDING_REVIEW
Deprecating Vestigial Library Parts
https://wg21.link/lewg149




-
d:lewg15
LEWG15

NEEDS_PAPER
Define some cryptographic operations.
https://wg21.link/lewg15




-
d:lewg150
LEWG150

WORDING_REVIEW
Synopses for the C library
https://wg21.link/lewg150




-
d:lewg151
LEWG151

WORDING_REVIEW
Cleaning up propagation allocator_traits
https://wg21.link/lewg151




-
d:lewg152
LEWG152

DESIGN_REVIEW
Unequal allocators and swap
https://wg21.link/lewg152




-
d:lewg153
LEWG153

WORDING_REVIEW
Reserve a New Library Namespace for Future Standardization
https://wg21.link/lewg153




-
d:lewg154
LEWG154

WORDING_REVIEW
A default_order comparator
https://wg21.link/lewg154




-
d:lewg155
LEWG155

DESIGN_REVIEW
Iterator Facade Library
https://wg21.link/lewg155




-
d:lewg156
LEWG156

DESIGN_REVIEW
A generic none_t literal type for Nullable types
https://wg21.link/lewg156




-
d:lewg157
LEWG157

CLOSED
Add the Y Combinator to the Standard Library
https://wg21.link/lewg157




-
d:lewg158
LEWG158

DESIGN_REVIEW
A cloning pointer class
https://wg21.link/lewg158




-
d:lewg159
LEWG159

WORDING_REVIEW
Add constexpr modifiers to functions in <algorithm> and <cstring>
https://wg21.link/lewg159




-
d:lewg16
LEWG16

ADOPTED
Improving pair and tuple
https://wg21.link/lewg16




-
d:lewg160
LEWG160

SG_REVIEW
Allow Seeding Random Number Engines with std::random_device
https://wg21.link/lewg160




-
d:lewg161
LEWG161

CLOSED
Joining threads on destruction
https://wg21.link/lewg161




-
d:lewg162
LEWG162

DESIGN_REVIEW
A helper for the copy-swap idiom in the presence of non-propagating allocators
https://wg21.link/lewg162




-
d:lewg163
LEWG163

WORDING_REVIEW
make_from_tuple: apply() for construction
https://wg21.link/lewg163




-
d:lewg164
LEWG164

CLOSED
A vector<> that doesn't store a capacity
https://wg21.link/lewg164




-
d:lewg165
LEWG165

DESIGN_REVIEW
Allocator-aware library wrappers for dynamic allocation
https://wg21.link/lewg165




-
d:lewg166
LEWG166

DESIGN_REVIEW
A Time-Zone Library
https://wg21.link/lewg166




-
d:lewg167
LEWG167

ADOPTED
Adopt the File System TS for C++17
https://wg21.link/lewg167




-
d:lewg168
LEWG168

ADOPTED
Adopt Library Fundamentals V1 TS Components for C++17
https://wg21.link/lewg168




-
d:lewg169
LEWG169

WORDING_REVIEW
Weakening the iterator categories of some sorting algorithms
https://wg21.link/lewg169




-
d:lewg17
LEWG17

CLOSED
Establish conventions for Technical Specification contents
https://wg21.link/lewg17




-
d:lewg170
LEWG170

SG_REVIEW
Safe (bounds-checked) Integer Types
https://wg21.link/lewg170




-
d:lewg171
LEWG171

DESIGN_REVIEW
Bit value, reference, pointer, and iterator
https://wg21.link/lewg171




-
d:lewg172
LEWG172

ADOPTED
Rename variant's corrupted_by_exception() to valueless_by_exception()
https://wg21.link/lewg172




-
d:lewg173
LEWG173

DESIGN_REVIEW
Regular void in the standard library
https://wg21.link/lewg173




-
d:lewg174
LEWG174

DESIGN_REVIEW
Text_view: A C++ concepts and range based character encoding and code point enumeration library
https://wg21.link/lewg174




-
d:lewg175
LEWG175

ADOPTED
Return the end of the match from searchers
https://wg21.link/lewg175




-
d:lewg176
LEWG176

WORDING_REVIEW
is_contiguous_layout
https://wg21.link/lewg176




-
d:lewg177
LEWG177

DESIGN_REVIEW
Add 2D Graphics Rendering and Display to C++
https://wg21.link/lewg177




-
d:lewg178
LEWG178

ADOPTED
Give 'std::string' a non-const '.data()' member function
https://wg21.link/lewg178




-
d:lewg179
LEWG179

DESIGN_REVIEW
Clump â€“ A Vector-like Contiguous Sequence Container with Embedded Storage
https://wg21.link/lewg179




-
d:lewg18
LEWG18

READY
Const-propagating smart pointer wrapper
https://wg21.link/lewg18




-
d:lewg180
LEWG180

CLOSED
Const-preserving overloads for the strtox family of functions
https://wg21.link/lewg180




-
d:lewg181
LEWG181

DESIGN_REVIEW
std::direct_init<T>, a functor to expose T's constructor overload set
https://wg21.link/lewg181




-
d:lewg182
LEWG182

ADOPTED
The Parallelism TS Should be Standardized
https://wg21.link/lewg182




-
d:lewg183
LEWG183

WORDING_REVIEW
Dynamic memory allocation for over-aligned data
https://wg21.link/lewg183




-
d:lewg184
LEWG184

WORDING_REVIEW
Adopt gcd and lcm from Library Fundamentals V2 Components for C++17
https://wg21.link/lewg184




-
d:lewg185
LEWG185

CLOSED
Default comparisons
https://wg21.link/lewg185




-
d:lewg186
LEWG186

UNCONFIRMED
missing rationale for numeric_limits template member values defaulting to 0.
https://wg21.link/lewg186




-
d:lewg187
LEWG187

SG_REVIEW
Manipulating the width of numeric types
https://wg21.link/lewg187




-
d:lewg188
LEWG188

WORDING_REVIEW
Delete operator= for polymorphic_allocator
https://wg21.link/lewg188




-
d:lewg189
LEWG189

WORDING_REVIEW
Better Names for Parallel Execution Policies in C++17
https://wg21.link/lewg189




-
d:lewg19
LEWG19

DESIGN_REVIEW
Polymorphic Deleter for Unique Pointers
https://wg21.link/lewg19




-
d:lewg190
LEWG190

WORDING_REVIEW
Floating Point Atomic
https://wg21.link/lewg190




-
d:lewg191
LEWG191

WORDING_REVIEW
Vector and Wavefront Policies
https://wg21.link/lewg191




-
d:lewg192
LEWG192

SG_REVIEW
Thread-Local Storage and light-weight executors
https://wg21.link/lewg192




-
d:lewg193
LEWG193

DESIGN_REVIEW
Data-Parallel Vector Types & Operations
https://wg21.link/lewg193




-
d:lewg194
LEWG194

WORDING_REVIEW
Integrating std::string_view and std::string
https://wg21.link/lewg194




-
d:lewg195
LEWG195

WORDING_REVIEW
A byte type
https://wg21.link/lewg195




-
d:lewg196
LEWG196

DESIGN_REVIEW
Dynamic library loading
https://wg21.link/lewg196




-
d:lewg197
LEWG197

WORDING_REVIEW
Forward progress guarantees for the Parallelism TS v2
https://wg21.link/lewg197




-
d:lewg198
LEWG198

WORDING_REVIEW
Deprecating Allocator Support in std::function
https://wg21.link/lewg198




-
d:lewg199
LEWG199

WORDING_REVIEW
Optional<T>'s >= should forward to T's >=
https://wg21.link/lewg199




-
d:lewg2
LEWG2

ADOPTED
TransformationTrait Alias void_t
https://wg21.link/lewg2




-
d:lewg20
LEWG20

WORDING_REVIEW
Ostream Buffers
https://wg21.link/lewg20




-
d:lewg200
LEWG200

CLOSED
Valueless Variants Considered Harmful
https://wg21.link/lewg200




-
d:lewg201
LEWG201

DESIGN_REVIEW
Splitting node and array allocation in allocators
https://wg21.link/lewg201




-
d:lewg202
LEWG202

WORDING_REVIEW
Directory Entry Caching for Filesystem
https://wg21.link/lewg202




-
d:lewg203
LEWG203

DESIGN_REVIEW
Unwrapping reference_wrapper
https://wg21.link/lewg203




-
d:lewg204
LEWG204

DESIGN_REVIEW
Adding Emplace functions for promise<T>/future<T>
https://wg21.link/lewg204




-
d:lewg205
LEWG205

SG_REVIEW
Thread Constructor Attributes
https://wg21.link/lewg205




-
d:lewg206
LEWG206

DESIGN_REVIEW
User-creatable exception_list
https://wg21.link/lewg206




-
d:lewg207
LEWG207

WORDING_REVIEW
Adopt make_array into the IS
https://wg21.link/lewg207




-
d:lewg208
LEWG208

SG_REVIEW
Improving Parallel Algorithm Exception Handling
https://wg21.link/lewg208




-
d:lewg209
LEWG209

DESIGN_REVIEW
Immutable Containers
https://wg21.link/lewg209




-
d:lewg21
LEWG21

DESIGN_REVIEW
Make it easier for users to define good hash functions
https://wg21.link/lewg21




-
d:lewg210
LEWG210

DESIGN_REVIEW
Generic factory function
https://wg21.link/lewg210




-
d:lewg211
LEWG211

DESIGN_REVIEW
polymorphic_allocator<void> as a vocabulary type
https://wg21.link/lewg211




-
d:lewg212
LEWG212

DESIGN_REVIEW
Making std::underlying_type SFINAE-friendly
https://wg21.link/lewg212




-
d:lewg213
LEWG213

DESIGN_REVIEW
High-order metaprogramming functions
https://wg21.link/lewg213




-
d:lewg214
LEWG214

ADOPTED
Rename "uniform random number generator" to "... bit generator"
https://wg21.link/lewg214




-
d:lewg215
LEWG215

DESIGN_REVIEW
Simplifying simple uses of <random>
https://wg21.link/lewg215




-
d:lewg216
LEWG216

DESIGN_REVIEW
Unicode Encoding Conversions
https://wg21.link/lewg216




-
d:lewg217
LEWG217

DESIGN_REVIEW
reference_wrapper for incomplete types and assorted removals
https://wg21.link/lewg217




-
d:lewg218
LEWG218

WORDING_REVIEW
Fixes for not_fn
https://wg21.link/lewg218




-
d:lewg219
LEWG219

SG_REVIEW
Invoking Algorithms Asynchronously
https://wg21.link/lewg219




-
d:lewg22
LEWG22

ADOPTED
Rvalue reference overloads for optional
https://wg21.link/lewg22




-
d:lewg220
LEWG220

DESIGN_REVIEW
A class to describe the kind of data accesses
https://wg21.link/lewg220




-
d:lewg221
LEWG221

ADOPTED
Ranges TS Design Updates
https://wg21.link/lewg221




-
d:lewg222
LEWG222

DESIGN_REVIEW
A Single Generalization of std::invoke, std::apply, and std::visit
https://wg21.link/lewg222




-
d:lewg223
LEWG223

DESIGN_REVIEW
std::integral_constant with a Deduced Value Type
https://wg21.link/lewg223




-
d:lewg224
LEWG224

WORDING_REVIEW
string_view and filesystem::path
https://wg21.link/lewg224




-
d:lewg225
LEWG225

CLOSED
Structured binding: customization points issues
https://wg21.link/lewg225




-
d:lewg226
LEWG226

UNCONFIRMED
operator+ overloads for std::string and std::string_view
https://wg21.link/lewg226




-
d:lewg227
LEWG227

DESIGN_REVIEW
variant converting constructor allows unintended conversions
https://wg21.link/lewg227




-
d:lewg228
LEWG228

DESIGN_REVIEW
Atomic View
https://wg21.link/lewg228




-
d:lewg229
LEWG229

CLOSED
allocate_unique and allocator_delete
https://wg21.link/lewg229




-
d:lewg23
LEWG23

DESIGN_REVIEW
Hashing tuple-like types
https://wg21.link/lewg23




-
d:lewg230
LEWG230

DESIGN_REVIEW
Pointer Cast Functions with Move Semantics
https://wg21.link/lewg230




-
d:lewg231
LEWG231

DESIGN_REVIEW
Extensions to the Allocator interface
https://wg21.link/lewg231




-
d:lewg232
LEWG232

ADOPTED
Literal suffixes for basic_string_view
https://wg21.link/lewg232




-
d:lewg233
LEWG233

DESIGN_REVIEW
Intrusive Containers
https://wg21.link/lewg233




-
d:lewg234
LEWG234

DESIGN_REVIEW
Allocator-aware basic stringbuf
https://wg21.link/lewg234




-
d:lewg235
LEWG235

DESIGN_REVIEW
Efficient Access to basic stringbufâ€™s Buffer
https://wg21.link/lewg235




-
d:lewg236
LEWG236

DESIGN_REVIEW
Separating Library Requirements and Preconditions
https://wg21.link/lewg236




-
d:lewg237
LEWG237

DESIGN_REVIEW
Constexpr for std::complex
https://wg21.link/lewg237




-
d:lewg238
LEWG238

ADOPTED
Constexpr for std::char_traits
https://wg21.link/lewg238




-
d:lewg239
LEWG239

WORDING_REVIEW
Integrating template deduction for class templates into the standard library
https://wg21.link/lewg239




-
d:lewg24
LEWG24

ADOPTED
Transaction-safe standard library
https://wg21.link/lewg24




-
d:lewg240
LEWG240

CLOSED
Floating Point Atomic View
https://wg21.link/lewg240




-
d:lewg241
LEWG241

DESIGN_REVIEW
std::colony
https://wg21.link/lewg241




-
d:lewg242
LEWG242

DESIGN_REVIEW
A strstream replacement using span<charT> as buffer
https://wg21.link/lewg242




-
d:lewg243
LEWG243

DESIGN_REVIEW
A minimal multi-dimensional span, mdspan<>
https://wg21.link/lewg243




-
d:lewg244
LEWG244

DESIGN_REVIEW
String Prefix and Suffix Checking
https://wg21.link/lewg244




-
d:lewg245
LEWG245

DESIGN_REVIEW
Checking for Existence of an Element in Associative Containers
https://wg21.link/lewg245




-
d:lewg246
LEWG246

DESIGN_REVIEW
endian, Just endian
https://wg21.link/lewg246




-
d:lewg247
LEWG247

WORDING_REVIEW
Layout-compatibility and Pointer-interconvertibility Traits
https://wg21.link/lewg247




-
d:lewg248
LEWG248

DESIGN_REVIEW
Sample in place
https://wg21.link/lewg248




-
d:lewg249
LEWG249

DESIGN_REVIEW
Single argument std::inserter
https://wg21.link/lewg249




-
d:lewg25
LEWG25

ADOPTED
Enable noexcept on string and vector default/move constructors/assignments
https://wg21.link/lewg25




-
d:lewg250
LEWG250

DESIGN_REVIEW
Put std::monostate in <utility>
https://wg21.link/lewg250




-
d:lewg251
LEWG251

DESIGN_REVIEW
Bit-casting object representations
https://wg21.link/lewg251




-
d:lewg252
LEWG252

DESIGN_REVIEW
std::monostate_function<>
https://wg21.link/lewg252




-
d:lewg253
LEWG253

DESIGN_REVIEW
move_if_noexcept from a range to uninitialized memory
https://wg21.link/lewg253




-
d:lewg254
LEWG254

SG_REVIEW
Enhancing Thread Constructor Attributes
https://wg21.link/lewg254




-
d:lewg255
LEWG255

DESIGN_REVIEW
for_each_iter algorithm
https://wg21.link/lewg255




-
d:lewg256
LEWG256

SG_REVIEW
Atomic maximum/minimum
https://wg21.link/lewg256




-
d:lewg257
LEWG257

CLOSED
contiguous_container
https://wg21.link/lewg257




-
d:lewg258
LEWG258

CLOSED
Deduction guide for std::array
https://wg21.link/lewg258




-
d:lewg259
LEWG259

DESIGN_REVIEW
Add split/join of string/string_view
https://wg21.link/lewg259




-
d:lewg26
LEWG26

ADOPTED
Supporting move-only types with emplace in unique-key maps
https://wg21.link/lewg26




-
d:lewg260
LEWG260

WORDING_REVIEW
Post-Increment on Input and Output Iterators
https://wg21.link/lewg260




-
d:lewg261
LEWG261

DESIGN_REVIEW
User Injection of Filesystems
https://wg21.link/lewg261




-
d:lewg262
LEWG262

DESIGN_REVIEW
Supporting offsetof for Stable-layout Classes
https://wg21.link/lewg262




-
d:lewg263
LEWG263

DESIGN_REVIEW
Span - foundation for the future
https://wg21.link/lewg263




-
d:lewg264
LEWG264

DESIGN_REVIEW
Adjuncts to std::hash
https://wg21.link/lewg264




-
d:lewg265
LEWG265

DESIGN_REVIEW
Transformation Trait uncvref
https://wg21.link/lewg265




-
d:lewg266
LEWG266

DESIGN_REVIEW
Thou Shalt Not Specialize std Function Templates!
https://wg21.link/lewg266




-
d:lewg267
LEWG267

DESIGN_REVIEW
string_view for source_location
https://wg21.link/lewg267




-
d:lewg268
LEWG268

CLOSED
Class template deduction guides for "diamond operators"
https://wg21.link/lewg268




-
d:lewg269
LEWG269

DESIGN_REVIEW
Vector Front Operations
https://wg21.link/lewg269




-
d:lewg27
LEWG27

ADOPTED
Delimited iterators (fixing ostream_iterator)
https://wg21.link/lewg27




-
d:lewg270
LEWG270

DESIGN_REVIEW
Utility functions to implement uses-allocator construction
https://wg21.link/lewg270




-
d:lewg271
LEWG271

WORDING_REVIEW
[[nodiscard]] in the Library
https://wg21.link/lewg271




-
d:lewg272
LEWG272

SG_REVIEW
constexpr for <cmath> and <cstdlib>
https://wg21.link/lewg272




-
d:lewg273
LEWG273

DESIGN_REVIEW
An Intrusive Smart Pointer
https://wg21.link/lewg273




-
d:lewg274
LEWG274

WORDING_REVIEW
File system library on non-POSIX-like operating systems
https://wg21.link/lewg274




-
d:lewg275
LEWG275

DESIGN_REVIEW
Use string_view for library function parameters instead of const string &/const char *
https://wg21.link/lewg275




-
d:lewg276
LEWG276

SG_REVIEW
Numeric Traits for the Next Standard Library
https://wg21.link/lewg276




-
d:lewg277
LEWG277

SG_REVIEW
Toward a <random> Technical Specification
https://wg21.link/lewg277




-
d:lewg278
LEWG278

SG_REVIEW
Saturation arithmetic
https://wg21.link/lewg278




-
d:lewg279
LEWG279

DESIGN_REVIEW
Bit operations
https://wg21.link/lewg279




-
d:lewg28
LEWG28

ADOPTED
Uniform Container Erasure
https://wg21.link/lewg28




-
d:lewg280
LEWG280

DESIGN_REVIEW
Integral power-of-2 operations
https://wg21.link/lewg280




-
d:lewg281
LEWG281

DESIGN_REVIEW
Consistent comparison
https://wg21.link/lewg281




-
d:lewg282
LEWG282

DESIGN_REVIEW
Standard Library Modules
https://wg21.link/lewg282




-
d:lewg283
LEWG283

SG_REVIEW
Updating Parallel Execution Policy Names in the Parallelism TS
https://wg21.link/lewg283




-
d:lewg284
LEWG284

WORDING_REVIEW
Make std::memory_order a scoped enumeration
https://wg21.link/lewg284




-
d:lewg285
LEWG285

SG_REVIEW
Future-Proofing Parallel Algorithms Exception Handling
https://wg21.link/lewg285




-
d:lewg286
LEWG286

SG_REVIEW
Binary-Binary transform_reduce(): The Missing Overload
https://wg21.link/lewg286




-
d:lewg287
LEWG287

ADOPTED
Clarify That shared_futureâ€™s Copy Operations have Wide Contracts
https://wg21.link/lewg287




-
d:lewg288
LEWG288

SG_REVIEW
The Curious Case of Padding Bits, Featuring Atomic Compare-and-Exchange
https://wg21.link/lewg288




-
d:lewg289
LEWG289

SG_REVIEW
call/cc (call-with-current-continuation): A low-level API for stackful context switching
https://wg21.link/lewg289




-
d:lewg29
LEWG29

DESIGN_REVIEW
std::expected<Error, T>
https://wg21.link/lewg29




-
d:lewg290
LEWG290

DESIGN_REVIEW
Type Requirements for <numeric> Algorithms
https://wg21.link/lewg290




-
d:lewg291
LEWG291

SG_REVIEW
Hazard Pointers
https://wg21.link/lewg291




-
d:lewg292
LEWG292

SG_REVIEW
Product-Type access
https://wg21.link/lewg292




-
d:lewg293
LEWG293

NEEDS_PAPER
[Networking] PDTS ballot comment 001 (US): use callable/invocable terminology instead of "function object"
https://wg21.link/lewg293




-
d:lewg294
LEWG294

CLOSED
[Networking] PDTS ballot comment 004 (FR1): Implement using coroutines
https://wg21.link/lewg294




-
d:lewg295
LEWG295

NEEDS_PAPER
[Networking] PDTS ballot comment 006 (US): Use callbacks instead of completion tokens
https://wg21.link/lewg295




-
d:lewg296
LEWG296

NEEDS_WORDING
[Networking] PDTS ballot comment 008 (GB3): Specify reentrancy rules for dispatch functions
https://wg21.link/lewg296




-
d:lewg297
LEWG297

NEEDS_PAPER
[Networking] PDTS ballot comment 011 (US): Remove defer function from executors
https://wg21.link/lewg297




-
d:lewg298
LEWG298

NEEDS_WORDING
[Networking] PDTS ballot comment 015 (GB6): Reentrancy and use_service/make_service.
https://wg21.link/lewg298




-
d:lewg299
LEWG299

CONFIRMED
[Networking] PDTS ballot comment 016 (GB7): run()/run_one() specification overly restrictive on users.
https://wg21.link/lewg299




-
d:lewg3
LEWG3

DESIGN_REVIEW
Centralized Defensive-Programming Support for Narrow  Contracts
https://wg21.link/lewg3




-
d:lewg30
LEWG30

ADOPTED
Non-member size(), empty(), front(), back(), and data().
https://wg21.link/lewg30




-
d:lewg300
LEWG300

CLOSED
[Networking] PDTS ballot comment 018 (GB9): user-provided overloads of buffer_size intended?
https://wg21.link/lewg300




-
d:lewg301
LEWG301

CLOSED
[Networking] PDTS ballot comment 022 (GB12): const_buffer is a view
https://wg21.link/lewg301




-
d:lewg302
LEWG302

CLOSED
[Networking] PDTS ballot comment 025 (GB14): Add integer_option helper
https://wg21.link/lewg302




-
d:lewg303
LEWG303

CONFIRMED
[Networking] PDTS ballot comment 026 (GB15):  Consider adding release() member functions to basic_socket and basic_socket_acceptor
https://wg21.link/lewg303




-
d:lewg304
LEWG304

CONFIRMED
[Networking] PDTS ballot comment 027 (GB16): Consider adding constructors to basic_socket and basic_socket_acceptor to move a socket to another io_context
https://wg21.link/lewg304




-
d:lewg305
LEWG305

CONFIRMED
[Networking] PDTS ballot comment 033 (GB20): Shorten ip::resolver_errc enumerator names.
https://wg21.link/lewg305




-
d:lewg306
LEWG306

CONFIRMED
[Networking] PDTS ballot comment 034 (GB21): Consider ip::address::is_loopback() and ip::address_v6::is_loopback() behaviour for IPv4-mapped IPv6 addresses
https://wg21.link/lewg306




-
d:lewg307
LEWG307

CLOSED
[Networking] PDTS ballot comment 018 (GB9): user-provided overloads of buffer_size intended?
https://wg21.link/lewg307




-
d:lewg308
LEWG308

DESIGN_REVIEW
apply() for synchronized_value<T>
https://wg21.link/lewg308




-
d:lewg309
LEWG309

DESIGN_REVIEW
Integrating datapar with parallel algorithms and executors
https://wg21.link/lewg309




-
d:lewg31
LEWG31

READY
make_array
https://wg21.link/lewg31




-
d:lewg310
LEWG310

DESIGN_REVIEW
Distributed Counters
https://wg21.link/lewg310




-
d:lewg32
LEWG32

DESIGN_REVIEW
Destructive Move
https://wg21.link/lewg32




-
d:lewg33
LEWG33

ADOPTED
Safe conversions in unique_ptr<T[]>
https://wg21.link/lewg33




-
d:lewg34
LEWG34

DESIGN_REVIEW
Need type-erased wrappers for move-only callable objects
https://wg21.link/lewg34




-
d:lewg35
LEWG35

ADOPTED
Minimal incomplete type support for standard containers
https://wg21.link/lewg35




-
d:lewg36
LEWG36

NEEDS_PAPER
Develop guidelines for the use of constexpr
https://wg21.link/lewg36




-
d:lewg37
LEWG37

SG_REVIEW
A constexpr bitwise operations library for C++
https://wg21.link/lewg37




-
d:lewg38
LEWG38

CLOSED
Relax the allocator requirements on vector so that the small object optimization is allowed
https://wg21.link/lewg38




-
d:lewg39
LEWG39

ADOPTED
basic_string(const charT*, size_type, const Allocator&) requires clause too restrictive
https://wg21.link/lewg39




-
d:lewg4
LEWG4

ADOPTED
Fixes for optional objects
https://wg21.link/lewg4




-
d:lewg40
LEWG40

DESIGN_REVIEW
Simplified partial function application
https://wg21.link/lewg40




-
d:lewg41
LEWG41

NEEDS_PAPER
Type Trait is_range<T>
https://wg21.link/lewg41




-
d:lewg42
LEWG42

READY
Unspecialized std::tuple_size should be defined
https://wg21.link/lewg42




-
d:lewg43
LEWG43

WORDING_REVIEW
Extend INVOKE to support types convertible to target class
https://wg21.link/lewg43




-
d:lewg44
LEWG44

ADOPTED
A proposal to add invoke() function template
https://wg21.link/lewg44




-
d:lewg45
LEWG45

CLOSED
Should the rvalue-ref-qualified overloads for optional really return a value?
https://wg21.link/lewg45




-
d:lewg46
LEWG46

DESIGN_REVIEW
Fix iterator categories
https://wg21.link/lewg46




-
d:lewg47
LEWG47

ADOPTED
Task Regions
https://wg21.link/lewg47




-
d:lewg48
LEWG48

DESIGN_REVIEW
Searching and Manipulation of Parameter Packs
https://wg21.link/lewg48




-
d:lewg49
LEWG49

ADOPTED
introduce the term "contiguous iterator"
https://wg21.link/lewg49




-
d:lewg5
LEWG5

ADOPTED
not_fn()
https://wg21.link/lewg5




-
d:lewg50
LEWG50

NEEDS_WORDING
raw_storage_iterator needs rvalue ref support
https://wg21.link/lewg50




-
d:lewg51
LEWG51

READY
bool_constant
https://wg21.link/lewg51




-
d:lewg52
LEWG52

WORDING_REVIEW
Ranges for the Standard Library
https://wg21.link/lewg52




-
d:lewg53
LEWG53

ADOPTED
Source-Code Information Capture
https://wg21.link/lewg53




-
d:lewg54
LEWG54

CLOSED
Data-Invariant (constant time/side-channel-resistant) Functions
https://wg21.link/lewg54




-
d:lewg55
LEWG55

ADOPTED
TriviallyCopyable reference_wrapper
https://wg21.link/lewg55




-
d:lewg56
LEWG56

ADOPTED
Remove auto_ptr
https://wg21.link/lewg56




-
d:lewg57
LEWG57

CONFIRMED
Remove deprecated library features
https://wg21.link/lewg57




-
d:lewg58
LEWG58

ADOPTED
Remove random_shuffle()
https://wg21.link/lewg58




-
d:lewg59
LEWG59

ADOPTED
Remove old function objects and binders
https://wg21.link/lewg59




-
d:lewg6
LEWG6

WORDING_REVIEW
Scoped Resource - Generic RAII Wrapper for the Standard Library
https://wg21.link/lewg6




-
d:lewg60
LEWG60

DESIGN_REVIEW
Utilities for contiguous iterators
https://wg21.link/lewg60




-
d:lewg61
LEWG61

CLOSED
Alignment helpers
https://wg21.link/lewg61




-
d:lewg62
LEWG62

CLOSED
Size and alignment control for std::bitset
https://wg21.link/lewg62




-
d:lewg63
LEWG63

CLOSED
Fast ASCII Character Manipulation
https://wg21.link/lewg63




-
d:lewg64
LEWG64

ADOPTED
Latches and Barriers
https://wg21.link/lewg64




-
d:lewg65
LEWG65

WORDING_REVIEW
std::rand replacement
https://wg21.link/lewg65




-
d:lewg66
LEWG66

WORDING_REVIEW
Variant
https://wg21.link/lewg66




-
d:lewg67
LEWG67

DESIGN_REVIEW
array_view extensions: storage ordering, operator(), range access, and data()
https://wg21.link/lewg67




-
d:lewg68
LEWG68

WORDING_REVIEW
Networking Library
https://wg21.link/lewg68




-
d:lewg69
LEWG69

DESIGN_REVIEW
Static reflection
https://wg21.link/lewg69




-
d:lewg7
LEWG7

WORDING_REVIEW
Extending make_shared to Support Arrays
https://wg21.link/lewg7




-
d:lewg70
LEWG70

SG_REVIEW
Reflection Type Traits For Classes, Unions and Enumerations
https://wg21.link/lewg70




-
d:lewg71
LEWG71

ADOPTED
Editorial: Order of functions in section 5.8 and 5.9 are inconsistent.
https://wg21.link/lewg71




-
d:lewg72
LEWG72

NEEDS_WORDING
bad_optional_access should derive from std::exception, not std::logic_error
https://wg21.link/lewg72




-
d:lewg73
LEWG73

CONFIRMED
Editorial - some functions in optional have remarks about constexpr; others do not.
https://wg21.link/lewg73




-
d:lewg74
LEWG74

NEEDS_PAPER
Some tuple and pair constructors need magic SFINAE "does not participate in overload resolution" wording
https://wg21.link/lewg74




-
d:lewg75
LEWG75

CLOSED
Optional specifies that a constructor that takes a forwarding reference will move from it
https://wg21.link/lewg75




-
d:lewg76
LEWG76

NEEDS_PAPER
Consider supporting fancy pointers in propagate_const
https://wg21.link/lewg76




-
d:lewg77
LEWG77

WORDING_REVIEW
User-defined literals for additional arithmetic types
https://wg21.link/lewg77




-
d:lewg78
LEWG78

CLOSED
'end' arguments to advance(), next(), and prev()
https://wg21.link/lewg78




-
d:lewg79
LEWG79

SG_REVIEW
An absolute-difference function
https://wg21.link/lewg79




-
d:lewg8
LEWG8

ADOPTED
Greatest Common Divisor and Least Common Multiple
https://wg21.link/lewg8




-
d:lewg80
LEWG80

DESIGN_REVIEW
Multidimensional Array View with Polymorphic Layout
https://wg21.link/lewg80




-
d:lewg81
LEWG81

CLOSED
vector::release to extract vector's internal array
https://wg21.link/lewg81




-
d:lewg82
LEWG82

DESIGN_REVIEW
Add bitset::size_type
https://wg21.link/lewg82




-
d:lewg83
LEWG83

CLOSED
Make advance(it) equivalent to ++it
https://wg21.link/lewg83




-
d:lewg84
LEWG84

ADOPTED
An easy conversion to const
https://wg21.link/lewg84




-
d:lewg85
LEWG85

DESIGN_REVIEW
Design future customization points
https://wg21.link/lewg85




-
d:lewg86
LEWG86

NEEDS_PAPER
Improve or replace iostreams
https://wg21.link/lewg86




-
d:lewg87
LEWG87

CLOSED
Make vector support non-moveable types
https://wg21.link/lewg87




-
d:lewg88
LEWG88

ADOPTED
Adding [nothrow-]swappable traits
https://wg21.link/lewg88




-
d:lewg89
LEWG89

CLOSED
Standard Library Support for the C++ Detection Idiom
https://wg21.link/lewg89




-
d:lewg9
LEWG9

WORDING_REVIEW
Allocator-aware regular expressions
https://wg21.link/lewg9




-
d:lewg90
LEWG90

ADOPTED
Move the Mathematical Special Functions into C++
https://wg21.link/lewg90




-
d:lewg91
LEWG91

ADOPTED
An is_callable trait
https://wg21.link/lewg91




-
d:lewg92
LEWG92

DESIGN_REVIEW
Message digests (includes cryptographic hashes)
https://wg21.link/lewg92




-
d:lewg93
LEWG93

ADOPTED
Merge Fundamentals v1 into v2
https://wg21.link/lewg93




-
d:lewg94
LEWG94

WORDING_REVIEW
Splicing Maps and Sets
https://wg21.link/lewg94




-
d:lewg95
LEWG95

DESIGN_REVIEW
std::decay_copy()
https://wg21.link/lewg95




-
d:lewg96
LEWG96

DESIGN_REVIEW
A compile-time string type
https://wg21.link/lewg96




-
d:lewg97
LEWG97

ADOPTED
shared_mutex (untimed)
https://wg21.link/lewg97




-
d:lewg98
LEWG98

READY
N4509 constexpr atomic<T>::is_always_lock_free
https://wg21.link/lewg98




-
d:lewg99
LEWG99

CLOSED
Unions with differing access control are not standard layout (but could be)
https://wg21.link/lewg99




-
d:lexicon-reqs
lexicon-reqs
29 October 2004
WD
Pronunciation Lexicon Specification (PLS) Version 1.0 Requirements
https://www.w3.org/TR/lexicon-reqs/




Paolo Baggia
Frank Scahill
-
d:lexicon-reqs-20010312
lexicon-reqs-20010312
12 March 2001
WD
Pronunciation Lexicon Specification (PLS) Version 1.0 Requirements
https://www.w3.org/TR/2001/WD-lexicon-reqs-20010312/
https://www.w3.org/TR/2001/WD-lexicon-reqs-20010312/



Paolo Baggia
Frank Scahill
-
d:lexicon-reqs-20041029
lexicon-reqs-20041029
29 October 2004
WD
Pronunciation Lexicon Specification (PLS) Version 1.0 Requirements
https://www.w3.org/TR/2004/WD-lexicon-reqs-20041029/
https://www.w3.org/TR/2004/WD-lexicon-reqs-20041029/



Paolo Baggia
Frank Scahill
-
