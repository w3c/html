d:lwg1
LWG1

TC1
C library linkage editing oversight
http://cplusplus.github.io/LWG/lwg-defects.html#1



Beman Dawes
-
d:lwg10
LWG10

Dup
Codecvt<>::do unclear
http://cplusplus.github.io/LWG/lwg-closed.html#10



Matt Austern
-
d:lwg100
LWG100

NAD
Insert iterators/ostream_iterators overconstrained
http://cplusplus.github.io/LWG/lwg-closed.html#100



AFNOR
-
d:lwg1000
LWG1000

NAD Concepts
adjacent_find is over-constrained
http://cplusplus.github.io/LWG/lwg-closed.html#1000



Chris Jefferson
-
d:lwg1001
LWG1001

NAD Concepts
Pointers, concepts and headers
http://cplusplus.github.io/LWG/lwg-closed.html#1001



Alisdair Meredith
-
d:lwg1002
LWG1002

NAD
Provide bulk include headers
http://cplusplus.github.io/LWG/lwg-closed.html#1002



Alisdair Meredith
-
d:lwg1003
LWG1003

NAD
Require more useful headers for freestanding implementations
http://cplusplus.github.io/LWG/lwg-closed.html#1003



Alisdair Meredith
-
d:lwg1004
LWG1004

C++11
Clarify "throws an exception"
http://cplusplus.github.io/LWG/lwg-defects.html#1004



Alisdair Meredith
-
d:lwg1005
LWG1005

NAD Concepts
numeric_limits partial specializations not concept enabled
http://cplusplus.github.io/LWG/lwg-closed.html#1005



Alisdair Meredith
-
d:lwg1006
LWG1006

C++11
operator delete in garbage collected implementation
http://cplusplus.github.io/LWG/lwg-defects.html#1006



Alisdair Meredith
-
d:lwg1007
LWG1007

NAD Concepts
throw_with_nested not concept enabled
http://cplusplus.github.io/LWG/lwg-closed.html#1007



Alisdair Meredith
-
d:lwg1008
LWG1008

NAD
nested_exception wording unclear
http://cplusplus.github.io/LWG/lwg-closed.html#1008



Alisdair Meredith
-
d:lwg1009
LWG1009

NAD
InputIterator post-increment dangerous
http://cplusplus.github.io/LWG/lwg-closed.html#1009



Alisdair Meredith
-
d:lwg101
LWG101

NAD Editorial
No way to free storage for vector and deque
http://cplusplus.github.io/LWG/lwg-closed.html#101



AFNOR
-
d:lwg1010
LWG1010

NAD Concepts
operator-= should use default in concept
http://cplusplus.github.io/LWG/lwg-closed.html#1010



Alisdair Meredith
-
d:lwg1011
LWG1011

C++11
next/prev wrong iterator type
http://cplusplus.github.io/LWG/lwg-defects.html#1011



Alisdair Meredith
-
d:lwg1012
LWG1012

C++11
reverse_iterator default ctor should value initialize
http://cplusplus.github.io/LWG/lwg-defects.html#1012



Alisdair Meredith
-
d:lwg1013
LWG1013

NAD Editorial
Remove IsSameType hold-over constraints
http://cplusplus.github.io/LWG/lwg-closed.html#1013



Alisdair Meredith
-
d:lwg1014
LWG1014

C++11
basic_regex should be created/assigned from initializer lists
http://cplusplus.github.io/LWG/lwg-defects.html#1014



Alisdair Meredith
-
d:lwg1015
LWG1015

NAD Concepts
C++ programs - but not users - need to provide support concept_maps
http://cplusplus.github.io/LWG/lwg-closed.html#1015



Alisdair Meredith
-
d:lwg1016
LWG1016

NAD Concepts
Provide LessThanComparable and EqualityComparable for FloatingPointType
http://cplusplus.github.io/LWG/lwg-closed.html#1016



Alisdair Meredith
-
d:lwg1017
LWG1017

NAD Concepts
Floating-point types should not satisfy Regular
http://cplusplus.github.io/LWG/lwg-closed.html#1017



Alisdair Meredith
-
d:lwg1018
LWG1018

NAD Concepts
Trait specifications should be expressed in terms of concepts
http://cplusplus.github.io/LWG/lwg-closed.html#1018



Alisdair Meredith
-
d:lwg1019
LWG1019

C++11
Make integral_constant objects useable in integral-constant-expressions
http://cplusplus.github.io/LWG/lwg-defects.html#1019



Alisdair Meredith
-
d:lwg102
LWG102

Dup
Bug in insert range in associative containers
http://cplusplus.github.io/LWG/lwg-closed.html#102



AFNOR
-
d:lwg1020
LWG1020

NAD
Restore aligned_union
http://cplusplus.github.io/LWG/lwg-closed.html#1020



Alisdair Meredith
-
d:lwg1021
LWG1021

C++11
Allow nullptr_t assignments to unique_ptr
http://cplusplus.github.io/LWG/lwg-defects.html#1021



Alisdair Meredith
-
d:lwg1022
LWG1022

NAD Editorial
Pointer-safety API has nothing to do with smart pointers
http://cplusplus.github.io/LWG/lwg-closed.html#1022



Alisdair Meredith
-
d:lwg1023
LWG1023

NAD Editorial
Unclear inheritance relation for std::function
http://cplusplus.github.io/LWG/lwg-closed.html#1023



Alisdair Meredith
-
d:lwg1024
LWG1024

NAD Concepts
std::function constructors overly generous
http://cplusplus.github.io/LWG/lwg-closed.html#1024



Alisdair Meredith
-
d:lwg1025
LWG1025

LEWG
The library should provide more specializations for std::hash
http://cplusplus.github.io/LWG/lwg-active.html#1025



Alisdair Meredith
-
d:lwg1026
LWG1026

NAD Concepts
Smart pointers need to be concept-constrained templates
http://cplusplus.github.io/LWG/lwg-closed.html#1026



Alisdair Meredith
-
d:lwg1027
LWG1027

NAD Concepts
std::allocator needs to be a concept-constrained template
http://cplusplus.github.io/LWG/lwg-closed.html#1027



Alisdair Meredith
-
d:lwg1028
LWG1028

NAD Concepts
raw_storage_iterator needs to be a concept-constrained template
http://cplusplus.github.io/LWG/lwg-closed.html#1028



Alisdair Meredith
-
d:lwg1029
LWG1029

NAD Concepts
Specialized algorithms for memory management need to be concept-constrained templates
http://cplusplus.github.io/LWG/lwg-closed.html#1029



Alisdair Meredith
-
d:lwg103
LWG103

CD1
set::iterator is required to be modifiable, but this allows modification of keys
http://cplusplus.github.io/LWG/lwg-defects.html#103



AFNOR
-
d:lwg1030
LWG1030

C++11
Missing requirements for smart-pointer safety API
http://cplusplus.github.io/LWG/lwg-defects.html#1030



Alisdair Meredith
-
d:lwg1031
LWG1031

LEWG
Need shared_ptr conversion to a unique_ptr
http://cplusplus.github.io/LWG/lwg-active.html#1031



Alisdair Meredith
-
d:lwg1032
LWG1032

NAD Concepts
Tome utility templates need to be concept-constrained
http://cplusplus.github.io/LWG/lwg-closed.html#1032



Alisdair Meredith
-
d:lwg1033
LWG1033

C++11
thread::join() effects?
http://cplusplus.github.io/LWG/lwg-defects.html#1033



Alberto Ganesh Barbati
-
d:lwg1034
LWG1034

C++11
Clarify generality of Container Requirement tables
http://cplusplus.github.io/LWG/lwg-defects.html#1034



Alisdair Meredith
-
d:lwg1035
LWG1035

NAD
<array>::swap can invalidate references, pointers, and iterators
http://cplusplus.github.io/LWG/lwg-closed.html#1035



Alisdair Meredith
-
d:lwg1036
LWG1036

NAD Concepts
Remove iterator specification that is redundant due to concept constraints
http://cplusplus.github.io/LWG/lwg-closed.html#1036



Alisdair Meredith
-
d:lwg1037
LWG1037

C++11
Unclear status of match_results as library container
http://cplusplus.github.io/LWG/lwg-defects.html#1037



Alisdair Meredith
-
d:lwg1038
LWG1038

C++11
Sequence requirement table needs to reference several new containers
http://cplusplus.github.io/LWG/lwg-defects.html#1038



Alisdair Meredith
-
d:lwg1039
LWG1039

C++11
Sequence container back function should also support const_iterator
http://cplusplus.github.io/LWG/lwg-defects.html#1039



Alisdair Meredith
-
d:lwg104
LWG104

NAD
Description of basic_string::operator[] is unclear
http://cplusplus.github.io/LWG/lwg-closed.html#104



AFNOR
-
d:lwg1040
LWG1040

C++11
Clarify possible sameness of associative container's iterator and const_iterator
http://cplusplus.github.io/LWG/lwg-defects.html#1040



Alisdair Meredith
-
d:lwg1041
LWG1041

Tentatively Resolved
Add associative/unordered container functions that allow to extract elements
http://cplusplus.github.io/LWG/lwg-active.html#1041



Alisdair Meredith
-
d:lwg1042
LWG1042

NAD
Provide ContiguousStorage concept and apply it to corresponding containers
http://cplusplus.github.io/LWG/lwg-closed.html#1042



Alisdair Meredith
-
d:lwg1043
LWG1043

Resolved
Clarify that compare_exchange is not a read-modify-write operation
http://cplusplus.github.io/LWG/lwg-defects.html#1043



Alisdair Meredith
-
d:lwg1044
LWG1044

C++11
Empty tag types should be constexpr literals
http://cplusplus.github.io/LWG/lwg-defects.html#1044



Alisdair Meredith
-
d:lwg1045
LWG1045

C++11
Remove unnecessary preconditions from unique_lock constructor
http://cplusplus.github.io/LWG/lwg-defects.html#1045



Alisdair Meredith
-
d:lwg1046
LWG1046

Resolved
Provide simple facility to start asynchronous operations
http://cplusplus.github.io/LWG/lwg-defects.html#1046



Alisdair Meredith
-
d:lwg1047
LWG1047

Resolved
Ensure that future's get() blocks when not ready
http://cplusplus.github.io/LWG/lwg-defects.html#1047



Alisdair Meredith
-
d:lwg1048
LWG1048

Resolved
Provide empty-state inspection for std::unique_future
http://cplusplus.github.io/LWG/lwg-defects.html#1048



Alisdair Meredith
-
d:lwg1049
LWG1049

Resolved
Move assignment of promise inverted
http://cplusplus.github.io/LWG/lwg-defects.html#1049



Alisdair Meredith
-
d:lwg105
LWG105

Dup
fstream ctors argument types desired
http://cplusplus.github.io/LWG/lwg-closed.html#105



AFNOR
-
d:lwg1050
LWG1050

Resolved
Clarify postconditions for get_future()
http://cplusplus.github.io/LWG/lwg-defects.html#1050



Alisdair Meredith
-
d:lwg1051
LWG1051

NAD
Specify subscript operation return types of reverse_iterator and move_iterator
http://cplusplus.github.io/LWG/lwg-closed.html#1051



Alisdair Meredith
-
d:lwg1052
LWG1052

LEWG
reverse_iterator::operator-> should also support smart pointers
http://cplusplus.github.io/LWG/lwg-active.html#1052



Alisdair Meredith
-
d:lwg1053
LWG1053

LEWG
Unify algorithms with operator and function object variants
http://cplusplus.github.io/LWG/lwg-active.html#1053



Alisdair Meredith
-
d:lwg1054
LWG1054

Resolved
forward broken
http://cplusplus.github.io/LWG/lwg-defects.html#1054



Howard Hinnant
-
d:lwg1055
LWG1055

Resolved
Provide a trait that returns the underlying type of an enumeration type
http://cplusplus.github.io/LWG/lwg-defects.html#1055



Alisdair Meredith
-
d:lwg1056
LWG1056

NAD
Must all Engines and Distributions be Streamable?
http://cplusplus.github.io/LWG/lwg-closed.html#1056



Alisdair Meredith
-
d:lwg1057
LWG1057

NAD Concepts
RandomNumberEngineAdaptor
http://cplusplus.github.io/LWG/lwg-closed.html#1057



Alisdair Meredith
-
d:lwg1058
LWG1058

NAD Editorial
New container issue
http://cplusplus.github.io/LWG/lwg-closed.html#1058



Alisdair Meredith
-
d:lwg1059
LWG1059

NAD Concepts
Usage of no longer existing FunctionType concept
http://cplusplus.github.io/LWG/lwg-closed.html#1059



Daniel Krügler
-
d:lwg106
LWG106

TC1
Numeric library private members are implementation defined
http://cplusplus.github.io/LWG/lwg-defects.html#106



AFNOR
-
d:lwg1060
LWG1060

NAD Editorial
Embedded nulls in NTBS
http://cplusplus.github.io/LWG/lwg-closed.html#1060



Alisdair Meredith
-
d:lwg1061
LWG1061

NAD Editorial
Bad indexing for tuple access to pair (Editorial?)
http://cplusplus.github.io/LWG/lwg-closed.html#1061



Alisdair Meredith
-
d:lwg1062
LWG1062

NAD
Missing insert_iterator for stacks/queues
http://cplusplus.github.io/LWG/lwg-closed.html#1062



Alisdair Meredith
-
d:lwg1063
LWG1063

NAD Concepts
03 iterator compatibilty
http://cplusplus.github.io/LWG/lwg-closed.html#1063



Alisdair Meredith
-
d:lwg1064
LWG1064

NAD
Term "object state" should not refer to classes
http://cplusplus.github.io/LWG/lwg-closed.html#1064



Howard Hinnant
-
d:lwg1065
LWG1065

C++11
Allow inline namespaces within namespace std for implementations
http://cplusplus.github.io/LWG/lwg-defects.html#1065



Howard Hinnant
-
d:lwg1066
LWG1066

C++11
Use [[noreturn]] attribute in the library
http://cplusplus.github.io/LWG/lwg-defects.html#1066



Howard Hinnant
-
d:lwg1067
LWG1067

NAD Concepts
simplified wording for inner_product
http://cplusplus.github.io/LWG/lwg-closed.html#1067



Alisdair Meredith
-
d:lwg1068
LWG1068

NAD
class random_device should be movable
http://cplusplus.github.io/LWG/lwg-closed.html#1068



Alisdair Meredith
-
d:lwg1069
LWG1069

NAD
class seed_seq should support efficient move operations
http://cplusplus.github.io/LWG/lwg-closed.html#1069



Alisdair Meredith
-
d:lwg107
LWG107

NAD
Valarray constructor is strange
http://cplusplus.github.io/LWG/lwg-closed.html#107



AFNOR
-
d:lwg1070
LWG1070

C++11
Ambiguous move overloads in function
http://cplusplus.github.io/LWG/lwg-defects.html#1070



Howard Hinnant
-
d:lwg1071
LWG1071

C++11
is_bind_expression should derive from integral_constant<bool>
http://cplusplus.github.io/LWG/lwg-defects.html#1071



Alisdair Meredith
-
d:lwg1072
LWG1072

NAD Concepts
Is std::hash a constrained template or not?
http://cplusplus.github.io/LWG/lwg-closed.html#1072



Alisdair Meredith
-
d:lwg1073
LWG1073

C++11
Declaration of allocator_arg should be constexpr
http://cplusplus.github.io/LWG/lwg-defects.html#1073



Alisdair Meredith
-
d:lwg1074
LWG1074

NAD Concepts
concept map broken by N2840
http://cplusplus.github.io/LWG/lwg-closed.html#1074



Alisdair Meredith
-
d:lwg1075
LWG1075

Resolved
Scoped allocators are too complex
http://cplusplus.github.io/LWG/lwg-defects.html#1075



Alan Talbot
-
d:lwg1076
LWG1076

NAD Concepts
unary/binary_negate need constraining and move support
http://cplusplus.github.io/LWG/lwg-closed.html#1076



Alisdair Meredith
-
d:lwg1077
LWG1077

NAD Editorial
Nonesense tuple declarations
http://cplusplus.github.io/LWG/lwg-closed.html#1077



Pete Becker
-
d:lwg1078
LWG1078

NAD Concepts
DE-17: Remove class type_index
http://cplusplus.github.io/LWG/lwg-closed.html#1078



Doug Gregor
-
d:lwg1079
LWG1079

C++11
UK-265: RandomAccessIterator's operator- has nonsensical effects clause
http://cplusplus.github.io/LWG/lwg-defects.html#1079



Doug Gregor
-
d:lwg108
LWG108

TC1
Lifetime of exception::what() return unspecified
http://cplusplus.github.io/LWG/lwg-defects.html#108



AFNOR
-
d:lwg1080
LWG1080

NAD Concepts
Concept ArithmeticLike should provide explicit boolean conversion
http://cplusplus.github.io/LWG/lwg-closed.html#1080



Daniel Krügler
-
d:lwg1081
LWG1081

NAD Concepts
basic_string needs to be a concept-constrained template
http://cplusplus.github.io/LWG/lwg-closed.html#1081



Howard Hinnant
-
d:lwg1082
LWG1082

NAD Concepts
codecvt needs to be a concept-constrained template
http://cplusplus.github.io/LWG/lwg-closed.html#1082



Howard Hinnant
-
d:lwg1083
LWG1083

NAD Concepts
InputIterator and OutputIterator template parameters need to be concept constraints
http://cplusplus.github.io/LWG/lwg-closed.html#1083



Howard Hinnant
-
d:lwg1084
LWG1084

NAD Concepts
Concept ForwardIterator should provide default implementation for post-increment
http://cplusplus.github.io/LWG/lwg-closed.html#1084



Howard Hinnant
-
d:lwg1085
LWG1085

NAD Concepts
BidirectionalIterator concept should provide default implementation for post-decrement
http://cplusplus.github.io/LWG/lwg-closed.html#1085



Howard Hinnant
-
d:lwg1086
LWG1086

NAD Concepts
Stream iterators need to be concept-constrained templates
http://cplusplus.github.io/LWG/lwg-closed.html#1086



Howard Hinnant
-
d:lwg1087
LWG1087

NAD Concepts
Incorrect OutputIterator concept requirements for replace algorithms
http://cplusplus.github.io/LWG/lwg-closed.html#1087



Howard Hinnant
-
d:lwg1088
LWG1088

Resolved
std::promise should provide non-member swap overload
http://cplusplus.github.io/LWG/lwg-defects.html#1088



Howard Hinnant
-
d:lwg1089
LWG1089

C++11
Unify "Throws: Nothing." specifications
http://cplusplus.github.io/LWG/lwg-defects.html#1089



Howard Hinnant
-
d:lwg109
LWG109

CD1
Missing binders for non-const sequence elements
http://cplusplus.github.io/LWG/lwg-defects.html#109



Bjarne Stroustrup
-
d:lwg1090
LWG1090

Resolved
Missing description of packaged_task member swap, missing non-member swap
http://cplusplus.github.io/LWG/lwg-defects.html#1090



Daniel Krügler
-
d:lwg1091
LWG1091

NAD
Multimap description confusing
http://cplusplus.github.io/LWG/lwg-closed.html#1091



LWG
-
d:lwg1092
LWG1092

NAD Concepts
Class template integral_constant should be a constrained template
http://cplusplus.github.io/LWG/lwg-closed.html#1092



Daniel Krügler
-
d:lwg1093
LWG1093

Resolved
Multiple definitions for random_shuffle algorithm
http://cplusplus.github.io/LWG/lwg-defects.html#1093



Alisdair Meredith
-
d:lwg1094
LWG1094

C++11
Replace "unspecified-bool-type" by "explicit operator bool() const" in I/O library
http://cplusplus.github.io/LWG/lwg-defects.html#1094



P.J. Plauger
-
d:lwg1095
LWG1095

C++11
Shared objects and the library wording unclear
http://cplusplus.github.io/LWG/lwg-defects.html#1095



Beman Dawes
-
d:lwg1096
LWG1096

NAD Concepts
unconstrained rvalue ref parameters
http://cplusplus.github.io/LWG/lwg-closed.html#1096



David Abrahams
-
d:lwg1097
LWG1097

C++11
#define __STDCPP_THREADS
http://cplusplus.github.io/LWG/lwg-defects.html#1097



Jens Maurer
-
d:lwg1098
LWG1098

C++11
definition of get_pointer_safety()
http://cplusplus.github.io/LWG/lwg-defects.html#1098



Jens Maurer
-
d:lwg1099
LWG1099

NAD
Various issues
http://cplusplus.github.io/LWG/lwg-closed.html#1099



David Abrahams
-
d:lwg11
LWG11

TC1
Bitset minor problems
http://cplusplus.github.io/LWG/lwg-defects.html#11



Matt Austern
-
d:lwg110
LWG110

TC1
istreambuf_iterator::equal not const
http://cplusplus.github.io/LWG/lwg-defects.html#110



Nathan Myers
-
d:lwg1100
LWG1100

Resolved
auto_ptr to unique_ptr conversion
http://cplusplus.github.io/LWG/lwg-defects.html#1100



Howard Hinnant
-
d:lwg1101
LWG1101

NAD Editorial
unique requirements
http://cplusplus.github.io/LWG/lwg-closed.html#1101



Howard Hinnant
-
d:lwg1102
LWG1102

NAD
std::vector's reallocation policy still unclear
http://cplusplus.github.io/LWG/lwg-closed.html#1102



Daniel Krügler
-
d:lwg1103
LWG1103

C++11
system_error constructor postcondition overly strict
http://cplusplus.github.io/LWG/lwg-defects.html#1103



Howard Hinnant
-
d:lwg1104
LWG1104

C++11
basic_ios::move should accept lvalues
http://cplusplus.github.io/LWG/lwg-defects.html#1104



Howard Hinnant
-
d:lwg1105
LWG1105

NAD Concepts
Shouldn't Range be an auto concept
http://cplusplus.github.io/LWG/lwg-closed.html#1105



David Abrahams
-
d:lwg1106
LWG1106

Resolved
Multiple exceptions from connected shared_future::get()?
http://cplusplus.github.io/LWG/lwg-defects.html#1106



Thomas J. Gritzan
-
d:lwg1107
LWG1107

NAD Editorial
constructor shared_future(unique_future) by value?
http://cplusplus.github.io/LWG/lwg-closed.html#1107



Thomas J. Gritzan
-
d:lwg1108
LWG1108

C++11
thread.req.exception overly constrains implementations
http://cplusplus.github.io/LWG/lwg-defects.html#1108



Christopher Kohlhoff
-
d:lwg1109
LWG1109

NAD Concepts
std::includes should require CopyConstructible predicate
http://cplusplus.github.io/LWG/lwg-closed.html#1109



Alisdair Meredith
-
d:lwg111
LWG111

NAD
istreambuf_iterator::equal overspecified, inefficient
http://cplusplus.github.io/LWG/lwg-closed.html#111



Nathan Myers
-
d:lwg1110
LWG1110

C++11
Is for_each overconstrained?
http://cplusplus.github.io/LWG/lwg-defects.html#1110



Alisdair Meredith
-
d:lwg1111
LWG1111

NAD Concepts
associative containers underconstrained
http://cplusplus.github.io/LWG/lwg-closed.html#1111



Alisdair Meredith
-
d:lwg1112
LWG1112

LEWG
bitsets and new style for loop
http://cplusplus.github.io/LWG/lwg-active.html#1112



Alisdair Meredith
-
d:lwg1113
LWG1113

C++11
bitset::to_string could be simplified
http://cplusplus.github.io/LWG/lwg-defects.html#1113



Alisdair Meredith
-
d:lwg1114
LWG1114

C++11
Type traits underspecified
http://cplusplus.github.io/LWG/lwg-defects.html#1114



Daniel Krügler
-
d:lwg1115
LWG1115

NAD Editorial
va_copy missing from Standard macros table
http://cplusplus.github.io/LWG/lwg-closed.html#1115



Miles Zhao
-
d:lwg1116
LWG1116

Resolved
Literal constructors for tuple
http://cplusplus.github.io/LWG/lwg-defects.html#1116



Alisdair Meredith
-
d:lwg1117
LWG1117

Resolved
tuple copy constructor
http://cplusplus.github.io/LWG/lwg-defects.html#1117



Alisdair Meredith
-
d:lwg1118
LWG1118

C++11
tuple query APIs do not support cv-qualification
http://cplusplus.github.io/LWG/lwg-defects.html#1118



Alisdair Meredith
-
d:lwg1119
LWG1119

NAD
tuple query APIs do not support references
http://cplusplus.github.io/LWG/lwg-closed.html#1119



Alisdair Meredith
-
d:lwg112
LWG112

TC1
Minor typo in ostreambuf_iterator constructor
http://cplusplus.github.io/LWG/lwg-defects.html#112



Matt Austern
-
d:lwg1120
LWG1120

LEWG
New type trait - remove_all
http://cplusplus.github.io/LWG/lwg-active.html#1120



Alisdair Meredith
-
d:lwg1121
LWG1121

LEWG
Support for multiple arguments
http://cplusplus.github.io/LWG/lwg-active.html#1121



Alisdair Meredith
-
d:lwg1122
LWG1122

Resolved
Ratio values should be constexpr
http://cplusplus.github.io/LWG/lwg-defects.html#1122



Alisdair Meredith
-
d:lwg1123
LWG1123

C++11
No requirement that standard streams be flushed
http://cplusplus.github.io/LWG/lwg-defects.html#1123



James Kanze
-
d:lwg1124
LWG1124

NAD Concepts
Invalid definition of concept RvalueOf
http://cplusplus.github.io/LWG/lwg-closed.html#1124



Daniel Krügler
-
d:lwg1125
LWG1125

NAD
ostream_iterator does not work with movable types
http://cplusplus.github.io/LWG/lwg-closed.html#1125



Alisdair Meredith
-
d:lwg1126
LWG1126

C++11
istreambuff_iterator::equal needs a const & parameter
http://cplusplus.github.io/LWG/lwg-defects.html#1126



Alisdair Meredith
-
d:lwg1127
LWG1127

NAD Concepts
rvalue references and iterator traits
http://cplusplus.github.io/LWG/lwg-closed.html#1127



Alisdair Meredith
-
d:lwg1128
LWG1128

NAD Concepts
Missing definition of iterator_traits<T*>
http://cplusplus.github.io/LWG/lwg-closed.html#1128



Alisdair Meredith
-
d:lwg1129
LWG1129

Resolved
istream(buf)_iterator should support literal sentinel value
http://cplusplus.github.io/LWG/lwg-defects.html#1129



Alisdair Meredith
-
d:lwg113
LWG113

NAD
Missing/extra iostream sync semantics
http://cplusplus.github.io/LWG/lwg-closed.html#113



Steve Clamage
-
d:lwg1130
LWG1130

C++11
copy_exception name misleading
http://cplusplus.github.io/LWG/lwg-defects.html#1130



Peter Dimov
-
d:lwg1131
LWG1131

C++11
C++0x does not need alignment_of
http://cplusplus.github.io/LWG/lwg-defects.html#1131



Niels Dekker
-
d:lwg1132
LWG1132

NAD
JP-30: nested exceptions
http://cplusplus.github.io/LWG/lwg-closed.html#1132



Seiji Hayashida
-
d:lwg1133
LWG1133

C++11
Does N2844 break current specification of list::splice?
http://cplusplus.github.io/LWG/lwg-defects.html#1133



Alisdair Meredith
-
d:lwg1134
LWG1134

C++11
Redundant specification of <stdint.h>, <fenv.h>, <tgmath.h>, and maybe <complex.h>
http://cplusplus.github.io/LWG/lwg-defects.html#1134



Robert Klarer
-
d:lwg1135
LWG1135

Resolved
exception_ptr should support contextual conversion to bool
http://cplusplus.github.io/LWG/lwg-defects.html#1135



Daniel Krügler
-
d:lwg1136
LWG1136

C++11
Incomplete specification of nested_exception::rethrow_nested()
http://cplusplus.github.io/LWG/lwg-defects.html#1136



Daniel Krügler
-
d:lwg1137
LWG1137

C++11
Return type of conj and proj
http://cplusplus.github.io/LWG/lwg-defects.html#1137



Marc Steinbach
-
d:lwg1138
LWG1138

C++11
Unusual return value for operator+
http://cplusplus.github.io/LWG/lwg-defects.html#1138



Alisdair Meredith
-
d:lwg1139
LWG1139

NAD Concepts
Thread support library not concept enabled
http://cplusplus.github.io/LWG/lwg-closed.html#1139



LWG
-
d:lwg114
LWG114

TC1
Placement forms example in error twice
http://cplusplus.github.io/LWG/lwg-defects.html#114



Steve Clamage
-
d:lwg1140
LWG1140

NAD Concepts
Numerics library not concept enabled
http://cplusplus.github.io/LWG/lwg-closed.html#1140



LWG
-
d:lwg1141
LWG1141

NAD Concepts
Input/Output library not concept enabled
http://cplusplus.github.io/LWG/lwg-closed.html#1141



LWG
-
d:lwg1142
LWG1142

NAD Concepts
Regular expressions library not concept enabled
http://cplusplus.github.io/LWG/lwg-closed.html#1142



LWG
-
d:lwg1143
LWG1143

Resolved
Atomic operations library not concept enabled
http://cplusplus.github.io/LWG/lwg-defects.html#1143



LWG
-
d:lwg1144
LWG1144

C++11
"thread safe" is undefined
http://cplusplus.github.io/LWG/lwg-defects.html#1144



LWG
-
d:lwg1145
LWG1145

Resolved
Inappropriate headers for atomics
http://cplusplus.github.io/LWG/lwg-defects.html#1145



LWG
-
d:lwg1146
LWG1146

Resolved
"lockfree" does not say enough
http://cplusplus.github.io/LWG/lwg-defects.html#1146



Jeffrey Yasskin
-
d:lwg1147
LWG1147

Resolved
Non-volatile atomic functions
http://cplusplus.github.io/LWG/lwg-defects.html#1147



Jeffrey Yasskin
-
d:lwg1148
LWG1148

NAD
Wrong argument type of I/O stream manipulators setprecision() and setw()
http://cplusplus.github.io/LWG/lwg-closed.html#1148



Marc Steinbach
-
d:lwg1149
LWG1149

NAD Concepts
Reformulating NonemptyRange axiom
http://cplusplus.github.io/LWG/lwg-closed.html#1149



Walter Brown
-
d:lwg115
LWG115

TC1
Typo in strstream constructors
http://cplusplus.github.io/LWG/lwg-defects.html#115



Steve Clamage
-
d:lwg1150
LWG1150

LEWG
wchar_t, char16_t and char32_t filenames
http://cplusplus.github.io/LWG/lwg-active.html#1150



LWG
-
d:lwg1151
LWG1151

Resolved
Behavior of the library in the presence of threads is incompletely specified
http://cplusplus.github.io/LWG/lwg-defects.html#1151



LWG
-
d:lwg1152
LWG1152

C++11
Expressions parsed differently than intended
http://cplusplus.github.io/LWG/lwg-defects.html#1152



Seungbeom Kim
-
d:lwg1153
LWG1153

NAD
Standard library needs review for constructors to be explicit to avoid treatment as initializer-list constructor
http://cplusplus.github.io/LWG/lwg-closed.html#1153



LWG
-
d:lwg1154
LWG1154

LEWG
complex should accept integral types
http://cplusplus.github.io/LWG/lwg-active.html#1154



LWG
-
d:lwg1155
LWG1155

NAD Editorial
Reference should be to C99
http://cplusplus.github.io/LWG/lwg-closed.html#1155



LWG
-
d:lwg1156
LWG1156

NAD
Constraints on bitmask and enumeration types to be tightened
http://cplusplus.github.io/LWG/lwg-closed.html#1156



LWG
-
d:lwg1157
LWG1157

C++11
Local types can now instantiate templates
http://cplusplus.github.io/LWG/lwg-defects.html#1157



LWG
-
d:lwg1158
LWG1158

C++11
Encouragement to use monotonic clock
http://cplusplus.github.io/LWG/lwg-defects.html#1158



LWG
-
d:lwg1159
LWG1159

C++11
Unclear spec for resource_deadlock_would_occur
http://cplusplus.github.io/LWG/lwg-defects.html#1159



LWG
-
d:lwg116
LWG116

Dup
bitset cannot be constructed with a const char*
http://cplusplus.github.io/LWG/lwg-closed.html#116



Judy Ward
-
d:lwg1160
LWG1160

Resolved
future_error public constructor is 'exposition only'
http://cplusplus.github.io/LWG/lwg-defects.html#1160



LWG
-
d:lwg1161
LWG1161

Resolved
Unnecessary unique_future limitations
http://cplusplus.github.io/LWG/lwg-defects.html#1161



LWG
-
d:lwg1162
LWG1162

Resolved
shared_future should support an efficient move constructor
http://cplusplus.github.io/LWG/lwg-defects.html#1162



LWG
-
d:lwg1163
LWG1163

Resolved
shared_future is inconsistent with shared_ptr
http://cplusplus.github.io/LWG/lwg-defects.html#1163



LWG
-
d:lwg1164
LWG1164

NAD
promise::swap should pass by rvalue reference
http://cplusplus.github.io/LWG/lwg-closed.html#1164



LWG
-
d:lwg1165
LWG1165

Resolved
Unneeded promise move constructor
http://cplusplus.github.io/LWG/lwg-defects.html#1165



LWG
-
d:lwg1166
LWG1166

Resolved
Allocator-specific move/copy break model of move-constructor and move-assignment
http://cplusplus.github.io/LWG/lwg-defects.html#1166



LWG
-
d:lwg1167
LWG1167

NAD Concepts
pair<T,U> doesn't model LessThanComparable in unconstrained code even if T and U do.
http://cplusplus.github.io/LWG/lwg-closed.html#1167



Dave Abrahams
-
d:lwg1168
LWG1168

NAD Editorial
Odd wording for bitset equality operators
http://cplusplus.github.io/LWG/lwg-closed.html#1168



Alisdair Meredith
-
d:lwg1169
LWG1169

WP
num_get not fully compatible with strto*
http://cplusplus.github.io/LWG/lwg-defects.html#1169



Cosmin Truta
-
d:lwg117
LWG117

CD1
basic_ostream uses nonexistent num_put member functions
http://cplusplus.github.io/LWG/lwg-defects.html#117



Matt Austern
-
d:lwg1170
LWG1170

C++11
String char-like types no longer PODs
http://cplusplus.github.io/LWG/lwg-defects.html#1170



Beman Dawes
-
d:lwg1171
LWG1171

C++11
duration types should be literal
http://cplusplus.github.io/LWG/lwg-defects.html#1171



Alisdair Meredith
-
d:lwg1172
LWG1172

Resolved
select_on_container_(copy|move)_construction over-constrained
http://cplusplus.github.io/LWG/lwg-defects.html#1172



Alberto Ganesh Barbati
-
d:lwg1173
LWG1173

Open
"Equivalence" wishy-washiness
http://cplusplus.github.io/LWG/lwg-active.html#1173



David Abrahams
-
d:lwg1174
LWG1174

Resolved
Type property predicates
http://cplusplus.github.io/LWG/lwg-defects.html#1174



Jason Merrill
-
d:lwg1175
LWG1175

Open
unordered complexity
http://cplusplus.github.io/LWG/lwg-active.html#1175



Pablo Halpern
-
d:lwg1176
LWG1176

NAD
Make thread constructor non-variadic
http://cplusplus.github.io/LWG/lwg-closed.html#1176



Howard Hinnant
-
d:lwg1177
LWG1177

C++11
Improve "diagnostic required" wording
http://cplusplus.github.io/LWG/lwg-defects.html#1177



Howard Hinnant
-
d:lwg1178
LWG1178

C++11
Header dependencies
http://cplusplus.github.io/LWG/lwg-defects.html#1178



Beman Dawes
-
d:lwg1179
LWG1179

NAD Editorial
Probably editorial in [structure.specifications]
http://cplusplus.github.io/LWG/lwg-closed.html#1179



Robert Klarer
-
d:lwg118
LWG118

CD1
basic_istream uses nonexistent num_get member functions
http://cplusplus.github.io/LWG/lwg-defects.html#118



Matt Austern
-
d:lwg1180
LWG1180

C++11
Missing string_type member typedef in class sub_match
http://cplusplus.github.io/LWG/lwg-defects.html#1180



Daniel Krügler
-
d:lwg1181
LWG1181

C++11
Invalid sub_match comparison operators
http://cplusplus.github.io/LWG/lwg-defects.html#1181



Daniel Krügler
-
d:lwg1182
LWG1182

C++11
Unfortunate hash dependencies
http://cplusplus.github.io/LWG/lwg-defects.html#1182



Alisdair Meredith
-
d:lwg1183
LWG1183

C++11
basic_ios::set_rdbuf may break class invariants
http://cplusplus.github.io/LWG/lwg-defects.html#1183



Daniel Krügler
-
d:lwg1184
LWG1184

LEWG
Feature request: dynamic bitset
http://cplusplus.github.io/LWG/lwg-active.html#1184



Alisdair Meredith
-
d:lwg1185
LWG1185

Resolved
Iterator categories and output iterators
http://cplusplus.github.io/LWG/lwg-defects.html#1185



Alisdair Meredith
-
d:lwg1186
LWG1186

NAD Concepts
Forward list could model a stack
http://cplusplus.github.io/LWG/lwg-closed.html#1186



Alisdair Meredith
-
d:lwg1187
LWG1187

C++11
std::decay
http://cplusplus.github.io/LWG/lwg-defects.html#1187



Jason Merrill
-
d:lwg1188
LWG1188

LEWG
Unordered containers should have a minimum load factor as well as a maximum
http://cplusplus.github.io/LWG/lwg-active.html#1188



Matt Austern
-
d:lwg1189
LWG1189

C++11
Awkward interface for changing the number of buckets in an unordered associative container
http://cplusplus.github.io/LWG/lwg-defects.html#1189



Matt Austern
-
d:lwg119
LWG119

TC1
Should virtual functions be allowed to strengthen the exception specification?
http://cplusplus.github.io/LWG/lwg-defects.html#119



Judy Ward
-
d:lwg1190
LWG1190

NAD
Setting the maximum load factor should return the previous value
http://cplusplus.github.io/LWG/lwg-closed.html#1190



Matt Austern
-
d:lwg1191
LWG1191

C++11
tuple get API should respect rvalues
http://cplusplus.github.io/LWG/lwg-defects.html#1191



Alisdair Meredith
-
d:lwg1192
LWG1192

C++11
basic_string missing definitions for cbegin / cend / crbegin / crend
http://cplusplus.github.io/LWG/lwg-defects.html#1192



Jonathan Wakely
-
d:lwg1193
LWG1193

C++11
default_delete cannot be instantiated with incomplete types
http://cplusplus.github.io/LWG/lwg-defects.html#1193



Daniel Krügler
-
d:lwg1194
LWG1194

C++11
Unintended queue constructor
http://cplusplus.github.io/LWG/lwg-defects.html#1194



Howard Hinnant
-
d:lwg1195
LWG1195

C++11
"Diagnostic required" wording is insufficient to prevent UB
http://cplusplus.github.io/LWG/lwg-defects.html#1195



Daniel Krügler
-
d:lwg1196
LWG1196

Resolved
move semantics undefined for priority_queue
http://cplusplus.github.io/LWG/lwg-defects.html#1196



Alisdair Meredith
-
d:lwg1197
LWG1197

C++11
Can unordered containers have bucket_count() == 0?
http://cplusplus.github.io/LWG/lwg-defects.html#1197



Howard Hinnant
-
d:lwg1198
LWG1198

C++11
Container adaptor swap: member or non-member?
http://cplusplus.github.io/LWG/lwg-defects.html#1198



Pablo Halpern
-
d:lwg1199
LWG1199

C++11
Missing extended copy constructor in container adaptors
http://cplusplus.github.io/LWG/lwg-defects.html#1199



Pablo Halpern
-
d:lwg12
LWG12

NAD
Way objects hold allocators unclear
http://cplusplus.github.io/LWG/lwg-closed.html#12



Angelika Langer
-
d:lwg120
LWG120

CD1
Can an implementor add specializations?
http://cplusplus.github.io/LWG/lwg-defects.html#120



Judy Ward
-
d:lwg1200
LWG1200

NAD
"surprising" char_traits<T>::int_type requirements
http://cplusplus.github.io/LWG/lwg-closed.html#1200



Sean Hunt
-
d:lwg1201
LWG1201

LEWG
Do we always want to unwrap ref-wrappers in make_tuple
http://cplusplus.github.io/LWG/lwg-active.html#1201



Alisdair Meredith
-
d:lwg1202
LWG1202

NAD
integral_constant needs a spring clean
http://cplusplus.github.io/LWG/lwg-closed.html#1202



Alisdair Meredith
-
d:lwg1203
LWG1203

LEWG
More useful rvalue stream insertion
http://cplusplus.github.io/LWG/lwg-active.html#1203



Howard Hinnant
-
d:lwg1204
LWG1204

C++11
Global permission to move
http://cplusplus.github.io/LWG/lwg-defects.html#1204



Howard Hinnant
-
d:lwg1205
LWG1205

C++11
Some algorithms could more clearly document their handling of empty ranges
http://cplusplus.github.io/LWG/lwg-defects.html#1205



Alisdair Meredith
-
d:lwg1206
LWG1206

C++11
Incorrect requires for move_backward and copy_backward
http://cplusplus.github.io/LWG/lwg-defects.html#1206



Howard Hinnant
-
d:lwg1207
LWG1207

C++11
Underspecified std::list operations?
http://cplusplus.github.io/LWG/lwg-defects.html#1207



Loïc Joly
-
d:lwg1208
LWG1208

C++11
valarray initializer_list constructor has incorrect effects
http://cplusplus.github.io/LWG/lwg-defects.html#1208



Howard Hinnant
-
d:lwg1209
LWG1209

C++11
match_results should be moveable
http://cplusplus.github.io/LWG/lwg-defects.html#1209



Stephan T. Lavavej
-
d:lwg121
LWG121

NAD
Detailed definition for ctype<wchar_t> specialization
http://cplusplus.github.io/LWG/lwg-closed.html#121



Judy Ward
-
d:lwg1210
LWG1210

Resolved
Iterator reachability should not require a container
http://cplusplus.github.io/LWG/lwg-defects.html#1210



Alisdair Meredith
-
d:lwg1211
LWG1211

Resolved
Move iterators should be restricted as input iterators
http://cplusplus.github.io/LWG/lwg-defects.html#1211



Alisdair Meredith
-
d:lwg1212
LWG1212

Resolved
result of post-increment/decrement operator
http://cplusplus.github.io/LWG/lwg-defects.html#1212



Alisdair Meredith
-
d:lwg1213
LWG1213

Open
Meaning of valid and singular iterator underspecified
http://cplusplus.github.io/LWG/lwg-active.html#1213



Daniel Krügler
-
d:lwg1214
LWG1214

C++14
Insufficient/inconsistent key immutability requirements for associative containers
http://cplusplus.github.io/LWG/lwg-defects.html#1214



Daniel Krügler
-
d:lwg1215
LWG1215

C++11
list::merge with unequal allocators
http://cplusplus.github.io/LWG/lwg-defects.html#1215



Pablo Halpern
-
d:lwg1216
LWG1216

C++11
LWG 1066 Incomplete?
http://cplusplus.github.io/LWG/lwg-defects.html#1216



Pete Becker
-
d:lwg1217
LWG1217

LEWG
Quaternion support
http://cplusplus.github.io/LWG/lwg-active.html#1217



Ted Shaneyfelt
-
d:lwg1218
LWG1218

C++11
mutex destructor synchronization
http://cplusplus.github.io/LWG/lwg-defects.html#1218



Jeffrey Yasskin
-
d:lwg1219
LWG1219

Dup
unique_lock::lock and resource_deadlock_would_occur
http://cplusplus.github.io/LWG/lwg-closed.html#1219



Jeffrey Yasskin
-
d:lwg122
LWG122

TC1
streambuf/wstreambuf description should not say they are specializations
http://cplusplus.github.io/LWG/lwg-defects.html#122



Judy Ward
-
d:lwg1220
LWG1220

C++11
What does condition_variable wait on?
http://cplusplus.github.io/LWG/lwg-defects.html#1220



Jeffrey Yasskin
-
d:lwg1221
LWG1221

C++11
condition_variable wording
http://cplusplus.github.io/LWG/lwg-defects.html#1221



Jeffrey Yasskin
-
d:lwg1222
LWG1222

C++11
condition_variable incorrect effects for exception safety
http://cplusplus.github.io/LWG/lwg-defects.html#1222



Jeffrey Yasskin
-
d:lwg1223
LWG1223

NAD
condition_variable_any lock matching?
http://cplusplus.github.io/LWG/lwg-closed.html#1223



Jeffrey Yasskin
-
d:lwg1224
LWG1224

NAD
condition_variable_any support for recursive mutexes?
http://cplusplus.github.io/LWG/lwg-closed.html#1224



Jeffrey Yasskin
-
d:lwg1225
LWG1225

Resolved
C++0x result_of issue
http://cplusplus.github.io/LWG/lwg-defects.html#1225



Sebastian Gesemann
-
d:lwg1226
LWG1226

Resolved
Incomplete changes of #890
http://cplusplus.github.io/LWG/lwg-defects.html#1226



Daniel Krügler
-
d:lwg1227
LWG1227

C++11
<bitset> synopsis overspecified
http://cplusplus.github.io/LWG/lwg-defects.html#1227



Bo Persson
-
d:lwg1228
LWG1228

NAD
User-specialized nothrow type traits
http://cplusplus.github.io/LWG/lwg-closed.html#1228



Alisdair Meredith
-
d:lwg1229
LWG1229

Resolved
error_code operator= typo
http://cplusplus.github.io/LWG/lwg-defects.html#1229



Stephan T. Lavavej
-
d:lwg123
LWG123

CD1
Should valarray helper arrays fill functions be const?
http://cplusplus.github.io/LWG/lwg-defects.html#123



Judy Ward
-
d:lwg1230
LWG1230

Dup
mem_fn and variadic templates
http://cplusplus.github.io/LWG/lwg-closed.html#1230



Alisdair Meredith
-
d:lwg1231
LWG1231

C++11
weak_ptr comparisons incompletely resolved
http://cplusplus.github.io/LWG/lwg-defects.html#1231



Daniel Krügler
-
d:lwg1232
LWG1232

NAD Editorial
Still swap's with rvalue-references
http://cplusplus.github.io/LWG/lwg-closed.html#1232



Daniel Krügler
-
d:lwg1233
LWG1233

NAD Editorial
Missing unique_ptr signatures in synopsis
http://cplusplus.github.io/LWG/lwg-closed.html#1233



Daniel Krügler
-
d:lwg1234
LWG1234

C++11
"Do the right thing" and NULL
http://cplusplus.github.io/LWG/lwg-defects.html#1234



Matt Austern
-
d:lwg1235
LWG1235

LEWG
Issue with C++0x random number proposal
http://cplusplus.github.io/LWG/lwg-active.html#1235



Matthias Troyer
-
d:lwg1236
LWG1236

NAD
reserved identifiers in programs not using the library
http://cplusplus.github.io/LWG/lwg-closed.html#1236



Sean Hunt
-
d:lwg1237
LWG1237

C++11
Constrained error_code/error_condition members
http://cplusplus.github.io/LWG/lwg-defects.html#1237



Daniel Krügler
-
d:lwg1238
LWG1238

LEWG
defining algorithms taking iterator for range
http://cplusplus.github.io/LWG/lwg-active.html#1238



Alisdair Meredith
-
d:lwg1239
LWG1239

NAD Editorial
Defect report
http://cplusplus.github.io/LWG/lwg-closed.html#1239



David Abrahams
-
d:lwg124
LWG124

TC1
ctype_byname<charT>::do_scan_is & do_scan_not return type should be const charT*
http://cplusplus.github.io/LWG/lwg-defects.html#124



Judy Ward
-
d:lwg1240
LWG1240

C++11
Deleted comparison functions of std::function not needed
http://cplusplus.github.io/LWG/lwg-defects.html#1240



Daniel Krügler
-
d:lwg1241
LWG1241

C++11
unique_copy needs to require EquivalenceRelation
http://cplusplus.github.io/LWG/lwg-defects.html#1241



Daniel Krügler
-
d:lwg1242
LWG1242

LEWG
Enable SCARY iterators
http://cplusplus.github.io/LWG/lwg-active.html#1242



Herb Sutter
-
d:lwg1243
LWG1243

NAD
Missing operator+= (initializer_list<T>) for valarray
http://cplusplus.github.io/LWG/lwg-closed.html#1243



Daniel Krügler
-
d:lwg1244
LWG1244

Resolved
wait_*() in *future for synchronous functions
http://cplusplus.github.io/LWG/lwg-defects.html#1244



Detlef Vollmann
-
d:lwg1245
LWG1245

C++11
std::hash<string> & co
http://cplusplus.github.io/LWG/lwg-defects.html#1245



Paolo Carlini
-
d:lwg1246
LWG1246

NAD
vector::resize() missing efficiency guarantee
http://cplusplus.github.io/LWG/lwg-closed.html#1246



David Abrahams
-
d:lwg1247
LWG1247

C++11
auto_ptr is overspecified
http://cplusplus.github.io/LWG/lwg-defects.html#1247



Alisdair Meredith
-
d:lwg1248
LWG1248

Resolved
Equality comparison for unordered containers
http://cplusplus.github.io/LWG/lwg-defects.html#1248



Herb Sutter
-
d:lwg1249
LWG1249

C++11
basic_ios default ctor
http://cplusplus.github.io/LWG/lwg-defects.html#1249



Martin Sebor
-
d:lwg125
LWG125

TC1
valarray<T>::operator!() return type is inconsistent
http://cplusplus.github.io/LWG/lwg-defects.html#125



Judy Ward
-
d:lwg1250
LWG1250

C++11
<bitset> still overspecified
http://cplusplus.github.io/LWG/lwg-defects.html#1250



Martin Sebor
-
d:lwg1251
LWG1251

NAD
move constructing basic_stringbuf
http://cplusplus.github.io/LWG/lwg-closed.html#1251



Martin Sebor
-
d:lwg1252
LWG1252

C++11
wbuffer_convert::state_type inconsistency
http://cplusplus.github.io/LWG/lwg-defects.html#1252



Bo Persson
-
d:lwg1253
LWG1253

C++11
invalidation of iterators and emplace vs. insert inconsistence in assoc. containers
http://cplusplus.github.io/LWG/lwg-defects.html#1253



Boris Dušek
-
d:lwg1254
LWG1254

C++11
Misleading sentence in vector<bool>::flip
http://cplusplus.github.io/LWG/lwg-defects.html#1254



Christopher Jefferson
-
d:lwg1255
LWG1255

C++11
declval should be added to the library
http://cplusplus.github.io/LWG/lwg-defects.html#1255



Daniel Krügler
-
d:lwg1256
LWG1256

C++11
weak_ptr comparison functions should be removed
http://cplusplus.github.io/LWG/lwg-defects.html#1256



Daniel Krügler
-
d:lwg1257
LWG1257

C++11
Header <ios> still contains a concept_map
http://cplusplus.github.io/LWG/lwg-defects.html#1257



Beman Dawes
-
d:lwg1258
LWG1258

Resolved
std::function Effects clause impossible to satisfy
http://cplusplus.github.io/LWG/lwg-defects.html#1258



Daniel Krügler
-
d:lwg1259
LWG1259

NAD
Should initializer-list constructors move elements?
http://cplusplus.github.io/LWG/lwg-closed.html#1259



Sean Hunt
-
d:lwg126
LWG126

TC1
typos in Effects clause of ctype::do_narrow()
http://cplusplus.github.io/LWG/lwg-defects.html#126



Judy Ward
-
d:lwg1260
LWG1260

Resolved
is_constructible<int*,void*> reports true
http://cplusplus.github.io/LWG/lwg-defects.html#1260



Peter Dimov
-
d:lwg1261
LWG1261

C++11
Insufficent overloads for to_string / to_wstring
http://cplusplus.github.io/LWG/lwg-defects.html#1261



Christopher Jefferson
-
d:lwg1262
LWG1262

C++11
std::less<std::shared_ptr<T>> is underspecified
http://cplusplus.github.io/LWG/lwg-defects.html#1262



Jonathan Wakely
-
d:lwg1263
LWG1263

NAD
missing swap overloads for regex
http://cplusplus.github.io/LWG/lwg-closed.html#1263



Howard Hinnant
-
d:lwg1264
LWG1264

C++11
quick_exit support for freestanding implementations
http://cplusplus.github.io/LWG/lwg-defects.html#1264



Alisdair Meredith
-
d:lwg1265
LWG1265

NAD
longjmp and destructors
http://cplusplus.github.io/LWG/lwg-closed.html#1265



Sean Hunt
-
d:lwg1266
LWG1266

Resolved
shared_future::get and deferred async functions
http://cplusplus.github.io/LWG/lwg-defects.html#1266



Anthony Williams
-
d:lwg1267
LWG1267

C++11
Incorrect wording for condition_variable_any::wait_for
http://cplusplus.github.io/LWG/lwg-defects.html#1267



Anthony Williams
-
d:lwg1268
LWG1268

Resolved
The Mutex requirements in 30.4.1 and 30.4.2 are wrong
http://cplusplus.github.io/LWG/lwg-defects.html#1268



Anthony Williams
-
d:lwg1269
LWG1269

Resolved
Associated state doesn't account for async
http://cplusplus.github.io/LWG/lwg-defects.html#1269



Anthony Williams
-
d:lwg127
LWG127

TC1
auto_ptr<> conversion issues
http://cplusplus.github.io/LWG/lwg-defects.html#127



Greg Colvin
-
d:lwg1270
LWG1270

C++11
result_of should be moved to <type_traits>
http://cplusplus.github.io/LWG/lwg-defects.html#1270



Alisdair Meredith
-
d:lwg1271
LWG1271

C++11
CR undefined in duration operators
http://cplusplus.github.io/LWG/lwg-defects.html#1271



Daniel Krügler
-
d:lwg1272
LWG1272

Resolved
confusing declarations of promise::set_value
http://cplusplus.github.io/LWG/lwg-defects.html#1272



Jonathan Wakely
-
d:lwg1273
LWG1273

Resolved
future::valid should be callable on an invalid future
http://cplusplus.github.io/LWG/lwg-defects.html#1273



Jonathan Wakely
-
d:lwg1274
LWG1274

Resolved
atomic_future constructor
http://cplusplus.github.io/LWG/lwg-defects.html#1274



Jonathan Wakely
-
d:lwg1275
LWG1275

Resolved
Creating and setting futures
http://cplusplus.github.io/LWG/lwg-defects.html#1275



Jonathan Wakely
-
d:lwg1276
LWG1276

C++11
forwardlist missing allocator constructors
http://cplusplus.github.io/LWG/lwg-defects.html#1276



Daniel Krügler
-
d:lwg1277
LWG1277

C++11
std::thread::id should be trivially copyable
http://cplusplus.github.io/LWG/lwg-defects.html#1277



Anthony Williams
-
d:lwg1278
LWG1278

C++11
Inconsistent return values for forward_list::insert_after
http://cplusplus.github.io/LWG/lwg-defects.html#1278



Bo Persson
-
d:lwg1279
LWG1279

C++11
forbid [u|bi]nary_function specialization
http://cplusplus.github.io/LWG/lwg-defects.html#1279



Alberto Ganesh Barbati
-
d:lwg128
LWG128

NAD
Need open_mode() function for file stream, string streams, file buffers, and string buffers
http://cplusplus.github.io/LWG/lwg-closed.html#128



Angelika Langer
-
d:lwg1280
LWG1280

C++11
Initialization of stream iterators
http://cplusplus.github.io/LWG/lwg-defects.html#1280



Jonathan Wakely
-
d:lwg1281
LWG1281

Resolved
CopyConstruction and Assignment between ratios having the same normalized form
http://cplusplus.github.io/LWG/lwg-defects.html#1281



Vicente Juan Botet Escribá
-
d:lwg1282
LWG1282

LEWG
A proposal to add std::split algorithm
http://cplusplus.github.io/LWG/lwg-active.html#1282



Igor Semenov
-
d:lwg1283
LWG1283

Resolved
MoveConstructible and MoveAssignable need clarification of moved-from state
http://cplusplus.github.io/LWG/lwg-defects.html#1283



Howard Hinnant
-
d:lwg1284
LWG1284

C++11
vector<bool> initializer_list constructor missing an allocator argument
http://cplusplus.github.io/LWG/lwg-defects.html#1284



Bo Persson
-
d:lwg1285
LWG1285

C++11
allocator_traits call to new
http://cplusplus.github.io/LWG/lwg-defects.html#1285



Howard Hinnant
-
d:lwg1286
LWG1286

C++11
allocator_traits::select_on_container_copy_construction type-o
http://cplusplus.github.io/LWG/lwg-defects.html#1286



Howard Hinnant
-
d:lwg1287
LWG1287

C++11
std::function requires CopyConstructible target object
http://cplusplus.github.io/LWG/lwg-defects.html#1287



Jonathan Wakely
-
d:lwg1288
LWG1288

C++11
std::function assignment from rvalues
http://cplusplus.github.io/LWG/lwg-defects.html#1288



Jonathan Wakely
-
d:lwg1289
LWG1289

LEWG
Generic casting requirements for smart pointers
http://cplusplus.github.io/LWG/lwg-active.html#1289



Ion Gaztañaga
-
d:lwg129
LWG129

TC1
Need error indication from seekp() and seekg()
http://cplusplus.github.io/LWG/lwg-defects.html#129



Angelika Langer
-
d:lwg1290
LWG1290

Resolved
Don't require [u|bi]nary_function inheritance
http://cplusplus.github.io/LWG/lwg-defects.html#1290



Daniel Krügler
-
d:lwg1291
LWG1291

Resolved
Exceptions thrown during promise::set_value
http://cplusplus.github.io/LWG/lwg-defects.html#1291



Jonathan Wakely
-
d:lwg1292
LWG1292

C++11
std::function should support all callable types
http://cplusplus.github.io/LWG/lwg-defects.html#1292



Daniel Krügler
-
d:lwg1293
LWG1293

Resolved
unique_ptr<T[], D> needs to get rid of unspecified-pointer-type
http://cplusplus.github.io/LWG/lwg-defects.html#1293



Daniel Krügler
-
d:lwg1294
LWG1294

C++11
Difference between callable wrapper and forwarding call wrapper unclear
http://cplusplus.github.io/LWG/lwg-defects.html#1294



Jens Maurer
-
d:lwg1295
LWG1295

C++11
Contradictory call wrapper requirements
http://cplusplus.github.io/LWG/lwg-defects.html#1295



Daniel Krügler
-
d:lwg1296
LWG1296

NAD
map and multimap value_compare overspecified
http://cplusplus.github.io/LWG/lwg-closed.html#1296



Alisdair Meredith
-
d:lwg1297
LWG1297

Resolved
unique_ptr's relational operator functions should induce a total order
http://cplusplus.github.io/LWG/lwg-defects.html#1297



Daniel Krügler
-
d:lwg1298
LWG1298

C++11
Missing specialization of ctype_byname<char>
http://cplusplus.github.io/LWG/lwg-defects.html#1298



Alisdair Meredith
-
d:lwg1299
LWG1299

C++11
Confusing typo in specification for get_time
http://cplusplus.github.io/LWG/lwg-defects.html#1299



Alisdair Meredith
-
d:lwg13
LWG13

TC1
Eos refuses to die
http://cplusplus.github.io/LWG/lwg-defects.html#13



William M. Miller
-
d:lwg130
LWG130

CD1
Return type of container::erase(iterator) differs for associative containers
http://cplusplus.github.io/LWG/lwg-defects.html#130



Andrew Koenig
-
d:lwg1300
LWG1300

Resolved
Circular definition of promise::swap
http://cplusplus.github.io/LWG/lwg-defects.html#1300



Jonathan Wakely
-
d:lwg1301
LWG1301

NAD Editorial
clear() and assignment
http://cplusplus.github.io/LWG/lwg-closed.html#1301



Nicolai Josuttis
-
d:lwg1302
LWG1302

NAD
different emplace semantics for sequence and associated containers
http://cplusplus.github.io/LWG/lwg-closed.html#1302



Nicolai Josuttis
-
d:lwg1303
LWG1303

C++11
shared_ptr, unique_ptr, and rvalue references v2
http://cplusplus.github.io/LWG/lwg-defects.html#1303



Stephan T. Lavavej
-
d:lwg1304
LWG1304

Resolved
Missing preconditions for shared_future
http://cplusplus.github.io/LWG/lwg-defects.html#1304



Alisdair Meredith
-
d:lwg1305
LWG1305

Resolved
preconditions for atomic_future
http://cplusplus.github.io/LWG/lwg-defects.html#1305



Alisdair Meredith
-
d:lwg1306
LWG1306

C++11
pointer and const_pointer for <array>
http://cplusplus.github.io/LWG/lwg-defects.html#1306



Nicolai Josuttis
-
d:lwg1307
LWG1307

Resolved
exception_ptr and allocator pointers don't understand !=
http://cplusplus.github.io/LWG/lwg-defects.html#1307



Daniel Krügler
-
d:lwg1308
LWG1308

NAD
Concerns about initializer_list overloads of min, max, and minmax
http://cplusplus.github.io/LWG/lwg-closed.html#1308



Niels Dekker
-
d:lwg1309
LWG1309

C++11
Missing expressions for Move/CopyConstructible
http://cplusplus.github.io/LWG/lwg-defects.html#1309



Daniel Krügler
-
d:lwg131
LWG131

NAD
list::splice throws nothing
http://cplusplus.github.io/LWG/lwg-closed.html#131



Howard Hinnant
-
d:lwg1310
LWG1310

C++11
forward_list splice_after from lvalues
http://cplusplus.github.io/LWG/lwg-defects.html#1310



Howard Hinnant
-
d:lwg1311
LWG1311

Resolved
multi-pass property of Forward Iterator underspecified
http://cplusplus.github.io/LWG/lwg-defects.html#1311



Alisdair Meredith
-
d:lwg1312
LWG1312

C++11
vector::data no longer returns a raw pointer
http://cplusplus.github.io/LWG/lwg-defects.html#1312



Alisdair Meredith
-
d:lwg1313
LWG1313

NAD
Seed sequence's param function not useful for pure output iterator
http://cplusplus.github.io/LWG/lwg-closed.html#1313



Daniel Krügler
-
d:lwg1314
LWG1314

NAD
NULL and nullptr
http://cplusplus.github.io/LWG/lwg-closed.html#1314



Sean Hunt
-
d:lwg1315
LWG1315

NAD Editorial
return type of async
http://cplusplus.github.io/LWG/lwg-closed.html#1315



Jonathan Wakely
-
d:lwg1316
LWG1316

C++11
scoped_allocator_adaptor operator== has no definition
http://cplusplus.github.io/LWG/lwg-defects.html#1316



Pablo Halpern
-
d:lwg1317
LWG1317

LEWG
make_hash
http://cplusplus.github.io/LWG/lwg-active.html#1317



Nicolai M. Josuttis
-
d:lwg1318
LWG1318

NAD
N2982 removes previous allocator capabilities
http://cplusplus.github.io/LWG/lwg-closed.html#1318



Pete Becker
-
d:lwg1319
LWG1319

C++11
Containers should require an iterator that is at least a Forward Iterator
http://cplusplus.github.io/LWG/lwg-defects.html#1319



Alisdair Meredith
-
d:lwg132
LWG132

TC1
list::resize description uses random access iterators
http://cplusplus.github.io/LWG/lwg-defects.html#132



Howard Hinnant
-
d:lwg1320
LWG1320

LEWG
Header for iter_swap
http://cplusplus.github.io/LWG/lwg-active.html#1320



Alisdair Meredith
-
d:lwg1321
LWG1321

Resolved
scoped_allocator_adaptor construct and destroy don't use allocator_traits
http://cplusplus.github.io/LWG/lwg-defects.html#1321



Howard Hinnant
-
d:lwg1322
LWG1322

Resolved
Explicit CopyConstructible requirements are insufficient
http://cplusplus.github.io/LWG/lwg-defects.html#1322



Daniel Krügler
-
d:lwg1323
LWG1323

C++11
basic_string::replace should use const_iterator
http://cplusplus.github.io/LWG/lwg-defects.html#1323



Daniel Krügler
-
d:lwg1324
LWG1324

Resolved
Still too many implicit conversions for pair and tuple
http://cplusplus.github.io/LWG/lwg-defects.html#1324



Daniel Krügler
-
d:lwg1325
LWG1325

C++11
bitset
http://cplusplus.github.io/LWG/lwg-defects.html#1325



Christopher Jefferson
-
d:lwg1326
LWG1326

Resolved
Missing/wrong preconditions for pair and tuple functions
http://cplusplus.github.io/LWG/lwg-defects.html#1326



Daniel Krügler
-
d:lwg1327
LWG1327

Resolved
templates defined in <cmath> replacing C macros with the same name
http://cplusplus.github.io/LWG/lwg-defects.html#1327



Michael Wong
-
d:lwg1328
LWG1328

Resolved
istream extractors not setting failbit if eofbit is already set
http://cplusplus.github.io/LWG/lwg-defects.html#1328



Paolo Carlini
-
d:lwg1329
LWG1329

Resolved
Data races on vector<bool>
http://cplusplus.github.io/LWG/lwg-defects.html#1329



Jeffrey Yaskin
-
d:lwg133
LWG133

TC1
map missing get_allocator()
http://cplusplus.github.io/LWG/lwg-defects.html#133



Howard Hinnant
-
d:lwg1330
LWG1330

NAD
Move container requirements into requirements tables
http://cplusplus.github.io/LWG/lwg-closed.html#1330



Nicolai Josuttis
-
d:lwg1331
LWG1331

NAD
incorporate move special member functions into library
http://cplusplus.github.io/LWG/lwg-closed.html#1331



Martin Sebor
-
d:lwg1332
LWG1332

C++11
Let Hash objects throw!
http://cplusplus.github.io/LWG/lwg-defects.html#1332



Daniel Krügler
-
d:lwg1333
LWG1333

C++11
Missing forwarding during std::function invocation
http://cplusplus.github.io/LWG/lwg-defects.html#1333



Daniel Krügler
-
d:lwg1334
LWG1334

C++11
Insert iterators are broken for some proxy containers compared to C++03
http://cplusplus.github.io/LWG/lwg-defects.html#1334



Daniel Krügler
-
d:lwg1335
LWG1335

C++11
Insufficient requirements for tuple::operator<()
http://cplusplus.github.io/LWG/lwg-defects.html#1335



Joe Gottman
-
d:lwg1337
LWG1337

C++11
Swapped arguments in regex_traits::isctype
http://cplusplus.github.io/LWG/lwg-defects.html#1337



Howard Hinnant
-
d:lwg1338
LWG1338

C++11
LWG 1205 incorrectly applied
http://cplusplus.github.io/LWG/lwg-defects.html#1338



Howard Hinnant
-
d:lwg1339
LWG1339

C++11
uninitialized_fill_n should return the end of its range
http://cplusplus.github.io/LWG/lwg-defects.html#1339



Jared Hoberock
-
d:lwg134
LWG134

TC1
vector constructors over specified
http://cplusplus.github.io/LWG/lwg-defects.html#134



Howard Hinnant
-
d:lwg1340
LWG1340

C++11
Why does forward_list::resize take the object to be copied by value?
http://cplusplus.github.io/LWG/lwg-defects.html#1340



James McNellis
-
d:lwg1344
LWG1344

Resolved
Replace throw() with noexcept
http://cplusplus.github.io/LWG/lwg-defects.html#1344



BSI
-
d:lwg1345
LWG1345

Resolved
Library classes should have noexcept move operations
http://cplusplus.github.io/LWG/lwg-defects.html#1345



BSI
-
d:lwg1346
LWG1346

Resolved
Apply noexcept where library specification does not permit exceptions
http://cplusplus.github.io/LWG/lwg-defects.html#1346



BSI
-
d:lwg1347
LWG1347

Resolved
Apply noexcept judiciously throughout the library
http://cplusplus.github.io/LWG/lwg-defects.html#1347



BSI
-
d:lwg1348
LWG1348

NAD
Exception safety of unspecified types
http://cplusplus.github.io/LWG/lwg-closed.html#1348



BSI
-
d:lwg1349
LWG1349

C++11
swap should not throw
http://cplusplus.github.io/LWG/lwg-defects.html#1349



BSI
-
d:lwg135
LWG135

NAD
basic_iostream doubly initialized
http://cplusplus.github.io/LWG/lwg-closed.html#135



Howard Hinnant
-
d:lwg1350
LWG1350

Dup
Implicit contructors accidentally made some library types move-only
http://cplusplus.github.io/LWG/lwg-closed.html#1350



Switzerland
-
d:lwg1351
LWG1351

Dup
Replace dynamic exception specifications with noexcept
http://cplusplus.github.io/LWG/lwg-closed.html#1351



Switzerland
-
d:lwg1352
LWG1352

Dup
Apply noexcept where library specification says "Throws: Nothing"
http://cplusplus.github.io/LWG/lwg-closed.html#1352



Switzerland
-
d:lwg1353
LWG1353

Resolved
Clarify the state of a moved-from object
http://cplusplus.github.io/LWG/lwg-defects.html#1353



Switzerland
-
d:lwg1354
LWG1354

C++11
The definition of deadlock excludes cases involving a single thread
http://cplusplus.github.io/LWG/lwg-defects.html#1354



BSI
-
d:lwg1355
LWG1355

Resolved
The definition of move-assignment operator is redundant
http://cplusplus.github.io/LWG/lwg-defects.html#1355



BSI
-
d:lwg1356
LWG1356

Resolved
The definition of move-constructor is redundant
http://cplusplus.github.io/LWG/lwg-defects.html#1356



BSI
-
d:lwg1357
LWG1357

Resolved
Library bitmask types to not satisfy the bimask type requirements
http://cplusplus.github.io/LWG/lwg-defects.html#1357



BSI
-
d:lwg1358
LWG1358

NAD
Add <chrono> and <ratio> to freestanding implementations
http://cplusplus.github.io/LWG/lwg-closed.html#1358



BSI
-
d:lwg1359
LWG1359

NAD
Add <tuple> and <utility> to freestanding implementations
http://cplusplus.github.io/LWG/lwg-closed.html#1359



BSI
-
d:lwg136
LWG136

CD1
seekp, seekg setting wrong streams?
http://cplusplus.github.io/LWG/lwg-defects.html#136



Howard Hinnant
-
d:lwg1360
LWG1360

C++11
Add <atomic> to free-standing implementations
http://cplusplus.github.io/LWG/lwg-defects.html#1360



BSI
-
d:lwg1361
LWG1361

NAD
Does use of std::size_t in a header imply that typedef name is available to users?
http://cplusplus.github.io/LWG/lwg-closed.html#1361



BSI
-
d:lwg1362
LWG1362

C++11
Description of binding to rvalue-references should use the new 'xvalue' vocabulary
http://cplusplus.github.io/LWG/lwg-defects.html#1362



INCITS
-
d:lwg1363
LWG1363

C++11
offsetof should be marked noexcept
http://cplusplus.github.io/LWG/lwg-defects.html#1363



BSI
-
d:lwg1364
LWG1364

Resolved
It is not clear how exception_ptr is synchronized
http://cplusplus.github.io/LWG/lwg-defects.html#1364



Switzerland
-
d:lwg1365
LWG1365

Resolved
Thread-safety of handler functions
http://cplusplus.github.io/LWG/lwg-defects.html#1365



BSI
-
d:lwg1366
LWG1366

Resolved
New-handler and data races
http://cplusplus.github.io/LWG/lwg-defects.html#1366



DIN
-
d:lwg1367
LWG1367

C++11
Deprecate library support for checking dynamic exception specifications
http://cplusplus.github.io/LWG/lwg-defects.html#1367



BSI
-
d:lwg1368
LWG1368

C++11
Thread safety of std::uncaught_exception()
http://cplusplus.github.io/LWG/lwg-defects.html#1368



BSI
-
d:lwg1369
LWG1369

NAD
rethrow_exception may introduce data races
http://cplusplus.github.io/LWG/lwg-closed.html#1369



BSI
-
d:lwg137
LWG137

TC1
Do use_facet and has_facet look in the global locale?
http://cplusplus.github.io/LWG/lwg-defects.html#137



Angelika Langer
-
d:lwg1370
LWG1370

C++11
throw_with_nested should not use perfect forwarding
http://cplusplus.github.io/LWG/lwg-defects.html#1370



INCITS
-
d:lwg1371
LWG1371

NAD
Standard exceptions require stronger no-throw guarantees
http://cplusplus.github.io/LWG/lwg-closed.html#1371



BSI
-
d:lwg1372
LWG1372

C++11
Adopt recommended practice for standard error categories
http://cplusplus.github.io/LWG/lwg-defects.html#1372



BSI
-
d:lwg1373
LWG1373

NAD
Customizable traits should have their own headers
http://cplusplus.github.io/LWG/lwg-closed.html#1373



BSI
-
d:lwg1374
LWG1374

NAD
Clarify moved-from objects are "toxic"
http://cplusplus.github.io/LWG/lwg-closed.html#1374



INCITS
-
d:lwg1375
LWG1375

Dup
reference_type should not have been removed from the allocator requirements
http://cplusplus.github.io/LWG/lwg-closed.html#1375



INCITS
-
d:lwg1376
LWG1376

NAD
Allocator interface is not backward compatible
http://cplusplus.github.io/LWG/lwg-closed.html#1376



INCITS
-
d:lwg1377
LWG1377

Resolved
The revised forward is not compatible with access-control
http://cplusplus.github.io/LWG/lwg-defects.html#1377



INCITS
-
d:lwg1378
LWG1378

Resolved
pair and tuple have too many conversions
http://cplusplus.github.io/LWG/lwg-defects.html#1378



DIN
-
d:lwg1379
LWG1379

Resolved
pair copy-assignment not consistent for references
http://cplusplus.github.io/LWG/lwg-defects.html#1379



INCITS
-
d:lwg138
LWG138

NAD
Class ctype_byname<char> redundant and misleading
http://cplusplus.github.io/LWG/lwg-closed.html#138



Angelika Langer
-
d:lwg1380
LWG1380

Resolved
pair and tuple of references need to better specify move-semantics
http://cplusplus.github.io/LWG/lwg-defects.html#1380



DIN
-
d:lwg1381
LWG1381

C++11
Replace pair's range support by proper range facility
http://cplusplus.github.io/LWG/lwg-defects.html#1381



BSI
-
d:lwg1382
LWG1382

Resolved
pair and tuple constructors should forward arguments
http://cplusplus.github.io/LWG/lwg-defects.html#1382



INCITS
-
d:lwg1383
LWG1383

Resolved
Inconsistent defaulted move/copy members in pair and tuple
http://cplusplus.github.io/LWG/lwg-defects.html#1383



INCITS
-
d:lwg1384
LWG1384

C++11
Function pack_arguments is poorly named
http://cplusplus.github.io/LWG/lwg-defects.html#1384



INCITS
-
d:lwg1385
LWG1385

C++11
tuple_cat should be a single variadic signature
http://cplusplus.github.io/LWG/lwg-defects.html#1385



BSI
-
d:lwg1386
LWG1386

C++11
pack_arguments overly complex
http://cplusplus.github.io/LWG/lwg-defects.html#1386



INCITS
-
d:lwg1387
LWG1387

C++11
Range support by tuple should be removed
http://cplusplus.github.io/LWG/lwg-defects.html#1387



BSI
-
d:lwg1388
LWG1388

C++11
LWG 1281 incorrectly accepted
http://cplusplus.github.io/LWG/lwg-defects.html#1388



INCITS
-
d:lwg1389
LWG1389

Resolved
Compile-time rational arithmetic and overflow
http://cplusplus.github.io/LWG/lwg-defects.html#1389



BSI
-
d:lwg139
LWG139

TC1
Optional sequence operation table description unclear
http://cplusplus.github.io/LWG/lwg-defects.html#139



Andrew Koenig
-
d:lwg1390
LWG1390

Resolved
Limit speculative compilation for constructible/convertible traits
http://cplusplus.github.io/LWG/lwg-defects.html#1390



DIN
-
d:lwg1391
LWG1391

Resolved
constructible/convertible traits and access control
http://cplusplus.github.io/LWG/lwg-defects.html#1391



DIN
-
d:lwg1392
LWG1392

Resolved
result_of should support pointer-to-data-member
http://cplusplus.github.io/LWG/lwg-defects.html#1392



INCITS
-
d:lwg1393
LWG1393

Resolved
Trivial traits imply noexcept
http://cplusplus.github.io/LWG/lwg-defects.html#1393



BSI
-
d:lwg1394
LWG1394

Resolved
is_constructible reports false positives
http://cplusplus.github.io/LWG/lwg-defects.html#1394



DIN
-
d:lwg1395
LWG1395

NAD Editorial
Inconsistent reference links should be unified
http://cplusplus.github.io/LWG/lwg-closed.html#1395



Japan
-
d:lwg1396
LWG1396

LEWG
regex should support allocators
http://cplusplus.github.io/LWG/lwg-active.html#1396



INCITS
-
d:lwg1397
LWG1397

Resolved
Deprecate '98 binders
http://cplusplus.github.io/LWG/lwg-defects.html#1397



BSI
-
d:lwg1398
LWG1398

NAD
Users should be able to specialize functors without depending on whole <functional> header
http://cplusplus.github.io/LWG/lwg-closed.html#1398



BSI
-
d:lwg1399
LWG1399

C++11
function does not need an explicit default constructor
http://cplusplus.github.io/LWG/lwg-defects.html#1399



Japan
-
d:lwg14
LWG14

TC1
Locale::combine should be const
http://cplusplus.github.io/LWG/lwg-defects.html#14



Nathan Myers
-
d:lwg140
LWG140

NAD Editorial
map<Key, T>::value_type does not satisfy the assignable requirement
http://cplusplus.github.io/LWG/lwg-closed.html#140



Mark Mitchell
-
d:lwg1400
LWG1400

C++11
FCD function does not need an explicit default constructor
http://cplusplus.github.io/LWG/lwg-defects.html#1400



Japan
-
d:lwg1401
LWG1401

C++11
Provide support for unique_ptr<T> == nullptr
http://cplusplus.github.io/LWG/lwg-defects.html#1401



BSI
-
d:lwg1402
LWG1402

C++11
nullptr constructors for smart pointers should be constexpr
http://cplusplus.github.io/LWG/lwg-defects.html#1402



BSI
-
d:lwg1403
LWG1403

C++11
Inconsistent definitions for allocator_arg
http://cplusplus.github.io/LWG/lwg-defects.html#1403



Japan
-
d:lwg1404
LWG1404

C++11
pointer_traits should have a size_type member
http://cplusplus.github.io/LWG/lwg-defects.html#1404



INCITS
-
d:lwg1405
LWG1405

Resolved
Move scoped_allocator_adaptor into separate header
http://cplusplus.github.io/LWG/lwg-defects.html#1405



INCITS
-
d:lwg1406
LWG1406

LEWG
Support hashing smart-pointers based on owner
http://cplusplus.github.io/LWG/lwg-active.html#1406



Japan
-
d:lwg1407
LWG1407

Resolved
Synch shared_ptr constructors taking movable types
http://cplusplus.github.io/LWG/lwg-defects.html#1407



INCITS
-
d:lwg1408
LWG1408

C++11
Allow recycling of pointers after undeclare_no_pointers
http://cplusplus.github.io/LWG/lwg-defects.html#1408



BSI
-
d:lwg1409
LWG1409

Resolved
Specify whether monotonic_clock is a distinct type or a typedef
http://cplusplus.github.io/LWG/lwg-defects.html#1409



INCITS
-
d:lwg141
LWG141

TC1
basic_string::find_last_of, find_last_not_of say pos instead of xpos
http://cplusplus.github.io/LWG/lwg-defects.html#141



Arch Robison
-
d:lwg1410
LWG1410

Resolved
Add a feature-detect macro for monotonic_clock
http://cplusplus.github.io/LWG/lwg-defects.html#1410



BSI
-
d:lwg1411
LWG1411

Dup
Add a compile-time flag to detect monotonic_clock
http://cplusplus.github.io/LWG/lwg-closed.html#1411



DIN
-
d:lwg1412
LWG1412

Resolved
Make monotonic clocks mandatory
http://cplusplus.github.io/LWG/lwg-defects.html#1412



Switzerland
-
d:lwg1413
LWG1413

NAD
Specify whether high_resolution_clock is a distinct type or a typedef
http://cplusplus.github.io/LWG/lwg-closed.html#1413



INCITS
-
d:lwg1414
LWG1414

C++11
Fixing remaining dead links to POS_T and OFF_T
http://cplusplus.github.io/LWG/lwg-defects.html#1414



BSI
-
d:lwg1415
LWG1415

NAD Editorial
Iterator stability bans the short-string optimization
http://cplusplus.github.io/LWG/lwg-closed.html#1415



INCITS
-
d:lwg1416
LWG1416

C++11
forward_list::erase_after should not be allowed to throw
http://cplusplus.github.io/LWG/lwg-defects.html#1416



DIN
-
d:lwg1417
LWG1417

C++11
front/back on a zero-sized array should be undefined
http://cplusplus.github.io/LWG/lwg-defects.html#1417



BSI
-
d:lwg1418
LWG1418

C++11
Effects of resize(size()) on a deque
http://cplusplus.github.io/LWG/lwg-defects.html#1418



BSI
-
d:lwg1419
LWG1419

NAD Editorial
forward_list::erase_after should return an iterator
http://cplusplus.github.io/LWG/lwg-closed.html#1419



INCITS
-
d:lwg142
LWG142

TC1
lexicographical_compare complexity wrong
http://cplusplus.github.io/LWG/lwg-defects.html#142



Howard Hinnant
-
d:lwg1420
LWG1420

C++11
Effects of resize(size()) on a list
http://cplusplus.github.io/LWG/lwg-defects.html#1420



BSI
-
d:lwg1421
LWG1421

Resolved
Accidental move-only library types due to new core language rules
http://cplusplus.github.io/LWG/lwg-defects.html#1421



DIN
-
d:lwg1422
LWG1422

LEWG
vector<bool> iterators are not random access
http://cplusplus.github.io/LWG/lwg-active.html#1422



BSI
-
d:lwg1423
LWG1423

C++11
map constructor accepting an allocator as single parameter should be explicit
http://cplusplus.github.io/LWG/lwg-defects.html#1423



Japan
-
d:lwg1424
LWG1424

C++11
multimap constructor accepting an allocator as a single parameter should be explicit
http://cplusplus.github.io/LWG/lwg-defects.html#1424



Japan
-
d:lwg1425
LWG1425

C++11
set constructor accepting an allocator as a single parameter should be explicit
http://cplusplus.github.io/LWG/lwg-defects.html#1425



Japan
-
d:lwg1426
LWG1426

C++11
multiset constructor accepting an allocator as a single parameter should be explicit
http://cplusplus.github.io/LWG/lwg-defects.html#1426



Japan
-
d:lwg1427
LWG1427

C++11
unordered_map constructor accepting an allocator as a single parameter should be explicit
http://cplusplus.github.io/LWG/lwg-defects.html#1427



Japan
-
d:lwg1428
LWG1428

C++11
unordered_multimap constructor accepting an allocator as a single parameter should be explicit
http://cplusplus.github.io/LWG/lwg-defects.html#1428



Japan
-
d:lwg1429
LWG1429

C++11
unordered_set constructor accepting an allocator as a single parameter should be explicit
http://cplusplus.github.io/LWG/lwg-defects.html#1429



Japan
-
d:lwg143
LWG143

NAD
C .h header wording unclear
http://cplusplus.github.io/LWG/lwg-closed.html#143



Christophe de Dinechin
-
d:lwg1430
LWG1430

C++11
unordered_multiset constructor accepting an allocator as a single parameter should be explicit
http://cplusplus.github.io/LWG/lwg-defects.html#1430



Japan
-
d:lwg1431
LWG1431

C++11
is_permutation must be more restrictive
http://cplusplus.github.io/LWG/lwg-defects.html#1431



INCITS
-
d:lwg1432
LWG1432

C++11
random_shuffle signatures are inconsistent
http://cplusplus.github.io/LWG/lwg-defects.html#1432



INCITS
-
d:lwg1433
LWG1433

Dup
random_shuffle and shuffle should have consistent signatures
http://cplusplus.github.io/LWG/lwg-closed.html#1433



BSI
-
d:lwg1434
LWG1434

NAD Editorial
For min/max functions replace variadic arguments by initializer_list argument
http://cplusplus.github.io/LWG/lwg-closed.html#1434



INCITS
-
d:lwg1435
LWG1435

C++11
Unclear returns specifications for C99 complex number functions
http://cplusplus.github.io/LWG/lwg-defects.html#1435



BSI
-
d:lwg1436
LWG1436

C++11
Random number engine constructor concerns
http://cplusplus.github.io/LWG/lwg-defects.html#1436



BSI
-
d:lwg1437
LWG1437

C++11
Mersenne twister meaningless for word sizes less than two
http://cplusplus.github.io/LWG/lwg-defects.html#1437



INCITS
-
d:lwg1438
LWG1438

C++11
No definition for base()
http://cplusplus.github.io/LWG/lwg-defects.html#1438



INCITS
-
d:lwg1439
LWG1439

C++11
Return from densities() functions?
http://cplusplus.github.io/LWG/lwg-defects.html#1439



INCITS
-
d:lwg144
LWG144

TC1
Deque constructor complexity wrong
http://cplusplus.github.io/LWG/lwg-defects.html#144



Herb Sutter
-
d:lwg1440
LWG1440

C++11
Incorrect specification for piecewise_linear_distribution
http://cplusplus.github.io/LWG/lwg-defects.html#1440



INCITS
-
d:lwg1441
LWG1441

C++11
Floating-point test functions are incorrectly specified
http://cplusplus.github.io/LWG/lwg-defects.html#1441



INCITS
-
d:lwg1442
LWG1442

NAD Editorial
"happens-before" should be "synchronizes-with"
http://cplusplus.github.io/LWG/lwg-closed.html#1442



Canada
-
d:lwg1443
LWG1443

Dup
Imposed happens-before edges are not made transitive
http://cplusplus.github.io/LWG/lwg-closed.html#1443



BSI
-
d:lwg1444
LWG1444

Dup
OFF_T is not defined
http://cplusplus.github.io/LWG/lwg-closed.html#1444



BSI
-
d:lwg1445
LWG1445

Resolved
Several iostreams member functions incorrectly specified
http://cplusplus.github.io/LWG/lwg-defects.html#1445



INCITS/PJ Plauger
-
d:lwg1446
LWG1446

NAD
Move and swap for I/O streams
http://cplusplus.github.io/LWG/lwg-closed.html#1446



INCITS
-
d:lwg1447
LWG1447

Resolved
Request to resolve issue LWG 1328
http://cplusplus.github.io/LWG/lwg-defects.html#1447



INCITS
-
d:lwg1448
LWG1448

C++11
Concerns about basic_stringbuf::str(basic_string) postconditions
http://cplusplus.github.io/LWG/lwg-defects.html#1448



BSI
-
d:lwg1449
LWG1449

C++11
Incomplete specification of header <cinttypes>
http://cplusplus.github.io/LWG/lwg-defects.html#1449



Canada
-
d:lwg145
LWG145

NAD
adjustfield lacks default value
http://cplusplus.github.io/LWG/lwg-closed.html#145



Angelika Langer
-
d:lwg1450
LWG1450

C++14
Contradiction in regex_constants
http://cplusplus.github.io/LWG/lwg-defects.html#1450



BSI
-
d:lwg1451
LWG1451

Dup
regex should support allocators
http://cplusplus.github.io/LWG/lwg-closed.html#1451



INCITS
-
d:lwg1452
LWG1452

NAD
"target sequence" is not defined
http://cplusplus.github.io/LWG/lwg-closed.html#1452



BSI
-
d:lwg1453
LWG1453

Resolved
Default constructed match_results behavior for certain operations
http://cplusplus.github.io/LWG/lwg-defects.html#1453



BSI
-
d:lwg1454
LWG1454

Dup
Ensure C compatibility for atomics
http://cplusplus.github.io/LWG/lwg-closed.html#1454



BSI
-
d:lwg1455
LWG1455

Resolved
C language compatibility for atomics
http://cplusplus.github.io/LWG/lwg-defects.html#1455



Switzerland
-
d:lwg1456
LWG1456

NAD
Missing fixed-size atomic_ typedefs
http://cplusplus.github.io/LWG/lwg-closed.html#1456



BSI
-
d:lwg1457
LWG1457

Resolved
Splitting lock-free properties
http://cplusplus.github.io/LWG/lwg-defects.html#1457



BSI
-
d:lwg1458
LWG1458

Dup
Overlapping evaluations are allowed
http://cplusplus.github.io/LWG/lwg-closed.html#1458



BSI
-
d:lwg1459
LWG1459

LEWG
Overlapping evaluations are allowed
http://cplusplus.github.io/LWG/lwg-active.html#1459



Canada
-
d:lwg146
LWG146

TC1
complex<T> Inserter and Extractor need sentries
http://cplusplus.github.io/LWG/lwg-defects.html#146



Angelika Langer
-
d:lwg1460
LWG1460

Resolved
Missing lock-free property for type bool should be added
http://cplusplus.github.io/LWG/lwg-defects.html#1460



INCITS
-
d:lwg1461
LWG1461

NAD
Rename all ATOMIC_* macros as STD_ATOMIC_*
http://cplusplus.github.io/LWG/lwg-closed.html#1461



Canada
-
d:lwg1462
LWG1462

Resolved
Ambiguous value assignment to atomic_bool
http://cplusplus.github.io/LWG/lwg-defects.html#1462



BSI
-
d:lwg1463
LWG1463

Dup
Inconsistent value assignment for atomic_bool
http://cplusplus.github.io/LWG/lwg-closed.html#1463



INCITS
-
d:lwg1464
LWG1464

Resolved
Underspecified typedefs for atomic integral types
http://cplusplus.github.io/LWG/lwg-defects.html#1464



INCITS
-
d:lwg1465
LWG1465

Resolved
Missing arithmetic operators for atomic_address
http://cplusplus.github.io/LWG/lwg-defects.html#1465



INCITS
-
d:lwg1466
LWG1466

Resolved
Silent const breakage by compare_exchange_* member functions
http://cplusplus.github.io/LWG/lwg-defects.html#1466



INCITS
-
d:lwg1467
LWG1467

Resolved
Deriving atomic<T*> from atomic_address breaks type safety
http://cplusplus.github.io/LWG/lwg-defects.html#1467



INCITS
-
d:lwg1468
LWG1468

Resolved
atomic_address::compare_exchange_* member functions should match atomic_compare_exchange_* free functions
http://cplusplus.github.io/LWG/lwg-defects.html#1468



INCITS
-
d:lwg1469
LWG1469

Resolved
atomic<T*> inheritance from atomic_address breaks type safety
http://cplusplus.github.io/LWG/lwg-defects.html#1469



BSI
-
d:lwg147
LWG147

TC1
Library Intro refers to global functions that aren't global
http://cplusplus.github.io/LWG/lwg-defects.html#147



Lois Goldthwaite
-
d:lwg1470
LWG1470

Dup
"Same-ness" curiosities
http://cplusplus.github.io/LWG/lwg-closed.html#1470



INCITS
-
d:lwg1471
LWG1471

NAD Editorial
Default constructor of atomics needs specification
http://cplusplus.github.io/LWG/lwg-closed.html#1471



INCITS
-
d:lwg1472
LWG1472

NAD Editorial
Incorrect semantics of atomic_init
http://cplusplus.github.io/LWG/lwg-closed.html#1472



INCITS
-
d:lwg1473
LWG1473

NAD
Incomplete memory order specifications
http://cplusplus.github.io/LWG/lwg-closed.html#1473



INCITS
-
d:lwg1474
LWG1474

C++11
weak compare-and-exchange confusion
http://cplusplus.github.io/LWG/lwg-defects.html#1474



INCITS
-
d:lwg1475
LWG1475

Dup
weak compare-and-exchange confusion II
http://cplusplus.github.io/LWG/lwg-closed.html#1475



Switzerland
-
d:lwg1476
LWG1476

Dup
Meaningless specification of spurious failure
http://cplusplus.github.io/LWG/lwg-closed.html#1476



INCITS
-
d:lwg1477
LWG1477

Dup
weak compare-and-exchange confusion III
http://cplusplus.github.io/LWG/lwg-closed.html#1477



BSI
-
d:lwg1478
LWG1478

C++11
Clarify race conditions in atomics initialization
http://cplusplus.github.io/LWG/lwg-defects.html#1478



BSI
-
d:lwg1479
LWG1479

C++11
Fence functions should be extern "C"
http://cplusplus.github.io/LWG/lwg-defects.html#1479



INCITS
-
d:lwg148
LWG148

TC1
Functions in the example facet BoolNames should be const
http://cplusplus.github.io/LWG/lwg-defects.html#148



Jeremy Siek
-
d:lwg1480
LWG1480

C++11
Atomic fences don't have synchronizes with relation
http://cplusplus.github.io/LWG/lwg-defects.html#1480



BSI
-
d:lwg1481
LWG1481

Resolved
Missing Lockable requirements
http://cplusplus.github.io/LWG/lwg-defects.html#1481



BSI
-
d:lwg1482
LWG1482

Resolved
Timeout operations are under-specified
http://cplusplus.github.io/LWG/lwg-defects.html#1482



INCITS
-
d:lwg1483
LWG1483

NAD Editorial
__STDCPP_THREADS spelling
http://cplusplus.github.io/LWG/lwg-closed.html#1483



DIN
-
d:lwg1484
LWG1484

LEWG
Need a way to join a thread with a timeout
http://cplusplus.github.io/LWG/lwg-active.html#1484



INCITS
-
d:lwg1485
LWG1485

NAD
Unclear thread::id specification
http://cplusplus.github.io/LWG/lwg-closed.html#1485



INCITS
-
d:lwg1486
LWG1486

NAD
Value of this_thread::get_id() underspecified for detached thread
http://cplusplus.github.io/LWG/lwg-closed.html#1486



Switzerland
-
d:lwg1487
LWG1487

C++11
Clock related operations exception specifications conflict
http://cplusplus.github.io/LWG/lwg-defects.html#1487



Switzerland
-
d:lwg1488
LWG1488

LEWG
Improve interoperability between the C++0x and C1x threads APIs
http://cplusplus.github.io/LWG/lwg-active.html#1488



INCITS
-
d:lwg1489
LWG1489

NAD Editorial
unlock functions and unlock mutex requirements are inconsistent
http://cplusplus.github.io/LWG/lwg-closed.html#1489



Switzerland
-
d:lwg149
LWG149

C++11
Insert should return iterator to first element inserted
http://cplusplus.github.io/LWG/lwg-defects.html#149



Andrew Koenig
-
d:lwg1490
LWG1490

Resolved
Mutex requirements too stringent
http://cplusplus.github.io/LWG/lwg-defects.html#1490



Switzerland
-
d:lwg1491
LWG1491

Resolved
try_lock does not guarantee forward progress
http://cplusplus.github.io/LWG/lwg-defects.html#1491



INCITS
-
d:lwg1492
LWG1492

Resolved
Mutex requirements should not be bound to threads
http://cplusplus.github.io/LWG/lwg-defects.html#1492



INCITS
-
d:lwg1493
LWG1493

LEWG
Add mutex, recursive_mutex, is_locked function
http://cplusplus.github.io/LWG/lwg-active.html#1493



INCITS
-
d:lwg1494
LWG1494

C++11
Term "are serialized" not defined
http://cplusplus.github.io/LWG/lwg-defects.html#1494



INCITS
-
d:lwg1495
LWG1495

NAD Editorial
Condition variable wait_for return value insufficient
http://cplusplus.github.io/LWG/lwg-closed.html#1495



INCITS
-
d:lwg1496
LWG1496

NAD Editorial
condition_variable not implementable
http://cplusplus.github.io/LWG/lwg-closed.html#1496



Switzerland
-
d:lwg1497
LWG1497

C++11
lock() postcondition can not be generally achieved
http://cplusplus.github.io/LWG/lwg-defects.html#1497



Switzerland
-
d:lwg1498
LWG1498

Resolved
Unclear specification for [thread.condition]
http://cplusplus.github.io/LWG/lwg-defects.html#1498



Switzerland
-
d:lwg1499
LWG1499

LEWG
Condition variables preclude wakeup optimization
http://cplusplus.github.io/LWG/lwg-active.html#1499



INCITS
-
d:lwg15
LWG15

TC1
Locale::name requirement inconsistent
http://cplusplus.github.io/LWG/lwg-defects.html#15



Nathan Myers
-
d:lwg150
LWG150

TC1
Find_first_of says integer instead of iterator
http://cplusplus.github.io/LWG/lwg-defects.html#150



Matt McClure
-
d:lwg1500
LWG1500

NAD Editorial
Consider removal of native_handle()
http://cplusplus.github.io/LWG/lwg-closed.html#1500



Switzerland
-
d:lwg1501
LWG1501

Resolved
Specification for managing associated asynchronous state has problems
http://cplusplus.github.io/LWG/lwg-defects.html#1501



INCITS
-
d:lwg1502
LWG1502

Resolved
Specification of [futures.state] unclear
http://cplusplus.github.io/LWG/lwg-defects.html#1502



INCITS
-
d:lwg1503
LWG1503

NAD Editorial
"associated asynchronous state" must go
http://cplusplus.github.io/LWG/lwg-closed.html#1503



Switzerland
-
d:lwg1504
LWG1504

Resolved
Term "are serialized" is not defined
http://cplusplus.github.io/LWG/lwg-defects.html#1504



INCITS
-
d:lwg1505
LWG1505

Resolved
Synchronization between promise::set_value and future::get
http://cplusplus.github.io/LWG/lwg-defects.html#1505



INCITS
-
d:lwg1506
LWG1506

NAD Editorial
set_exception with a null pointer
http://cplusplus.github.io/LWG/lwg-closed.html#1506



INCITS
-
d:lwg1507
LWG1507

Resolved
promise::XXX_at_thread_exit functions have no synchronization requirements
http://cplusplus.github.io/LWG/lwg-defects.html#1507



INCITS
-
d:lwg1508
LWG1508

Resolved
Rename packaged_task::operator bool()
http://cplusplus.github.io/LWG/lwg-defects.html#1508



INCITS
-
d:lwg1509
LWG1509

NAD Editorial
No restriction on calling future::get more than once
http://cplusplus.github.io/LWG/lwg-closed.html#1509



INCITS
-
d:lwg151
LWG151

TC1
Can't currently clear() empty container
http://cplusplus.github.io/LWG/lwg-defects.html#151



Ed Brey
-
d:lwg1510
LWG1510

NAD Editorial
Should be undefined behaviour to call atomic_future operations unless valid()
http://cplusplus.github.io/LWG/lwg-closed.html#1510



INCITS
-
d:lwg1511
LWG1511

NAD Editorial
Synchronize the move-constructor for atomic_future
http://cplusplus.github.io/LWG/lwg-closed.html#1511



INCITS
-
d:lwg1512
LWG1512

NAD Editorial
Conflict in specification: block or join?
http://cplusplus.github.io/LWG/lwg-closed.html#1512



INCITS
-
d:lwg1513
LWG1513

Resolved
'launch' enum too restrictive
http://cplusplus.github.io/LWG/lwg-defects.html#1513



Switzerland
-
d:lwg1514
LWG1514

C++11
packaged_task constructors need review
http://cplusplus.github.io/LWG/lwg-defects.html#1514



INCITS
-
d:lwg1515
LWG1515

Resolved
packaged_task::make_ready_at_thread_exit has no synchronization requirements
http://cplusplus.github.io/LWG/lwg-defects.html#1515



INCITS
-
d:lwg1516
LWG1516

C++11
No specification for which header contains auto_ptr
http://cplusplus.github.io/LWG/lwg-defects.html#1516



BSI
-
d:lwg1517
LWG1517

C++11
default_delete's default constructor should be trivial
http://cplusplus.github.io/LWG/lwg-defects.html#1517



Daniel Krügler
-
d:lwg1518
LWG1518

C++11
Waiting for deferred functions
http://cplusplus.github.io/LWG/lwg-defects.html#1518



Alberto Ganesh Barbati
-
d:lwg1519
LWG1519

C++11
bucketsize() const only for unordered set
http://cplusplus.github.io/LWG/lwg-defects.html#1519



Nicolai Josuttis
-
d:lwg152
LWG152

TC1
Typo in scan_is() semantics
http://cplusplus.github.io/LWG/lwg-defects.html#152



Dietmar Kühl
-
d:lwg1520
LWG1520

C++11
INVOKE on member data pointer with too many arguments
http://cplusplus.github.io/LWG/lwg-defects.html#1520



Howard Hinnant
-
d:lwg1521
LWG1521

LEWG
Requirements on internal pointer representations in containers
http://cplusplus.github.io/LWG/lwg-active.html#1521



Mike Spertus
-
d:lwg1522
LWG1522

C++11
conj specification is now nonsense
http://cplusplus.github.io/LWG/lwg-defects.html#1522



P.J. Plauger
-
d:lwg1523
LWG1523

Resolved
noexcept for Clause 29
http://cplusplus.github.io/LWG/lwg-defects.html#1523



Hans Boehm
-
d:lwg1524
LWG1524

C++11
Allocation functions are missing happens-before requirements and guarantees
http://cplusplus.github.io/LWG/lwg-defects.html#1524



Hans Boehm
-
d:lwg1525
LWG1525

C++11
Effects of resize(size()) on a vector
http://cplusplus.github.io/LWG/lwg-defects.html#1525



BSI
-
d:lwg1526
LWG1526

Resolved
C++ should not impose thread safety requirements on C99 library implementations
http://cplusplus.github.io/LWG/lwg-defects.html#1526



BSI
-
d:lwg153
LWG153

CD1
Typo in narrow() semantics
http://cplusplus.github.io/LWG/lwg-defects.html#153



Dietmar Kühl
-
d:lwg154
LWG154

TC1
Missing double specifier for do_get()
http://cplusplus.github.io/LWG/lwg-defects.html#154



Dietmar Kühl
-
d:lwg155
LWG155

TC1
Typo in naming the class defining the class Init
http://cplusplus.github.io/LWG/lwg-defects.html#155



Dietmar Kühl
-
d:lwg156
LWG156

TC1
Typo in imbue() description
http://cplusplus.github.io/LWG/lwg-defects.html#156



Dietmar Kühl
-
d:lwg157
LWG157

Dup
Meaningless error handling for pword() and iword()
http://cplusplus.github.io/LWG/lwg-closed.html#157



Dietmar Kühl
-
d:lwg158
LWG158

TC1
Underspecified semantics for setbuf()
http://cplusplus.github.io/LWG/lwg-defects.html#158



Dietmar Kühl
-
d:lwg159
LWG159

TC1
Strange use of underflow()
http://cplusplus.github.io/LWG/lwg-defects.html#159



Dietmar Kühl
-
d:lwg16
LWG16

TC1
Bad ctype_byname<char> decl
http://cplusplus.github.io/LWG/lwg-defects.html#16



Nathan Myers
-
d:lwg160
LWG160

TC1
Typo: Use of non-existing function exception()
http://cplusplus.github.io/LWG/lwg-defects.html#160



Dietmar Kühl
-
d:lwg161
LWG161

TC1
Typo: istream_iterator vs. istreambuf_iterator
http://cplusplus.github.io/LWG/lwg-defects.html#161



Dietmar Kühl
-
d:lwg162
LWG162

Dup
Really "formatted input functions"?
http://cplusplus.github.io/LWG/lwg-closed.html#162



Dietmar Kühl
-
d:lwg163
LWG163

Dup
Return of gcount() after a call to gcount
http://cplusplus.github.io/LWG/lwg-closed.html#163



Dietmar Kühl
-
d:lwg164
LWG164

TC1
do_put() has apparently unused fill argument
http://cplusplus.github.io/LWG/lwg-defects.html#164



Angelika Langer
-
d:lwg165
LWG165

CD1
xsputn(), pubsync() never called by basic_ostream members?
http://cplusplus.github.io/LWG/lwg-defects.html#165



Dietmar Kühl
-
d:lwg166
LWG166

Dup
Really "formatted output functions"?
http://cplusplus.github.io/LWG/lwg-closed.html#166



Dietmar Kühl
-
d:lwg167
LWG167

CD1
Improper use of traits_type::length()
http://cplusplus.github.io/LWG/lwg-defects.html#167



Dietmar Kühl
-
d:lwg168
LWG168

TC1
Typo: formatted vs. unformatted
http://cplusplus.github.io/LWG/lwg-defects.html#168



Dietmar Kühl
-
d:lwg169
LWG169

TC1
Bad efficiency of overflow() mandated
http://cplusplus.github.io/LWG/lwg-defects.html#169



Dietmar Kühl
-
d:lwg17
LWG17

TC1
Bad bool parsing
http://cplusplus.github.io/LWG/lwg-defects.html#17



Nathan Myers
-
d:lwg170
LWG170

TC1
Inconsistent definition of traits_type
http://cplusplus.github.io/LWG/lwg-defects.html#170



Dietmar Kühl
-
d:lwg171
LWG171

CD1
Strange seekpos() semantics due to joint position
http://cplusplus.github.io/LWG/lwg-defects.html#171



Dietmar Kühl
-
d:lwg172
LWG172

TC1
Inconsistent types for basic_istream::ignore()
http://cplusplus.github.io/LWG/lwg-defects.html#172



Greg Comeau, Dietmar Kühl
-
d:lwg173
LWG173

TC1
Inconsistent types for basic_filebuf::setbuf()
http://cplusplus.github.io/LWG/lwg-defects.html#173



Greg Comeau, Dietmar Kühl
-
d:lwg174
LWG174

TC1
Typo: OFF_T vs. POS_T
http://cplusplus.github.io/LWG/lwg-defects.html#174



Dietmar Kühl
-
d:lwg175
LWG175

TC1
Ambiguity for basic_streambuf::pubseekpos() and a few other functions.
http://cplusplus.github.io/LWG/lwg-defects.html#175



Dietmar Kühl
-
d:lwg176
LWG176

TC1
exceptions() in ios_base...?
http://cplusplus.github.io/LWG/lwg-defects.html#176



Dietmar Kühl
-
d:lwg177
LWG177

NAD
Complex operators cannot be explicitly instantiated
http://cplusplus.github.io/LWG/lwg-closed.html#177



Judy Ward
-
d:lwg178
LWG178

NAD
Should clog and cerr initially be tied to cout?
http://cplusplus.github.io/LWG/lwg-closed.html#178



Judy Ward
-
d:lwg179
LWG179

CD1
Comparison of const_iterators to iterators doesn't work
http://cplusplus.github.io/LWG/lwg-defects.html#179



Judy Ward
-
d:lwg18
LWG18

TC1
Get(...bool&) omitted
http://cplusplus.github.io/LWG/lwg-defects.html#18



Nathan Myers
-
d:lwg180
LWG180

CD1
Container member iterator arguments constness has unintended consequences
http://cplusplus.github.io/LWG/lwg-defects.html#180



Dave Abrahams
-
d:lwg181
LWG181

TC1
make_pair() unintended behavior
http://cplusplus.github.io/LWG/lwg-defects.html#181



Andrew Koenig
-
d:lwg182
LWG182

CD1
Ambiguous references to size_t
http://cplusplus.github.io/LWG/lwg-defects.html#182



Al Stevens
-
d:lwg183
LWG183

CD1
I/O stream manipulators don't work for wide character streams
http://cplusplus.github.io/LWG/lwg-defects.html#183



Andy Sawyer
-
d:lwg184
LWG184

CD1
numeric_limits<bool> wording problems
http://cplusplus.github.io/LWG/lwg-defects.html#184



Gabriel Dos Reis
-
d:lwg185
LWG185

CD1
Questionable use of term "inline"
http://cplusplus.github.io/LWG/lwg-defects.html#185



UK Panel
-
d:lwg186
LWG186

CD1
bitset::set() second parameter should be bool
http://cplusplus.github.io/LWG/lwg-defects.html#186



Darin Adler
-
d:lwg187
LWG187

CD1
iter_swap underspecified
http://cplusplus.github.io/LWG/lwg-defects.html#187



Andrew Koenig
-
d:lwg188
LWG188

NAD
valarray helpers missing augmented assignment operators
http://cplusplus.github.io/LWG/lwg-closed.html#188



Gabriel Dos Reis
-
d:lwg189
LWG189

TC1
setprecision() not specified correctly
http://cplusplus.github.io/LWG/lwg-defects.html#189



Andrew Koenig
-
d:lwg19
LWG19

TC1
"Noconv" definition too vague
http://cplusplus.github.io/LWG/lwg-defects.html#19



Nathan Myers
-
d:lwg190
LWG190

NAD
min() and max() functions should be std::binary_functions
http://cplusplus.github.io/LWG/lwg-closed.html#190



Mark Rintoul
-
d:lwg191
LWG191

NAD
Unclear complexity for algorithms such as binary search
http://cplusplus.github.io/LWG/lwg-closed.html#191



Nico Josuttis
-
d:lwg192
LWG192

NAD
a.insert(p,t) is inefficient and overconstrained
http://cplusplus.github.io/LWG/lwg-closed.html#192



Ed Brey
-
d:lwg193
LWG193

TC1
Heap operations description incorrect
http://cplusplus.github.io/LWG/lwg-defects.html#193



Markus Mauhart
-
d:lwg194
LWG194

NAD
rdbuf() functions poorly specified
http://cplusplus.github.io/LWG/lwg-closed.html#194



Steve Clamage
-
d:lwg195
LWG195

TC1
Should basic_istream::sentry's constructor ever set eofbit?
http://cplusplus.github.io/LWG/lwg-defects.html#195



Matt Austern
-
d:lwg196
LWG196

Dup
Placement new example has alignment problems
http://cplusplus.github.io/LWG/lwg-closed.html#196



Herb Sutter
-
d:lwg197
LWG197

NAD
max_size() underspecified
http://cplusplus.github.io/LWG/lwg-closed.html#197



Andy Sawyer
-
d:lwg198
LWG198

CD1
Validity of pointers and references unspecified after iterator destruction
http://cplusplus.github.io/LWG/lwg-defects.html#198



Beman Dawes
-
d:lwg199
LWG199

TC1
What does allocate(0) return?
http://cplusplus.github.io/LWG/lwg-defects.html#199



Matt Austern
-
d:lwg2
LWG2

NAD
Auto_ptr conversions effects incorrect
http://cplusplus.github.io/LWG/lwg-closed.html#2



Nathan Myers
-
d:lwg20
LWG20

TC1
Thousands_sep returns wrong type
http://cplusplus.github.io/LWG/lwg-defects.html#20



Nathan Myers
-
d:lwg200
LWG200

CD1
Forward iterator requirements don't allow constant iterators
http://cplusplus.github.io/LWG/lwg-defects.html#200



Matt Austern
-
d:lwg2000
LWG2000

C++11
Missing definition of packaged_task specialization of uses_allocator
http://cplusplus.github.io/LWG/lwg-defects.html#2000



Howard Hinnant
-
d:lwg2001
LWG2001

C++11
Class template basic_regex uses non existent string_type
http://cplusplus.github.io/LWG/lwg-defects.html#2001



Volker Lukas
-
d:lwg2002
LWG2002

Resolved
Class template match_results does not specify the semantics of operator==
http://cplusplus.github.io/LWG/lwg-defects.html#2002



Daniel Krügler
-
d:lwg2003
LWG2003

C++14
String exception inconsistency in erase.
http://cplusplus.github.io/LWG/lwg-defects.html#2003



José Daniel García Sánchez
-
d:lwg2004
LWG2004

C++11
duration::operator* has template parameters in funny order
http://cplusplus.github.io/LWG/lwg-defects.html#2004



P.J. Plauger
-
d:lwg2005
LWG2005

C++14
unordered_map::insert(T&&) protection should apply to map too
http://cplusplus.github.io/LWG/lwg-defects.html#2005



P.J. Plauger
-
d:lwg2006
LWG2006

NAD
emplace broken for associative containers
http://cplusplus.github.io/LWG/lwg-closed.html#2006



Pablo Halpern
-
d:lwg2007
LWG2007

C++11
Incorrect specification of return value for map<>::at()
http://cplusplus.github.io/LWG/lwg-defects.html#2007



Matt Austern
-
d:lwg2008
LWG2008

C++11
Conflicting Error Conditions for packaged_task::operator()
http://cplusplus.github.io/LWG/lwg-defects.html#2008



Pete Becker
-
d:lwg2009
LWG2009

C++14
Reporting out-of-bound values on numeric string conversions
http://cplusplus.github.io/LWG/lwg-defects.html#2009



Alisdair Meredith
-
d:lwg201
LWG201

CD1
Numeric limits terminology wrong
http://cplusplus.github.io/LWG/lwg-defects.html#201



Stephen Cleary
-
d:lwg2010
LWG2010

C++14
is_* traits for binding operations can't be meaningfully specialized
http://cplusplus.github.io/LWG/lwg-defects.html#2010



Sean Hunt
-
d:lwg2011
LWG2011

C++14
Unexpected output required of strings
http://cplusplus.github.io/LWG/lwg-defects.html#2011



James Kanze
-
d:lwg2012
LWG2012

Resolved
Associative maps should insert pair, not tuple
http://cplusplus.github.io/LWG/lwg-defects.html#2012



Paolo Carlini
-
d:lwg2013
LWG2013

C++14
Do library implementers have the freedom to add constexpr?
http://cplusplus.github.io/LWG/lwg-defects.html#2013



Matt Austern
-
d:lwg2014
LWG2014

C++11
More restrictions on macro names
http://cplusplus.github.io/LWG/lwg-defects.html#2014



Alberto Ganesh Barbati
-
d:lwg2015
LWG2015

C++14
Incorrect pre-conditions for some type traits
http://cplusplus.github.io/LWG/lwg-defects.html#2015



Nikolay Ivchenkov
-
d:lwg2016
LWG2016

WP
Allocators must be no-throw swappable
http://cplusplus.github.io/LWG/lwg-defects.html#2016



Daniel Krügler
-
d:lwg2017
LWG2017

C++11
std::reference_wrapper makes incorrect usage of std::result_of
http://cplusplus.github.io/LWG/lwg-defects.html#2017



Nikolay Ivchenkov
-
d:lwg2018
LWG2018

C++14
[CD] regex_traits::isctype Returns clause is wrong
http://cplusplus.github.io/LWG/lwg-defects.html#2018



Jonathan Wakely
-
d:lwg2019
LWG2019

C++11
isblank not supported by std::locale
http://cplusplus.github.io/LWG/lwg-defects.html#2019



Jonathan Wakely
-
d:lwg202
LWG202

CD1
unique() effects unclear when predicate not an equivalence relation
http://cplusplus.github.io/LWG/lwg-defects.html#202



Andrew Koenig
-
d:lwg2020
LWG2020

C++11
Time utility arithmetic constexpr functions have invalid effects
http://cplusplus.github.io/LWG/lwg-defects.html#2020



Daniel Krügler
-
d:lwg2021
LWG2021

C++14
Further incorrect usages of result_of
http://cplusplus.github.io/LWG/lwg-defects.html#2021



Daniel Krügler
-
d:lwg2022
LWG2022

C++11
reference_wrapper<T>::result_type is underspecified
http://cplusplus.github.io/LWG/lwg-defects.html#2022



Daniel Krügler
-
d:lwg2023
LWG2023

Resolved
Incorrect requirements for lock_guard and unique_lock
http://cplusplus.github.io/LWG/lwg-defects.html#2023



Daniel Krügler
-
d:lwg2024
LWG2024

Resolved
Inconsistent implementation requirements for atomic<integral> and atomic<T*>
http://cplusplus.github.io/LWG/lwg-defects.html#2024



Daniel Krügler
-
d:lwg2025
LWG2025

Resolved
Incorrect semantics of move assignment operator of packaged_task
http://cplusplus.github.io/LWG/lwg-defects.html#2025



Daniel Krügler
-
d:lwg2026
LWG2026

NAD
hash should be std qualified for unordered container
http://cplusplus.github.io/LWG/lwg-closed.html#2026



Pete Becker
-
d:lwg2027
LWG2027

C++11
Initialization of the stored task of a packaged_task
http://cplusplus.github.io/LWG/lwg-defects.html#2027



Alberto Ganesh Barbati
-
d:lwg2028
LWG2028

C++14
messages_base::catalog overspecified
http://cplusplus.github.io/LWG/lwg-defects.html#2028



Howard Hinnant
-
d:lwg2029
LWG2029

C++11
Missing 'noexcept' on basic_regex move-assignment operator
http://cplusplus.github.io/LWG/lwg-defects.html#2029



Jonathan Wakely
-
d:lwg203
LWG203

NAD
basic_istream::sentry::sentry() is uninstantiable with ctype<user-defined type>
http://cplusplus.github.io/LWG/lwg-closed.html#203



Matt McClure and Dietmar Kühl
-
d:lwg2030
LWG2030

C++11
packaged_task::result_type should be removed
http://cplusplus.github.io/LWG/lwg-defects.html#2030



Anthony Williams
-
d:lwg2031
LWG2031

C++11
std::future<>::share() only applies to rvalues
http://cplusplus.github.io/LWG/lwg-defects.html#2031



Anthony Williams
-
d:lwg2032
LWG2032

C++11
Incorrect synchronization clause of async function
http://cplusplus.github.io/LWG/lwg-defects.html#2032



Alberto Ganesh Barbati
-
d:lwg2033
LWG2033

C++14
Preconditions of reserve, shrink_to_fit, and resize functions
http://cplusplus.github.io/LWG/lwg-defects.html#2033



Nikolay Ivchenkov
-
d:lwg2034
LWG2034

Resolved
Initialization of atomics is misspecified so that it doesn't preserve sequential consistency
http://cplusplus.github.io/LWG/lwg-defects.html#2034



Hans Boehm
-
d:lwg2035
LWG2035

Open
Output iterator requirements are broken
http://cplusplus.github.io/LWG/lwg-active.html#2035



Daniel Krügler
-
d:lwg2036
LWG2036

NAD
istream >> char and eofbit
http://cplusplus.github.io/LWG/lwg-closed.html#2036



Howard Hinnant
-
d:lwg2037
LWG2037

Resolved
atomic free functions incorrectly specified
http://cplusplus.github.io/LWG/lwg-defects.html#2037



Pete Becker
-
d:lwg2038
LWG2038

Open
Missing definition for incrementable iterator
http://cplusplus.github.io/LWG/lwg-active.html#2038



Pete Becker
-
d:lwg2039
LWG2039

C++14
Issues with std::reverse and std::copy_if
http://cplusplus.github.io/LWG/lwg-defects.html#2039



Nikolay Ivchenkov
-
d:lwg204
LWG204

NAD
distance(first, last) when "last" is before "first"
http://cplusplus.github.io/LWG/lwg-closed.html#204



Rintala Matti
-
d:lwg2040
LWG2040

LEWG
Missing type traits related to is_convertible
http://cplusplus.github.io/LWG/lwg-active.html#2040



Daniel Krügler
-
d:lwg2041
LWG2041

C++11
Stage 2 accumulate incompatibilty
http://cplusplus.github.io/LWG/lwg-defects.html#2041



Howard Hinnant
-
d:lwg2042
LWG2042

C++11
Comparing forward_list::before_begin() to forward_list::end()
http://cplusplus.github.io/LWG/lwg-defects.html#2042



Joe Gottman
-
d:lwg2043
LWG2043

NAD
std{in,out,err} should be usable as field names
http://cplusplus.github.io/LWG/lwg-closed.html#2043



Jeffrey Yasskin
-
d:lwg2044
LWG2044

C++14
No definition of "Stable" for copy algorithms
http://cplusplus.github.io/LWG/lwg-defects.html#2044



Pablo Halpern
-
d:lwg2045
LWG2045

C++14
forward_list::merge and forward_list::splice_after with unequal allocators
http://cplusplus.github.io/LWG/lwg-defects.html#2045



Pablo Halpern
-
d:lwg2046
LWG2046

NAD
shared_future(future<R>&&) should be allowed to throw
http://cplusplus.github.io/LWG/lwg-closed.html#2046



Peter Sommerlad
-
d:lwg2047
LWG2047

C++14
Incorrect "mixed" move-assignment semantics of unique_ptr
http://cplusplus.github.io/LWG/lwg-defects.html#2047



Daniel Krügler
-
d:lwg2048
LWG2048

C++14
Unnecessary mem_fn overloads
http://cplusplus.github.io/LWG/lwg-defects.html#2048



Jonathan Wakely
-
d:lwg2049
LWG2049

C++14
is_destructible is underspecified
http://cplusplus.github.io/LWG/lwg-defects.html#2049



Daniel Krügler
-
d:lwg205
LWG205

NAD
numeric_limits unclear on how to determine floating point types
http://cplusplus.github.io/LWG/lwg-closed.html#205



Steve Cleary
-
d:lwg2050
LWG2050

C++14
Unordered associative containers do not use allocator_traits to define member types
http://cplusplus.github.io/LWG/lwg-defects.html#2050



Tom Zieberman
-
d:lwg2051
LWG2051

Resolved
Explicit tuple constructors for more than one parameter
http://cplusplus.github.io/LWG/lwg-defects.html#2051



Ville Voutilainen
-
d:lwg2052
LWG2052

Resolved
Mixup between mapped_type and value_type for associative containers
http://cplusplus.github.io/LWG/lwg-defects.html#2052



Marc Glisse
-
d:lwg2053
LWG2053

C++14
Errors in regex bitmask types
http://cplusplus.github.io/LWG/lwg-defects.html#2053



Jonathan Wakely
-
d:lwg2054
LWG2054

Resolved
time_point constructors need to be constexpr
http://cplusplus.github.io/LWG/lwg-defects.html#2054



Anthony Williams
-
d:lwg2055
LWG2055

LEWG
std::move in std::accumulate and other algorithms
http://cplusplus.github.io/LWG/lwg-active.html#2055



Chris Jefferson
-
d:lwg2056
LWG2056

C++14
future_errc enums start with value 0 (invalid value for broken_promise)
http://cplusplus.github.io/LWG/lwg-defects.html#2056



Nicolai Josuttis
-
d:lwg2057
LWG2057

Resolved
time_point + duration semantics should be made constexpr conforming
http://cplusplus.github.io/LWG/lwg-defects.html#2057



Daniel Krügler
-
d:lwg2058
LWG2058

C++14
valarray and begin/end
http://cplusplus.github.io/LWG/lwg-defects.html#2058



Gabriel Dos Reis
-
d:lwg2059
LWG2059

WP
C++0x ambiguity problem with map::erase
http://cplusplus.github.io/LWG/lwg-defects.html#2059



Christopher Jefferson
-
d:lwg206
LWG206

CD1
operator new(size_t, nothrow) may become unlinked to ordinary operator new if ordinary version replaced
http://cplusplus.github.io/LWG/lwg-defects.html#206



Howard Hinnant
-
d:lwg2060
LWG2060

NAD Editorial
unique_ptr<T[]>(nullptr_t) missing noexcept
http://cplusplus.github.io/LWG/lwg-closed.html#2060



Howard Hinnant, Paolo Carlini
-
d:lwg2061
LWG2061

C++14
make_move_iterator and arrays
http://cplusplus.github.io/LWG/lwg-defects.html#2061



Marc Glisse
-
d:lwg2062
LWG2062

Tentatively Ready
Effect contradictions w/o no-throw guarantee of std::function swaps
http://cplusplus.github.io/LWG/lwg-active.html#2062



Daniel Krügler
-
d:lwg2063
LWG2063

WP
Contradictory requirements for string move assignment
http://cplusplus.github.io/LWG/lwg-defects.html#2063



Howard Hinnant
-
d:lwg2064
LWG2064

C++14
More noexcept issues in basic_string
http://cplusplus.github.io/LWG/lwg-defects.html#2064



Howard Hinnant
-
d:lwg2065
LWG2065

C++14
Minimal allocator interface
http://cplusplus.github.io/LWG/lwg-defects.html#2065



Jonathan Wakely
-
d:lwg2066
LWG2066

Resolved
Missing specification of vector::resize(size_type)
http://cplusplus.github.io/LWG/lwg-defects.html#2066



Rani Sharoni
-
d:lwg2067
LWG2067

C++14
packaged_task should have deleted copy c'tor with const parameter
http://cplusplus.github.io/LWG/lwg-defects.html#2067



Daniel Krügler
-
d:lwg2068
LWG2068

NAD
std::pair not C++03-compatible with defaulted copy c'tor
http://cplusplus.github.io/LWG/lwg-closed.html#2068



Daniel Krügler
-
d:lwg2069
LWG2069

C++14
Inconsistent exception spec for basic_string move constructor
http://cplusplus.github.io/LWG/lwg-defects.html#2069



Bo Persson
-
d:lwg207
LWG207

Dup
ctype<char> members return clause incomplete
http://cplusplus.github.io/LWG/lwg-closed.html#207



Robert Klarer
-
d:lwg2070
LWG2070

Open
allocate_shared should use allocator_traits<A>::construct
http://cplusplus.github.io/LWG/lwg-active.html#2070



Jonathan Wakely
-
d:lwg2071
LWG2071

C++14
std::valarray move-assignment
http://cplusplus.github.io/LWG/lwg-defects.html#2071



Paolo Carlini
-
d:lwg2072
LWG2072

WP
Unclear wording about capacity of temporary buffers
http://cplusplus.github.io/LWG/lwg-defects.html#2072



Kazutoshi Satoda
-
d:lwg2073
LWG2073

NAD
Library exceptions that take string arguments
http://cplusplus.github.io/LWG/lwg-closed.html#2073



Eelis van der Weegen
-
d:lwg2074
LWG2074

C++14
Off by one error in std::reverse_copy
http://cplusplus.github.io/LWG/lwg-defects.html#2074



Peter Miller
-
d:lwg2075
LWG2075

Resolved
Progress guarantees, lock-free property, and scheduling assumptions
http://cplusplus.github.io/LWG/lwg-defects.html#2075



Torvald Riegel
-
d:lwg2076
LWG2076

WP
Bad CopyConstructible requirement in set constructors
http://cplusplus.github.io/LWG/lwg-defects.html#2076



Jens Maurer
-
d:lwg2077
LWG2077

Open
Further incomplete constraints for type traits
http://cplusplus.github.io/LWG/lwg-active.html#2077



Daniel Krügler
-
d:lwg2078
LWG2078

C++14
Throw specification of async() incomplete
http://cplusplus.github.io/LWG/lwg-defects.html#2078



Nicolai Josuttis
-
d:lwg2079
LWG2079

NAD
Required pow() overloads
http://cplusplus.github.io/LWG/lwg-closed.html#2079



Steve Clamage
-
d:lwg208
LWG208

TC1
Unnecessary restriction on past-the-end iterators
http://cplusplus.github.io/LWG/lwg-defects.html#208



Stephen Cleary
-
d:lwg2080
LWG2080

C++14
Specify when once_flag becomes invalid
http://cplusplus.github.io/LWG/lwg-defects.html#2080



Nicolai Josuttis
-
d:lwg2081
LWG2081

C++14
Allocator requirements should include CopyConstructible
http://cplusplus.github.io/LWG/lwg-defects.html#2081



Jonathan Wakely
-
d:lwg2082
LWG2082

NAD
Misleading complexity requirements in <algorithm>
http://cplusplus.github.io/LWG/lwg-closed.html#2082



Nicolai Josuttis
-
d:lwg2083
LWG2083

C++14
const-qualification on weak_ptr::owner_before
http://cplusplus.github.io/LWG/lwg-defects.html#2083



Ai Azuma
-
d:lwg2084
LWG2084

NAD
basic_string use of charT*
http://cplusplus.github.io/LWG/lwg-closed.html#2084



Howard Hinnant
-
d:lwg2085
LWG2085

C++14
Wrong description of effect 1 of basic_istream::ignore
http://cplusplus.github.io/LWG/lwg-defects.html#2085



Krzysztof Żelechowski
-
d:lwg2086
LWG2086

C++14
Overly generic type support for math functions
http://cplusplus.github.io/LWG/lwg-defects.html#2086



Daniel Krügler
-
d:lwg2087
LWG2087

C++14
iostream_category() and noexcept
http://cplusplus.github.io/LWG/lwg-defects.html#2087



Nicolai Josuttis
-
d:lwg2088
LWG2088

Open
std::terminate problem
http://cplusplus.github.io/LWG/lwg-active.html#2088



Daniel Krügler
-
d:lwg2089
LWG2089

EWG
std::allocator::construct should use uniform initialization
http://cplusplus.github.io/LWG/lwg-active.html#2089



David Krauss
-
d:lwg209
LWG209

TC1
basic_string declarations inconsistent
http://cplusplus.github.io/LWG/lwg-defects.html#209



Igor Stauder
-
d:lwg2090
LWG2090

NAD
Minor Overconstraint in Mutex Types
http://cplusplus.github.io/LWG/lwg-closed.html#2090



Pete Becker
-
d:lwg2091
LWG2091

C++14
Misplaced effect in m.try_lock_for()
http://cplusplus.github.io/LWG/lwg-defects.html#2091



Pete Becker
-
d:lwg2092
LWG2092

C++14
Vague Wording for condition_variable_any
http://cplusplus.github.io/LWG/lwg-defects.html#2092



Pete Becker
-
d:lwg2093
LWG2093

C++14
Throws clause of condition_variable::wait with predicate
http://cplusplus.github.io/LWG/lwg-defects.html#2093



Alberto Ganesh Barbati
-
d:lwg2094
LWG2094

C++14
duration conversion overflow shouldn't participate in overload resolution
http://cplusplus.github.io/LWG/lwg-defects.html#2094



Vicente J. Botet Escriba
-
d:lwg2095
LWG2095

LEWG
promise and packaged_task missing constructors needed for uses-allocator construction
http://cplusplus.github.io/LWG/lwg-active.html#2095



Jonathan Wakely
-
d:lwg2096
LWG2096

C++14
Incorrect constraints of future::get in regard to MoveAssignable
http://cplusplus.github.io/LWG/lwg-defects.html#2096



Daniel Krügler
-
d:lwg2097
LWG2097

C++14
packaged_task constructors should be constrained
http://cplusplus.github.io/LWG/lwg-defects.html#2097



Jonathan Wakely
-
d:lwg2098
LWG2098

C++14
Minor Inconsistency between promise::set_value and promise::set_value_at_thread_exit
http://cplusplus.github.io/LWG/lwg-defects.html#2098



Pete Becker
-
d:lwg2099
LWG2099

C++14
Unnecessary constraints of va_start() usage
http://cplusplus.github.io/LWG/lwg-defects.html#2099



Daniel Krügler
-
d:lwg21
LWG21

TC1
Codecvt_byname<> instantiations
http://cplusplus.github.io/LWG/lwg-defects.html#21



Nathan Myers
-
d:lwg210
LWG210

TC1
distance first and last confused
http://cplusplus.github.io/LWG/lwg-defects.html#210



Lisa Lippincott
-
d:lwg2100
LWG2100

C++14
timed waiting functions cannot timeout if launch::async policy used
http://cplusplus.github.io/LWG/lwg-defects.html#2100



Jonathan Wakely
-
d:lwg2101
LWG2101

WP
Some transformation types can produce impossible types
http://cplusplus.github.io/LWG/lwg-defects.html#2101



Daniel Krügler
-
d:lwg2102
LWG2102

C++14
Why is std::launch an implementation-defined type?
http://cplusplus.github.io/LWG/lwg-defects.html#2102



Jonathan Wakely
-
d:lwg2103
LWG2103

C++14
std::allocator_traits<std::allocator<T>>::propagate_on_container_move_assignment
http://cplusplus.github.io/LWG/lwg-defects.html#2103



Ai Azuma
-
d:lwg2104
LWG2104

C++14
unique_lock move-assignment should not be noexcept
http://cplusplus.github.io/LWG/lwg-defects.html#2104



Anthony Williams
-
d:lwg2105
LWG2105

C++14
Inconsistent requirements on const_iterator's value_type
http://cplusplus.github.io/LWG/lwg-defects.html#2105



Jeffrey Yasskin
-
d:lwg2106
LWG2106

WP
move_iterator wrapping iterators returning prvalues
http://cplusplus.github.io/LWG/lwg-defects.html#2106



Dave Abrahams
-
d:lwg2107
LWG2107

NAD
Some iterator category should guarantee the lifetime of references
http://cplusplus.github.io/LWG/lwg-closed.html#2107



Jeffrey Yasskin
-
d:lwg2108
LWG2108

Resolved
No way to identify allocator types that always compare equal
http://cplusplus.github.io/LWG/lwg-defects.html#2108



Jonathan Wakely
-
d:lwg2109
LWG2109

C++14
Incorrect requirements for hash specializations
http://cplusplus.github.io/LWG/lwg-defects.html#2109



Daniel Krügler
-
d:lwg211
LWG211

TC1
operator>>(istream&, string&) doesn't set failbit
http://cplusplus.github.io/LWG/lwg-defects.html#211



Scott Snyder
-
d:lwg2110
LWG2110

C++14
remove can't swap but note says it might
http://cplusplus.github.io/LWG/lwg-defects.html#2110



Howard Hinnant
-
d:lwg2111
LWG2111

WP
Which unexpected/terminate handler is called from the exception handling runtime?
http://cplusplus.github.io/LWG/lwg-defects.html#2111



Howard Hinnant
-
d:lwg2112
LWG2112

C++14
User-defined classes that cannot be derived from
http://cplusplus.github.io/LWG/lwg-defects.html#2112



Daniel Krügler
-
d:lwg2113
LWG2113

NAD
Do library implementers have the freedom to add final to non-polymorphic components?
http://cplusplus.github.io/LWG/lwg-closed.html#2113



Daniel Krügler
-
d:lwg2114
LWG2114

Open
Incorrect "contextually convertible to bool" requirements
http://cplusplus.github.io/LWG/lwg-active.html#2114



Daniel Krügler
-
d:lwg2115
LWG2115

Open
Undefined behaviour for valarray assignments with mask_array index?
http://cplusplus.github.io/LWG/lwg-active.html#2115



Thomas Plum
-
d:lwg2116
LWG2116

Open
std::swap noexcept(what?)
http://cplusplus.github.io/LWG/lwg-active.html#2116



Dave Abrahams
-
d:lwg2117
LWG2117

Open
ios_base manipulators should have showgrouping/noshowgrouping
http://cplusplus.github.io/LWG/lwg-active.html#2117



Benjamin Kosnik
-
d:lwg2118
LWG2118

Resolved
[CD] unique_ptr for array does not support cv qualification conversion of actual argument
http://cplusplus.github.io/LWG/lwg-defects.html#2118



Alf P. Steinbach
-
d:lwg2119
LWG2119

WP
Missing hash specializations for extended integer types
http://cplusplus.github.io/LWG/lwg-defects.html#2119



Daniel Krügler
-
d:lwg212
LWG212

TC1
Empty range behavior unclear for several algorithms
http://cplusplus.github.io/LWG/lwg-defects.html#212



Nico Josuttis
-
d:lwg2120
LWG2120

C++14
What should async do if neither 'async' nor 'deferred' is set in policy?
http://cplusplus.github.io/LWG/lwg-defects.html#2120



Jonathan Wakely
-
d:lwg2121
LWG2121

New
app for string streams
http://cplusplus.github.io/LWG/lwg-active.html#2121



Nicolai Josuttis
-
d:lwg2122
LWG2122

C++14
merge() stability for lists versus forward lists
http://cplusplus.github.io/LWG/lwg-defects.html#2122



Nicolai Josuttis
-
d:lwg2123
LWG2123

C++14
merge() allocator requirements for lists versus forward lists
http://cplusplus.github.io/LWG/lwg-defects.html#2123



Nicolai Josuttis
-
d:lwg2124
LWG2124

NAD
Seed sequence over-specified
http://cplusplus.github.io/LWG/lwg-closed.html#2124



Alberto Ganesh Barbati
-
d:lwg2125
LWG2125

Pending NAD Editorial
TimedMutex specification problem
http://cplusplus.github.io/LWG/lwg-closed.html#2125



Vicente J. Botet Escriba
-
d:lwg2126
LWG2126

Pending NAD Editorial
Several specification problems in regard to mutex requirements
http://cplusplus.github.io/LWG/lwg-closed.html#2126



Pete Becker
-
d:lwg2127
LWG2127

WP
Move-construction with raw_storage_iterator
http://cplusplus.github.io/LWG/lwg-defects.html#2127



Jonathan Wakely
-
d:lwg2128
LWG2128

C++14
Absence of global functions cbegin/cend
http://cplusplus.github.io/LWG/lwg-defects.html#2128



Dmitry Polukhin
-
d:lwg2129
LWG2129

WP
User specializations of std::initializer_list
http://cplusplus.github.io/LWG/lwg-defects.html#2129



Richard Smith
-
d:lwg213
LWG213

NAD
Math function overloads ambiguous
http://cplusplus.github.io/LWG/lwg-closed.html#213



Nico Josuttis
-
d:lwg2130
LWG2130

C++14
Missing ordering constraints
http://cplusplus.github.io/LWG/lwg-defects.html#2130



Mark Batty
-
d:lwg2131
LWG2131

NAD
Member function getline taking a string as parameter
http://cplusplus.github.io/LWG/lwg-closed.html#2131



Loïc Joly
-
d:lwg2132
LWG2132

C++14
std::function ambiguity
http://cplusplus.github.io/LWG/lwg-defects.html#2132



Ville Voutilainen
-
d:lwg2133
LWG2133

WP
Attitude to overloaded comma for iterators
http://cplusplus.github.io/LWG/lwg-defects.html#2133



Yakov Galka
-
d:lwg2134
LWG2134

Pending NAD Editorial
Redundant Mutex requirement?
http://cplusplus.github.io/LWG/lwg-closed.html#2134



Pete Becker
-
d:lwg2135
LWG2135

C++14
Unclear requirement for exceptions thrown in condition_variable::wait()
http://cplusplus.github.io/LWG/lwg-defects.html#2135



Pete Becker
-
d:lwg2136
LWG2136

Open
Postconditions vs. exceptions
http://cplusplus.github.io/LWG/lwg-active.html#2136



Jens Maurer
-
d:lwg2137
LWG2137

Open
Misleadingly constrained post-condition in the presence of exceptions
http://cplusplus.github.io/LWG/lwg-active.html#2137



Jonathan Wakely
-
d:lwg2138
LWG2138

C++14
atomic_flag::clear should not accept memory_order_consume
http://cplusplus.github.io/LWG/lwg-defects.html#2138



Ben Viglietta
-
d:lwg2139
LWG2139

Open
What is a user-defined type?
http://cplusplus.github.io/LWG/lwg-active.html#2139



Loïc Joly
-
d:lwg214
LWG214

CD1
set::find() missing const overload
http://cplusplus.github.io/LWG/lwg-defects.html#214



Judy Ward
-
d:lwg2140
LWG2140

C++14
Meaning of notify_all_at_thread_exit synchronization requirement?
http://cplusplus.github.io/LWG/lwg-defects.html#2140



Pete Becker
-
d:lwg2141
LWG2141

C++14
common_type trait produces reference types
http://cplusplus.github.io/LWG/lwg-defects.html#2141



Doug Gregor
-
d:lwg2142
LWG2142

C++14
packaged_task::operator() synchronization too broad?
http://cplusplus.github.io/LWG/lwg-defects.html#2142



Pete Becker
-
d:lwg2143
LWG2143

C++14
ios_base::xalloc should be thread-safe
http://cplusplus.github.io/LWG/lwg-defects.html#2143



Alberto Ganesh Barbati
-
d:lwg2144
LWG2144

C++14
Missing noexcept specification in type_index
http://cplusplus.github.io/LWG/lwg-defects.html#2144



Daniel Krügler
-
d:lwg2145
LWG2145

C++14
error_category default constructor
http://cplusplus.github.io/LWG/lwg-defects.html#2145



Howard Hinnant
-
d:lwg2146
LWG2146

Open
Are reference types Copy/Move-Constructible/Assignable or Destructible?
http://cplusplus.github.io/LWG/lwg-active.html#2146



Nikolay Ivchenkov
-
d:lwg2147
LWG2147

C++14
Unclear hint type in Allocator's allocate function
http://cplusplus.github.io/LWG/lwg-defects.html#2147



Daniel Krügler
-
d:lwg2148
LWG2148

C++14
Hashing enums should be supported directly by std::hash
http://cplusplus.github.io/LWG/lwg-defects.html#2148



Ville Voutilainen
-
d:lwg2149
LWG2149

C++14
Concerns about 20.8/5
http://cplusplus.github.io/LWG/lwg-defects.html#2149



Scott Meyers
-
d:lwg215
LWG215

NAD
Can a map's key_type be const?
http://cplusplus.github.io/LWG/lwg-closed.html#215



Judy Ward
-
d:lwg2150
LWG2150

C++14
Unclear specification of find_end
http://cplusplus.github.io/LWG/lwg-defects.html#2150



Andrew Koenig
-
d:lwg2151
LWG2151

Open
basic_string<>::swap semantics ignore allocators
http://cplusplus.github.io/LWG/lwg-active.html#2151



Robert Shearer
-
d:lwg2152
LWG2152

LEWG
Instances of standard container types are not swappable
http://cplusplus.github.io/LWG/lwg-active.html#2152



Robert Shearer
-
d:lwg2153
LWG2153

LEWG
Narrowing of the non-member swap contract
http://cplusplus.github.io/LWG/lwg-active.html#2153



Robert Shearer
-
d:lwg2154
LWG2154

New
What exactly does compile-time complexity imply?
http://cplusplus.github.io/LWG/lwg-active.html#2154



John Salmon
-
d:lwg2155
LWG2155

Open
Macro __bool_true_false_are_defined should be removed
http://cplusplus.github.io/LWG/lwg-active.html#2155



Thomas Plum
-
d:lwg2156
LWG2156

WP
Unordered containers' reserve(n) reserves for n-1 elements
http://cplusplus.github.io/LWG/lwg-defects.html#2156



Daniel James
-
d:lwg2157
LWG2157

Open
How does std::array<T,0> initialization work when T is not default-constructible?
http://cplusplus.github.io/LWG/lwg-active.html#2157



Daryle Walker
-
d:lwg2158
LWG2158

Open
Conditional copy/move in std::vector
http://cplusplus.github.io/LWG/lwg-active.html#2158



Nikolay Ivchenkov
-
d:lwg2159
LWG2159

C++14
atomic_flag initialization
http://cplusplus.github.io/LWG/lwg-defects.html#2159



Alberto Ganesh Barbati
-
d:lwg216
LWG216

Dup
setbase manipulator description flawed
http://cplusplus.github.io/LWG/lwg-closed.html#216



Hyman Rosen
-
d:lwg2160
LWG2160

WP
Unintended destruction ordering-specification of resize
http://cplusplus.github.io/LWG/lwg-defects.html#2160



Daniel Krügler
-
d:lwg2161
LWG2161

NAD
const equivalence of std::map
http://cplusplus.github.io/LWG/lwg-closed.html#2161



Bjarne Stroustrup
-
d:lwg2162
LWG2162

C++14
allocator_traits::max_size missing noexcept
http://cplusplus.github.io/LWG/lwg-defects.html#2162



Bo Persson
-
d:lwg2163
LWG2163

C++14
nth_element requires inconsistent post-conditions
http://cplusplus.github.io/LWG/lwg-defects.html#2163



Peter Sommerlad
-
d:lwg2164
LWG2164

Open
What are the semantics of vector.emplace(vector.begin(), vector.back())?
http://cplusplus.github.io/LWG/lwg-active.html#2164



Howard Hinnant
-
d:lwg2165
LWG2165

Resolved
std::atomic<X> requires X to be nothrow default constructible
http://cplusplus.github.io/LWG/lwg-defects.html#2165



Jonathan Wakely
-
d:lwg2166
LWG2166

Tentatively Ready
Heap property underspecified?
http://cplusplus.github.io/LWG/lwg-active.html#2166



Peter Sommerlad
-
d:lwg2167
LWG2167

NAD
Copy assignment requirements of Containers
http://cplusplus.github.io/LWG/lwg-closed.html#2167



Dean Michael Berris
-
d:lwg2168
LWG2168

WP
Inconsistent specification of uniform_real_distribution constructor
http://cplusplus.github.io/LWG/lwg-defects.html#2168



Marshall Clow
-
d:lwg2169
LWG2169

C++14
Missing reset() requirements in unique_ptr specialization
http://cplusplus.github.io/LWG/lwg-defects.html#2169



Geoffrey Romer
-
d:lwg217
LWG217

TC1
Facets example (Classifying Japanese characters) contains errors
http://cplusplus.github.io/LWG/lwg-defects.html#217



Martin Sebor
-
d:lwg2170
LWG2170

WP
Aggregates cannot be DefaultConstructible
http://cplusplus.github.io/LWG/lwg-defects.html#2170



Daniel Krügler
-
d:lwg2171
LWG2171

NAD
"swappable" undefined for swapping lvalue and rvalue
http://cplusplus.github.io/LWG/lwg-closed.html#2171



Robert Shearer
-
d:lwg2172
LWG2172

C++14
Does atomic_compare_exchange_* accept v == nullptr arguments?
http://cplusplus.github.io/LWG/lwg-defects.html#2172



Howard Hinnant
-
d:lwg2173
LWG2173

New
The meaning of operator + in the description of the algorithms
http://cplusplus.github.io/LWG/lwg-active.html#2173



Nikolay Ivchenkov
-
d:lwg2174
LWG2174

C++14
wstring_convert::converted() should be noexcept
http://cplusplus.github.io/LWG/lwg-defects.html#2174



Jonathan Wakely
-
d:lwg2175
LWG2175

C++14
wstring_convert and wbuffer_convert validity
http://cplusplus.github.io/LWG/lwg-defects.html#2175



Jonathan Wakely
-
d:lwg2176
LWG2176

C++14
Special members for wstring_convert and wbuffer_convert
http://cplusplus.github.io/LWG/lwg-defects.html#2176



Jonathan Wakely
-
d:lwg2177
LWG2177

C++14
Requirements on Copy/MoveInsertable
http://cplusplus.github.io/LWG/lwg-defects.html#2177



Loïc Joly
-
d:lwg2178
LWG2178

Open
Allocator requirement changes not mentioned Annex C
http://cplusplus.github.io/LWG/lwg-active.html#2178



Nevin Liber
-
d:lwg2179
LWG2179

Tentatively Resolved
enable_shared_from_this and construction from raw pointers
http://cplusplus.github.io/LWG/lwg-active.html#2179



Daniel Krügler
-
d:lwg218
LWG218

NAD
Algorithms do not use binary predicate objects for default comparisons
http://cplusplus.github.io/LWG/lwg-closed.html#218



Pablo Halpern
-
d:lwg2180
LWG2180

C++14
Exceptions from std::seed_seq operations
http://cplusplus.github.io/LWG/lwg-defects.html#2180



Daniel Krügler
-
d:lwg2181
LWG2181

WP
Exceptions from seed sequence operations
http://cplusplus.github.io/LWG/lwg-defects.html#2181



Daniel Krügler
-
d:lwg2182
LWG2182

C++14
Container::[const_]reference types are misleadingly specified
http://cplusplus.github.io/LWG/lwg-defects.html#2182



Daniel Krügler
-
d:lwg2183
LWG2183

New
Muddled allocator requirements for match_results constructors
http://cplusplus.github.io/LWG/lwg-active.html#2183



Pete Becker
-
d:lwg2184
LWG2184

New
Muddled allocator requirements for match_results assignments
http://cplusplus.github.io/LWG/lwg-active.html#2184



Pete Becker
-
d:lwg2185
LWG2185

C++14
Missing throws clause for future/shared_future::wait_for/wait_until
http://cplusplus.github.io/LWG/lwg-defects.html#2185



Vicente J. Botet Escriba
-
d:lwg2186
LWG2186

C++14
Incomplete action on async/launch::deferred
http://cplusplus.github.io/LWG/lwg-defects.html#2186



Vicente J. Botet Escriba
-
d:lwg2187
LWG2187

C++14
vector<bool> is missing emplace and emplace_back member functions
http://cplusplus.github.io/LWG/lwg-defects.html#2187



Nevin Liber
-
d:lwg2188
LWG2188

C++14
Reverse iterator does not fully support targets that overload operator&
http://cplusplus.github.io/LWG/lwg-defects.html#2188



Alisdair Meredith
-
d:lwg2189
LWG2189

Open
Throwing swap breaks unordered containers' state
http://cplusplus.github.io/LWG/lwg-active.html#2189



Alisdair Meredith
-
d:lwg219
LWG219

NAD
find algorithm missing version that takes a binary predicate argument
http://cplusplus.github.io/LWG/lwg-closed.html#219



Pablo Halpern
-
d:lwg2190
LWG2190

C++14
Condition variable specification
http://cplusplus.github.io/LWG/lwg-defects.html#2190



Hans Boehm
-
d:lwg2191
LWG2191

New
Incorrect specification of match_results(match_results&&)
http://cplusplus.github.io/LWG/lwg-active.html#2191



Pete Becker
-
d:lwg2192
LWG2192

WP
Validity and return type of std::abs(0u) is unclear
http://cplusplus.github.io/LWG/lwg-defects.html#2192



Daniel Krügler
-
d:lwg2193
LWG2193

C++14
Default constructors for standard library containers are explicit
http://cplusplus.github.io/LWG/lwg-defects.html#2193



Richard Smith
-
d:lwg2194
LWG2194

C++14
Impossible container requirements for adaptor types
http://cplusplus.github.io/LWG/lwg-defects.html#2194



Sebastian Mach
-
d:lwg2195
LWG2195

Open
Missing constructors for match_results
http://cplusplus.github.io/LWG/lwg-active.html#2195



Daniel Krügler
-
d:lwg2196
LWG2196

C++14
Specification of is_*[copy/move]_[constructible/assignable] unclear for non-referencable types
http://cplusplus.github.io/LWG/lwg-defects.html#2196



Daniel Krügler
-
d:lwg2197
LWG2197

C++14
Specification of is_[un]signed unclear for non-arithmetic types
http://cplusplus.github.io/LWG/lwg-defects.html#2197



Daniel Krügler
-
d:lwg2198
LWG2198

Open
max_load_factor(z) makes no strong guarantees, but bans useful behavior
http://cplusplus.github.io/LWG/lwg-active.html#2198



Alisdair Meredith
-
d:lwg2199
LWG2199

Open
unordered containers are required to have an initial max load factor of 1.0
http://cplusplus.github.io/LWG/lwg-active.html#2199



Alisdair Meredith
-
d:lwg22
LWG22

TC1
Member open vs. flags
http://cplusplus.github.io/LWG/lwg-defects.html#22



Nathan Myers
-
d:lwg220
LWG220

TC1
~ios_base() usage valid?
http://cplusplus.github.io/LWG/lwg-defects.html#220



Jonathan Schilling, Howard Hinnant
-
d:lwg2200
LWG2200

C++14
Data race avoidance for all containers, not only for sequences
http://cplusplus.github.io/LWG/lwg-defects.html#2200



Jonathan Wakely
-
d:lwg2201
LWG2201

New
Missing macro entries from C standard library
http://cplusplus.github.io/LWG/lwg-active.html#2201



Kevin McCarty
-
d:lwg2202
LWG2202

Deferred
Missing allocator support by async
http://cplusplus.github.io/LWG/lwg-active.html#2202



Detlef Vollmann
-
d:lwg2203
LWG2203

C++14
scoped_allocator_adaptor uses wrong argument types for piecewise construction
http://cplusplus.github.io/LWG/lwg-defects.html#2203



Jonathan Wakely
-
d:lwg2204
LWG2204

NAD
reverse_iterator should not require a second copy of the base iterator
http://cplusplus.github.io/LWG/lwg-closed.html#2204



David Abrahams
-
d:lwg2205
LWG2205

C++14
Problematic postconditions of regex_match and regex_search
http://cplusplus.github.io/LWG/lwg-defects.html#2205



Pete Becker
-
d:lwg2206
LWG2206

Open
Inaccuracy in initializer_list constructor requirements
http://cplusplus.github.io/LWG/lwg-active.html#2206



Jeffrey Yasskin
-
d:lwg2207
LWG2207

C++14
basic_string::at should not have a Requires clause
http://cplusplus.github.io/LWG/lwg-defects.html#2207



Nevin Liber
-
d:lwg2208
LWG2208

Tentatively Resolved
std::reverse_iterator should be a literal type
http://cplusplus.github.io/LWG/lwg-active.html#2208



Jeffrey Yasskin
-
d:lwg2209
LWG2209

C++14
assign() overspecified for sequence containers
http://cplusplus.github.io/LWG/lwg-defects.html#2209



Jonathan Wakely
-
d:lwg221
LWG221

CD1
num_get<>::do_get stage 2 processing broken
http://cplusplus.github.io/LWG/lwg-defects.html#221



Matt Austern
-
d:lwg2210
LWG2210

C++14
Missing allocator-extended constructor for allocator-aware containers
http://cplusplus.github.io/LWG/lwg-defects.html#2210



Jonathan Wakely
-
d:lwg2211
LWG2211

C++14
Replace ambiguous use of "Allocator" in container requirements
http://cplusplus.github.io/LWG/lwg-defects.html#2211



Jonathan Wakely
-
d:lwg2212
LWG2212

WP
tuple_size for const pair request <tuple> header
http://cplusplus.github.io/LWG/lwg-defects.html#2212



Alisdair Meredith
-
d:lwg2213
LWG2213

C++14
Return value of std::regex_replace
http://cplusplus.github.io/LWG/lwg-defects.html#2213



Pete Becker
-
d:lwg2214
LWG2214

Open
Clarify basic_ios::init call restrictions
http://cplusplus.github.io/LWG/lwg-active.html#2214



Andrey Semashev
-
d:lwg2215
LWG2215

Open
(unordered) associative container functors should be CopyConstructible
http://cplusplus.github.io/LWG/lwg-active.html#2215



Alisdair Meredith
-
d:lwg2216
LWG2216

New
regex_replace(basic_string) allocator handling
http://cplusplus.github.io/LWG/lwg-active.html#2216



Jeffrey Yasskin
-
d:lwg2217
LWG2217

WP
operator==(sub_match, string) slices on embedded '\0's
http://cplusplus.github.io/LWG/lwg-defects.html#2217



Jeffrey Yasskin
-
d:lwg2218
LWG2218

WP
Unclear how containers use allocator_traits::construct()
http://cplusplus.github.io/LWG/lwg-defects.html#2218



Jonathan Wakely
-
d:lwg2219
LWG2219

WP
INVOKE-ing a pointer to member with a reference_wrapper as the object expression
http://cplusplus.github.io/LWG/lwg-defects.html#2219



Jonathan Wakely
-
d:lwg222
LWG222

TC1
Are throw clauses necessary if a throw is already implied by the effects clause?
http://cplusplus.github.io/LWG/lwg-defects.html#222



Judy Ward
-
d:lwg2220
LWG2220

New
Under-specification of operator== for regex_token_iterator
http://cplusplus.github.io/LWG/lwg-active.html#2220



Pete Becker
-
d:lwg2221
LWG2221

Tentatively Ready
No formatted output operator for nullptr
http://cplusplus.github.io/LWG/lwg-active.html#2221



Matt Austern
-
d:lwg2222
LWG2222

C++14
Inconsistency in description of forward_list::splice_after single-element overload
http://cplusplus.github.io/LWG/lwg-defects.html#2222



Edward Catmur
-
d:lwg2223
LWG2223

Tentatively Ready
shrink_to_fit effect on iterator validity
http://cplusplus.github.io/LWG/lwg-active.html#2223



Juan Soulie
-
d:lwg2224
LWG2224

WP
Ambiguous status of access to non-live objects
http://cplusplus.github.io/LWG/lwg-defects.html#2224



Geoffrey Romer
-
d:lwg2225
LWG2225

C++14
Unrealistic header inclusion checks required
http://cplusplus.github.io/LWG/lwg-defects.html#2225



Richard Smith
-
d:lwg2226
LWG2226

LEWG
wstring_convert methods do not take allocator instance
http://cplusplus.github.io/LWG/lwg-active.html#2226



Glen Fernandes
-
d:lwg2227
LWG2227

Open
Stateful comparison objects in associative containers
http://cplusplus.github.io/LWG/lwg-active.html#2227



Juan Soulie
-
d:lwg2228
LWG2228

Resolved
Missing SFINAE rule in unique_ptr templated assignment
http://cplusplus.github.io/LWG/lwg-defects.html#2228



Geoffrey Romer
-
d:lwg2229
LWG2229

C++14
Standard code conversion facets underspecified
http://cplusplus.github.io/LWG/lwg-defects.html#2229



Beman Dawes
-
d:lwg223
LWG223

TC1
reverse algorithm should use iter_swap rather than swap
http://cplusplus.github.io/LWG/lwg-defects.html#223



Dave Abrahams
-
d:lwg2230
LWG2230

WP
"see below" for initializer-list constructors of unordered containers
http://cplusplus.github.io/LWG/lwg-defects.html#2230



Jonathan Wakely
-
d:lwg2231
LWG2231

C++14
DR 704 removes complexity guarantee for clear()
http://cplusplus.github.io/LWG/lwg-defects.html#2231



Jonathan Wakely
-
d:lwg2232
LWG2232

LEWG
[CD] The char_traits specializations should declare their length(), compare(), and find() members constexpr
http://cplusplus.github.io/LWG/lwg-active.html#2232



Jeffrey Yasskin
-
d:lwg2233
LWG2233

WP
bad_function_call::what() unhelpful
http://cplusplus.github.io/LWG/lwg-defects.html#2233



Jonathan Wakely
-
d:lwg2234
LWG2234

WP
assert() should allow usage in constant expressions
http://cplusplus.github.io/LWG/lwg-defects.html#2234



Daniel Krügler
-
d:lwg2235
LWG2235

C++14
Undefined behavior without proper requirements on basic_string constructors
http://cplusplus.github.io/LWG/lwg-defects.html#2235



Juan Soulie
-
d:lwg2236
LWG2236

SG1
kill_dependency unconditionally noexcept
http://cplusplus.github.io/LWG/lwg-active.html#2236



Daniel Krügler
-
d:lwg2237
LWG2237

New
<cuchar> macros
http://cplusplus.github.io/LWG/lwg-active.html#2237



Jason Merrill
-
d:lwg2238
LWG2238

Open
Problematic iterator-pair constructor of containers
http://cplusplus.github.io/LWG/lwg-active.html#2238



Johannes Schaub
-
d:lwg2239
LWG2239

WP
min/max/minmax requirements
http://cplusplus.github.io/LWG/lwg-defects.html#2239



Juan Soulie
-
d:lwg224
LWG224

TC1
clear() complexity for associative containers refers to undefined N
http://cplusplus.github.io/LWG/lwg-defects.html#224



Ed Brey
-
d:lwg2240
LWG2240

Resolved
Probable misuse of term "function scope" in [thread.condition]
http://cplusplus.github.io/LWG/lwg-defects.html#2240



FrankHB1989
-
d:lwg2241
LWG2241

Tentatively Resolved
<cstdalign> and #define of alignof
http://cplusplus.github.io/LWG/lwg-active.html#2241



Richard Smith
-
d:lwg2242
LWG2242

LEWG
[uninitialized_]copy_n() defect
http://cplusplus.github.io/LWG/lwg-active.html#2242



Sean Parent
-
d:lwg2243
LWG2243

New
istream::putback problem
http://cplusplus.github.io/LWG/lwg-active.html#2243



Juan Soulie
-
d:lwg2244
LWG2244

WP
Issue on basic_istream::seekg
http://cplusplus.github.io/LWG/lwg-defects.html#2244



Juan Soulie
-
d:lwg2245
LWG2245

Review
packaged_task::reset() memory allocation
http://cplusplus.github.io/LWG/lwg-active.html#2245



Jonathan Wakely
-
d:lwg2246
LWG2246

C++14
unique_ptr assignment effects w.r.t. deleter
http://cplusplus.github.io/LWG/lwg-defects.html#2246



Jonathan Wakely
-
d:lwg2247
LWG2247

C++14
Type traits and std::nullptr_t
http://cplusplus.github.io/LWG/lwg-defects.html#2247



Joe Gottman
-
d:lwg2248
LWG2248

New
numeric_limits::is_iec559 misnamed
http://cplusplus.github.io/LWG/lwg-active.html#2248



Pete Becker
-
d:lwg2249
LWG2249

Resolved
[CD] Remove gets from <cstdio>
http://cplusplus.github.io/LWG/lwg-defects.html#2249



Jonathan Wakely
-
d:lwg225
LWG225

CD1
std:: algorithms use of other unqualified algorithms
http://cplusplus.github.io/LWG/lwg-defects.html#225



Dave Abrahams
-
d:lwg2250
LWG2250

WP
Follow-up On Library Issue 2207
http://cplusplus.github.io/LWG/lwg-defects.html#2250



Frank Birbacher
-
d:lwg2251
LWG2251

NAD
C++ library should define ssize_t
http://cplusplus.github.io/LWG/lwg-closed.html#2251



Matt Austern
-
d:lwg2252
LWG2252

C++14
Strong guarantee on vector::push_back() still broken with C++11?
http://cplusplus.github.io/LWG/lwg-defects.html#2252



Nicolai Josuttis
-
d:lwg2253
LWG2253

NAD Arrays
[arrays.ts] dynarray should state which container requirements aren't met
http://cplusplus.github.io/LWG/lwg-closed.html#2253



Jonathan Wakely
-
d:lwg2254
LWG2254

NAD Arrays
[arrays.ts] Is dynarray an allocator-aware container?
http://cplusplus.github.io/LWG/lwg-closed.html#2254



Jonathan Wakely
-
d:lwg2255
LWG2255

NAD Arrays
[arrays.ts] dynarray constructor ambiguity
http://cplusplus.github.io/LWG/lwg-closed.html#2255



Jonathan Wakely
-
d:lwg2256
LWG2256

New
On vector iterator invalidation
http://cplusplus.github.io/LWG/lwg-active.html#2256



Howard Hinnant
-
d:lwg2257
LWG2257

C++14
Simplify container requirements with the new algorithms
http://cplusplus.github.io/LWG/lwg-defects.html#2257



Marshall Clow
-
d:lwg2258
LWG2258

C++14
a.erase(q1, q2) unable to directly return q2
http://cplusplus.github.io/LWG/lwg-defects.html#2258



Geoff Alexander
-
d:lwg2259
LWG2259

WP
Issues in 17.6.5.5 rules for member functions
http://cplusplus.github.io/LWG/lwg-defects.html#2259



Richard Smith
-
d:lwg226
LWG226

CD1
User supplied specializations or overloads of namespace std function templates
http://cplusplus.github.io/LWG/lwg-defects.html#226



Dave Abrahams
-
d:lwg2260
LWG2260

Open
Missing requirement for Allocator::pointer
http://cplusplus.github.io/LWG/lwg-active.html#2260



Jonathan Wakely
-
d:lwg2261
LWG2261

Tentatively Ready
Are containers required to use their 'pointer' type internally?
http://cplusplus.github.io/LWG/lwg-active.html#2261



Jonathan Wakely
-
d:lwg2262
LWG2262

Open
Requirement for unique_ptr<T>::get_deleter()(p) to be able to destroy the unique_ptr
http://cplusplus.github.io/LWG/lwg-active.html#2262



Rob Desbois
-
d:lwg2263
LWG2263

C++14
Comparing iterators and allocator pointers with different const-character
http://cplusplus.github.io/LWG/lwg-defects.html#2263



Howard Hinnant
-
d:lwg2264
LWG2264

NAD Arrays
[arrays.ts] std::dynarray defines its initializer-list constructor in terms of a non-existent constructor
http://cplusplus.github.io/LWG/lwg-closed.html#2264



Povilas Kanapickas
-
d:lwg2265
LWG2265

Open
29.3p9 appears to rule out some acceptable executions
http://cplusplus.github.io/LWG/lwg-active.html#2265



Brian Demsky
-
d:lwg2266
LWG2266

WP
vector and deque have incorrect insert requirements
http://cplusplus.github.io/LWG/lwg-defects.html#2266



Ahmed Charles
-
d:lwg2267
LWG2267

New
partial_sort_copy underspecified for ranges of two different types
http://cplusplus.github.io/LWG/lwg-active.html#2267



Matt Austern
-
d:lwg2268
LWG2268

C++14
Setting a default argument in the declaration of a member function assign of std::basic_string
http://cplusplus.github.io/LWG/lwg-defects.html#2268



Vladimir Grigoriev
-
d:lwg2269
LWG2269

New
Container iterators and argument-dependent lookup
http://cplusplus.github.io/LWG/lwg-active.html#2269



Matt Austern
-
d:lwg227
LWG227

TC1
std::swap() should require CopyConstructible or DefaultConstructible arguments
http://cplusplus.github.io/LWG/lwg-defects.html#227



Dave Abrahams
-
d:lwg2270
LWG2270

NAD
Inconsistent to_string overloads
http://cplusplus.github.io/LWG/lwg-closed.html#2270



Raf Schietekat
-
d:lwg2271
LWG2271

C++14
regex_traits::lookup_classname specification unclear
http://cplusplus.github.io/LWG/lwg-defects.html#2271



Jonathan Wakely
-
d:lwg2272
LWG2272

C++14
quoted should use char_traits::eq for character comparison
http://cplusplus.github.io/LWG/lwg-defects.html#2272



Marshall Clow
-
d:lwg2273
LWG2273

WP
regex_match ambiguity
http://cplusplus.github.io/LWG/lwg-defects.html#2273



Howard Hinnant
-
d:lwg2274
LWG2274

Resolved
Does map::operator[] value-initialize or default-insert a missing element?
http://cplusplus.github.io/LWG/lwg-defects.html#2274



Andrzej Krzemieński
-
d:lwg2275
LWG2275

C++14
[CD] Why is forward_as_tuple not constexpr?
http://cplusplus.github.io/LWG/lwg-defects.html#2275



Marshall Clow
-
d:lwg2276
LWG2276

WP
Missing requirement on std::promise::set_exception
http://cplusplus.github.io/LWG/lwg-defects.html#2276



Jonathan Wakely
-
d:lwg2277
LWG2277

NAD Arrays
[arrays.ts] <dynarray> is missing in 24.7/1
http://cplusplus.github.io/LWG/lwg-closed.html#2277



Cassio Neri
-
d:lwg2278
LWG2278

C++14
User-defined literals for Standard Library types
http://cplusplus.github.io/LWG/lwg-defects.html#2278



Howard Hinnant
-
d:lwg2279
LWG2279

NAD
Carefully state effects of list::splice function
http://cplusplus.github.io/LWG/lwg-closed.html#2279



Arseny Klimovsky
-
d:lwg228
LWG228

CD1
Incorrect specification of "..._byname" facets
http://cplusplus.github.io/LWG/lwg-defects.html#228



Dietmar Kühl
-
d:lwg2280
LWG2280

C++14
begin/end for arrays should be constexpr and noexcept
http://cplusplus.github.io/LWG/lwg-defects.html#2280



Andy Sawyer
-
d:lwg2281
LWG2281

NAD Editorial
C99 cross-reference typo in [using.linkage]
http://cplusplus.github.io/LWG/lwg-closed.html#2281



Chris Sharpe
-
d:lwg2282
LWG2282

Resolved
[fund.ts] Incorrect is_assignable constraint in optional::op=(U&&)
http://cplusplus.github.io/LWG/lwg-defects.html#2282



Howard Hinnant
-
d:lwg2283
LWG2283

Resolved
[fund.ts] optional declares and then does not define an operator<()
http://cplusplus.github.io/LWG/lwg-defects.html#2283



Howard Hinnant
-
d:lwg2284
LWG2284

C++14
Inconsistency in allocator_traits::max_size
http://cplusplus.github.io/LWG/lwg-defects.html#2284



Marshall Clow
-
d:lwg2285
LWG2285

C++14
make_reverse_iterator
http://cplusplus.github.io/LWG/lwg-defects.html#2285



Zhihao Yuan
-
d:lwg2286
LWG2286

New
stringbuf::underflow() underspecified
http://cplusplus.github.io/LWG/lwg-active.html#2286



Sergey Zubkov
-
d:lwg2287
LWG2287

Resolved
[fund.ts] Incorrect exception safety for optional copy assignment operator
http://cplusplus.github.io/LWG/lwg-defects.html#2287



Howard Hinnant
-
d:lwg2288
LWG2288

C++14
Inconsistent requirements for shared mutexes
http://cplusplus.github.io/LWG/lwg-defects.html#2288



Daniel Krügler
-
d:lwg2289
LWG2289

Open
constexpr guarantees of defaulted functions still insufficient
http://cplusplus.github.io/LWG/lwg-active.html#2289



Daniel Krügler
-
d:lwg229
LWG229

CD1
Unqualified references of other library entities
http://cplusplus.github.io/LWG/lwg-defects.html#229



Steve Clamage
-
d:lwg2290
LWG2290

Open
Top-level "SFINAE"-based constraints should get a separate definition in Clause 17
http://cplusplus.github.io/LWG/lwg-active.html#2290



Daniel Krügler
-
d:lwg2291
LWG2291

C++14
std::hash is vulnerable to collision DoS attack
http://cplusplus.github.io/LWG/lwg-defects.html#2291



Zhihao Yuan
-
d:lwg2292
LWG2292

New
Find a better phrasing for "shall not participate in overload resolution"
http://cplusplus.github.io/LWG/lwg-active.html#2292



Jeffrey Yasskin
-
d:lwg2293
LWG2293

C++14
Wrong facet used by num_put::do_put
http://cplusplus.github.io/LWG/lwg-defects.html#2293



Juan Soulie
-
d:lwg2294
LWG2294

Tentatively Resolved
<cstdlib> should declare abs(double)
http://cplusplus.github.io/LWG/lwg-active.html#2294



Pete Becker
-
d:lwg2295
LWG2295

New
Locale name when the provided Facet is a nullptr
http://cplusplus.github.io/LWG/lwg-active.html#2295



Juan Soulie
-
d:lwg2296
LWG2296

WP
std::addressof should be constexpr
http://cplusplus.github.io/LWG/lwg-defects.html#2296



Daryle Walker
-
d:lwg2297
LWG2297

NAD
[CD] Missing type requirements for std::exchange
http://cplusplus.github.io/LWG/lwg-closed.html#2297



Alisdair Meredith
-
d:lwg2298
LWG2298

C++14
[CD] is_nothrow_constructible is always false because of create<>
http://cplusplus.github.io/LWG/lwg-defects.html#2298



Daniel Krügler
-
d:lwg2299
LWG2299

C++14
[CD] Effects of inaccessible key_compare::is_transparent type are not clear
http://cplusplus.github.io/LWG/lwg-defects.html#2299



Daniel Krügler
-
d:lwg23
LWG23

CD1
Num_get overflow result
http://cplusplus.github.io/LWG/lwg-defects.html#23



Nathan Myers
-
d:lwg230
LWG230

CD1
Assignable specified without also specifying CopyConstructible
http://cplusplus.github.io/LWG/lwg-defects.html#230



Beman Dawes
-
d:lwg2300
LWG2300

C++14
[CD] Redundant sections for map and multimap members should be removed
http://cplusplus.github.io/LWG/lwg-defects.html#2300



Daniel Krügler
-
d:lwg2301
LWG2301

C++14
Why is std::tie not constexpr?
http://cplusplus.github.io/LWG/lwg-defects.html#2301



Rein Halbersma
-
d:lwg2302
LWG2302

Pending NAD
Passing null pointer to placement new
http://cplusplus.github.io/LWG/lwg-closed.html#2302



Marc Glisse
-
d:lwg2303
LWG2303

New
Explicit instantiation of std::vector<UserType> broken?
http://cplusplus.github.io/LWG/lwg-active.html#2303



Daniel Krügler
-
d:lwg2304
LWG2304

C++14
Complexity of count in unordered associative containers
http://cplusplus.github.io/LWG/lwg-defects.html#2304



Joaquín M López Muñoz
-
d:lwg2305
LWG2305

NAD
[fund.ts] optional forwarding construction/assignment
http://cplusplus.github.io/LWG/lwg-closed.html#2305



Cassio Neri
-
d:lwg2306
LWG2306

C++14
match_results::reference should be value_type&, not const value_type&
http://cplusplus.github.io/LWG/lwg-defects.html#2306



Matt Austern
-
d:lwg2307
LWG2307

Open
Should the Standard Library use explicit only when necessary?
http://cplusplus.github.io/LWG/lwg-active.html#2307



Zhihao Yuan
-
d:lwg2308
LWG2308

C++14
Clarify container destructor requirements w.r.t. std::array
http://cplusplus.github.io/LWG/lwg-defects.html#2308



Jonathan Wakely
-
d:lwg2309
LWG2309

WP
mutex::lock() should not throw device_or_resource_busy
http://cplusplus.github.io/LWG/lwg-defects.html#2309



Detlef Vollmann
-
d:lwg231
LWG231

CD1
Precision in iostream?
http://cplusplus.github.io/LWG/lwg-defects.html#231



James Kanze, Stephen Clamage
-
d:lwg2310
LWG2310

WP
Public exposition only member in std::array
http://cplusplus.github.io/LWG/lwg-defects.html#2310



Jonathan Wakely
-
d:lwg2311
LWG2311

NAD
Allocator requirements should be further minimized
http://cplusplus.github.io/LWG/lwg-closed.html#2311



Stephan T. Lavavej
-
d:lwg2312
LWG2312

WP
tuple's constructor constraints need to be phrased more precisely
http://cplusplus.github.io/LWG/lwg-defects.html#2312



Stephan T. Lavavej
-
d:lwg2313
LWG2313

C++14
tuple_size should always derive from integral_constant<size_t, N>
http://cplusplus.github.io/LWG/lwg-defects.html#2313



Stephan T. Lavavej
-
d:lwg2314
LWG2314

C++14
apply() should return decltype(auto) and use decay_t before tuple_size
http://cplusplus.github.io/LWG/lwg-defects.html#2314



Stephan T. Lavavej
-
d:lwg2315
LWG2315

C++14
weak_ptr should be movable
http://cplusplus.github.io/LWG/lwg-defects.html#2315



Stephan T. Lavavej
-
d:lwg2316
LWG2316

C++14
weak_ptr::lock() should be atomic
http://cplusplus.github.io/LWG/lwg-defects.html#2316



Stephan T. Lavavej
-
d:lwg2317
LWG2317

C++14
The type property queries should be UnaryTypeTraits returning size_t
http://cplusplus.github.io/LWG/lwg-defects.html#2317



Stephan T. Lavavej
-
d:lwg2318
LWG2318

New
basic_string's wording has confusing relics from the copy-on-write era
http://cplusplus.github.io/LWG/lwg-active.html#2318



Stephan T. Lavavej
-
d:lwg2319
LWG2319

NAD
basic_string's move constructor should not be noexcept
http://cplusplus.github.io/LWG/lwg-closed.html#2319



Stephan T. Lavavej
-
d:lwg232
LWG232

CD1
"depends" poorly defined in 17.4.3.1
http://cplusplus.github.io/LWG/lwg-defects.html#232



Peter Dimov
-
d:lwg2320
LWG2320

C++14
select_on_container_copy_construction() takes allocators, not containers
http://cplusplus.github.io/LWG/lwg-defects.html#2320



Stephan T. Lavavej
-
d:lwg2321
LWG2321

Open
Moving containers should (usually) be required to preserve iterators
http://cplusplus.github.io/LWG/lwg-active.html#2321



Stephan T. Lavavej
-
d:lwg2322
LWG2322

C++14
Associative(initializer_list, stuff) constructors are underspecified
http://cplusplus.github.io/LWG/lwg-defects.html#2322



Stephan T. Lavavej
-
d:lwg2323
LWG2323

C++14
vector::resize(n, t)'s specification should be simplified
http://cplusplus.github.io/LWG/lwg-defects.html#2323



Stephan T. Lavavej
-
d:lwg2324
LWG2324

C++14
Insert iterator constructors should use addressof()
http://cplusplus.github.io/LWG/lwg-defects.html#2324



Stephan T. Lavavej
-
d:lwg2325
LWG2325

WP
minmax_element()'s behavior differing from max_element()'s should be noted
http://cplusplus.github.io/LWG/lwg-defects.html#2325



Stephan T. Lavavej
-
d:lwg2326
LWG2326

NAD
uniform_int_distribution<unsigned char> should be permitted
http://cplusplus.github.io/LWG/lwg-closed.html#2326



Stephan T. Lavavej
-
d:lwg2327
LWG2327

NAD
Non-power-of-two URNGs should be forbidden
http://cplusplus.github.io/LWG/lwg-closed.html#2327



Stephan T. Lavavej
-
d:lwg2328
LWG2328

WP
Rvalue stream extraction should use perfect forwarding
http://cplusplus.github.io/LWG/lwg-defects.html#2328



Stephan T. Lavavej
-
d:lwg2329
LWG2329

C++14
regex_match()/regex_search() with match_results should forbid temporary strings
http://cplusplus.github.io/LWG/lwg-defects.html#2329



Stephan T. Lavavej
-
d:lwg233
LWG233

CD1
Insertion hints in associative containers
http://cplusplus.github.io/LWG/lwg-defects.html#233



Andrew Koenig
-
d:lwg2330
LWG2330

C++14
regex("meow", regex::icase) is technically forbidden but should be permitted
http://cplusplus.github.io/LWG/lwg-defects.html#2330



Stephan T. Lavavej
-
d:lwg2331
LWG2331

Open
regex_constants::collate's effects are inaccurately summarized
http://cplusplus.github.io/LWG/lwg-active.html#2331



Stephan T. Lavavej
-
d:lwg2332
LWG2332

C++14
regex_iterator/regex_token_iterator should forbid temporary regexes
http://cplusplus.github.io/LWG/lwg-defects.html#2332



Stephan T. Lavavej
-
d:lwg2333
LWG2333

Resolved
[fund.ts] Hashing disengaged optional<T> objects
http://cplusplus.github.io/LWG/lwg-defects.html#2333



Jonathan Wakely
-
d:lwg2334
LWG2334

SG1
atomic's default constructor requires "uninitialized" state even for types with non-trivial default-constructor
http://cplusplus.github.io/LWG/lwg-active.html#2334



Daniel Krügler
-
d:lwg2335
LWG2335

New
array<array<int, 3>, 4> should be layout-compatible with int[4][3]
http://cplusplus.github.io/LWG/lwg-active.html#2335



Jeffrey Yasskin
-
d:lwg2336
LWG2336

WP
is_trivially_constructible/is_trivially_assignable traits are always false
http://cplusplus.github.io/LWG/lwg-defects.html#2336



Daniel Krügler
-
d:lwg2337
LWG2337

Tentatively NAD
shared_ptr operator*() should not be noexcept
http://cplusplus.github.io/LWG/lwg-active.html#2337



Stephan T. Lavavej
-
d:lwg2338
LWG2338

Open
§[re.traits]/7 expects of locale facets something not guaranteed by [locale.facet]/4
http://cplusplus.github.io/LWG/lwg-active.html#2338



Sergey Zubkov
-
d:lwg2339
LWG2339

C++14
Wording issue in nth_element
http://cplusplus.github.io/LWG/lwg-defects.html#2339



Christopher Jefferson
-
d:lwg234
LWG234

CD1
Typos in allocator definition
http://cplusplus.github.io/LWG/lwg-defects.html#234



Dietmar Kühl
-
d:lwg2340
LWG2340

WP
Replacement allocation functions declared as inline
http://cplusplus.github.io/LWG/lwg-defects.html#2340



David Majnemer
-
d:lwg2341
LWG2341

C++14
Inconsistency between basic_ostream::seekp(pos) and basic_ostream::seekp(off, dir)
http://cplusplus.github.io/LWG/lwg-defects.html#2341



Marshall Clow
-
d:lwg2342
LWG2342

New
User conversion to wchar_t const* or to wchar_t not invoked for operator<<
http://cplusplus.github.io/LWG/lwg-active.html#2342



Alf P. Steinbach
-
d:lwg2343
LWG2343

Tentatively Resolved
Is the value of the ECMA-262 RegExp object's multiline property really false?
http://cplusplus.github.io/LWG/lwg-active.html#2343



Nayuta Taga
-
d:lwg2344
LWG2344

C++14
quoted()'s interaction with padding is unclear
http://cplusplus.github.io/LWG/lwg-defects.html#2344



Stephan T. Lavavej
-
d:lwg2345
LWG2345

NAD
integer_sequence should have a self-typedef ::type
http://cplusplus.github.io/LWG/lwg-closed.html#2345



Stephan T. Lavavej
-
d:lwg2346
LWG2346

C++14
integral_constant's member functions should be marked noexcept
http://cplusplus.github.io/LWG/lwg-defects.html#2346



Stephan T. Lavavej
-
d:lwg2347
LWG2347

NAD
reverse_iterator::operator[] calls const version of current[]
http://cplusplus.github.io/LWG/lwg-closed.html#2347



Timo Bingmann
-
d:lwg2348
LWG2348

Open
charT('1') is not the wide equivalent of '1'
http://cplusplus.github.io/LWG/lwg-active.html#2348



Zhihao Yuan
-
d:lwg2349
LWG2349

Open
Clarify input/output function rethrow behavior
http://cplusplus.github.io/LWG/lwg-active.html#2349



Zhihao Yuan
-
d:lwg235
LWG235

CD1
No specification of default ctor for reverse_iterator
http://cplusplus.github.io/LWG/lwg-defects.html#235



Dietmar Kühl
-
d:lwg2350
LWG2350

C++14
min, max, and minmax should be constexpr
http://cplusplus.github.io/LWG/lwg-defects.html#2350



Ville Voutilainen
-
d:lwg2351
LWG2351

NAD
Does .seed() completely reset state of engine?
http://cplusplus.github.io/LWG/lwg-closed.html#2351



Thomas Plum
-
d:lwg2352
LWG2352

New
Is a default-constructed std::seed_seq intended to produce a predictable .generate()?
http://cplusplus.github.io/LWG/lwg-active.html#2352



Thomas Plum
-
d:lwg2353
LWG2353

WP
std::next is over-constrained
http://cplusplus.github.io/LWG/lwg-defects.html#2353



Eric Niebler
-
d:lwg2354
LWG2354

WP
Unnecessary copying when inserting into maps with braced-init syntax
http://cplusplus.github.io/LWG/lwg-defects.html#2354



Geoffrey Romer
-
d:lwg2355
LWG2355

NAD
"s" UDL suffix should be reserved for a compile-time string library type
http://cplusplus.github.io/LWG/lwg-closed.html#2355



Michael Price
-
d:lwg2356
LWG2356

C++14
Stability of erasure in unordered associative containers
http://cplusplus.github.io/LWG/lwg-defects.html#2356



Joaquín M López Muñoz
-
d:lwg2357
LWG2357

C++14
Remaining "Assignable" requirement
http://cplusplus.github.io/LWG/lwg-defects.html#2357



Daniel Krügler
-
d:lwg2358
LWG2358

Open
Apparently-bogus definition of is_empty type trait
http://cplusplus.github.io/LWG/lwg-active.html#2358



Richard Smith
-
d:lwg2359
LWG2359

C++14
How does regex_constants::nosubs affect basic_regex::mark_count()?
http://cplusplus.github.io/LWG/lwg-defects.html#2359



Jonathan Wakely
-
d:lwg236
LWG236

Dup
ctype<char>::is() member modifies facet
http://cplusplus.github.io/LWG/lwg-closed.html#236



Dietmar Kühl
-
d:lwg2360
LWG2360

C++14
reverse_iterator::operator*() is unimplementable
http://cplusplus.github.io/LWG/lwg-defects.html#2360



Stephan T. Lavavej
-
d:lwg2361
LWG2361

WP
Apply 2299 resolution throughout library
http://cplusplus.github.io/LWG/lwg-defects.html#2361



Jonathan Wakely
-
d:lwg2362
LWG2362

New
unique, associative emplace() should not move/copy the mapped_type constructor arguments when no insertion happens
http://cplusplus.github.io/LWG/lwg-active.html#2362



Jeffrey Yasskin
-
d:lwg2363
LWG2363

Open
Defect in 30.4.1.4.1 [thread.sharedtimedmutex.class]
http://cplusplus.github.io/LWG/lwg-active.html#2363



Richard Smith
-
d:lwg2364
LWG2364

WP
deque and vector pop_back don't specify iterator invalidation requirements
http://cplusplus.github.io/LWG/lwg-defects.html#2364



Deskin Miller
-
d:lwg2365
LWG2365

WP
Missing noexcept in shared_ptr::shared_ptr(nullptr_t)
http://cplusplus.github.io/LWG/lwg-defects.html#2365



Cassio Neri
-
d:lwg2366
LWG2366

New
istreambuf_iterator end-of-stream equality
http://cplusplus.github.io/LWG/lwg-active.html#2366



Hyman Rosen
-
d:lwg2367
LWG2367

WP
pair and tuple are not correctly implemented for is_constructible with no args
http://cplusplus.github.io/LWG/lwg-defects.html#2367



Howard Hinnant
-
d:lwg2368
LWG2368

Open
Replacing global operator new
http://cplusplus.github.io/LWG/lwg-active.html#2368



Stephen Clamage
-
d:lwg2369
LWG2369

WP
constexpr max(initializer_list) vs max_element
http://cplusplus.github.io/LWG/lwg-defects.html#2369



Marc Glisse
-
d:lwg237
LWG237

CD1
Undefined expression in complexity specification
http://cplusplus.github.io/LWG/lwg-defects.html#237



Dietmar Kühl
-
d:lwg2370
LWG2370

Tentatively Resolved
Operations involving type-erased allocators should not be noexcept in std::function
http://cplusplus.github.io/LWG/lwg-active.html#2370



Pablo Halpern
-
d:lwg2371
LWG2371

WP
[fund.ts] No template aliases defined for new type traits
http://cplusplus.github.io/LWG/lwg-defects.html#2371



Joe Gottman
-
d:lwg2372
LWG2372

NAD
Assignment from int to std::string
http://cplusplus.github.io/LWG/lwg-closed.html#2372



Andrzej Krzemieński
-
d:lwg2373
LWG2373

NAD
Make new entities and names in namespace std conforming extensions
http://cplusplus.github.io/LWG/lwg-closed.html#2373



Chandler Carruth
-
d:lwg2374
LWG2374

WP
[fund.ts] Remarks for optional::to_value are too restrictive
http://cplusplus.github.io/LWG/lwg-defects.html#2374



Jonathan Wakely
-
d:lwg2375
LWG2375

New
Is [iterator.requirements.general]/9 too broadly applied?
http://cplusplus.github.io/LWG/lwg-active.html#2375



Marshall Clow
-
d:lwg2376
LWG2376

WP
bad_weak_ptr::what() overspecified
http://cplusplus.github.io/LWG/lwg-defects.html#2376



Jonathan Wakely
-
d:lwg2377
LWG2377

WP
std::align requirements overly strict
http://cplusplus.github.io/LWG/lwg-defects.html#2377



Peter Dimov
-
d:lwg2378
LWG2378

WP
Behaviour of standard exception types
http://cplusplus.github.io/LWG/lwg-defects.html#2378



Andy Sawyer
-
d:lwg2379
LWG2379

NAD
Obtaining native handle of the current thread
http://cplusplus.github.io/LWG/lwg-closed.html#2379



Matt Austern
-
d:lwg238
LWG238

CD1
Contradictory results of stringbuf initialization.
http://cplusplus.github.io/LWG/lwg-defects.html#238



Dietmar Kühl
-
d:lwg2380
LWG2380

WP
May <cstdlib> provide long ::abs(long) and long long ::abs(long long)?
http://cplusplus.github.io/LWG/lwg-defects.html#2380



Richard Smith
-
d:lwg2381
LWG2381

Open
Inconsistency in parsing floating point numbers
http://cplusplus.github.io/LWG/lwg-active.html#2381



Marshall Clow
-
d:lwg2382
LWG2382

Pending NAD
Unclear order of container update versus object destruction on removing an object
http://cplusplus.github.io/LWG/lwg-closed.html#2382



Peter Kasting
-
d:lwg2383
LWG2383

Open
Overflow cannot be ill-formed for chrono::duration integer literals
http://cplusplus.github.io/LWG/lwg-active.html#2383



Jonathan Wakely
-
d:lwg2384
LWG2384

WP
Allocator's deallocate function needs better specification
http://cplusplus.github.io/LWG/lwg-defects.html#2384



Daniel Krügler
-
d:lwg2385
LWG2385

WP
function::assign allocator argument doesn't make sense
http://cplusplus.github.io/LWG/lwg-defects.html#2385



Pablo Halpern
-
d:lwg2386
LWG2386

NAD
function::operator= handles allocators incorrectly
http://cplusplus.github.io/LWG/lwg-closed.html#2386



Pablo Halpern
-
d:lwg2387
LWG2387

WP
More nested types that must be accessible and unambiguous
http://cplusplus.github.io/LWG/lwg-defects.html#2387



Jonathan Wakely
-
d:lwg2388
LWG2388

NAD
Handling self-assignment in the proposed library function std::exchange
http://cplusplus.github.io/LWG/lwg-closed.html#2388



Nick Calus
-
d:lwg2389
LWG2389

WP
[fund.ts] function::operator= is over-specified and handles allocators incorrectly
http://cplusplus.github.io/LWG/lwg-defects.html#2389



Pablo Halpern
-
d:lwg239
LWG239

CD1
Complexity of unique() and/or unique_copy incorrect
http://cplusplus.github.io/LWG/lwg-defects.html#239



Angelika Langer
-
d:lwg2390
LWG2390

WP
[fund.ts] Invocation types and rvalues
http://cplusplus.github.io/LWG/lwg-defects.html#2390



Michael Spertus
-
d:lwg2391
LWG2391

Tentatively Resolved
basic_string is missing non-const data()
http://cplusplus.github.io/LWG/lwg-active.html#2391



Michael Bradshaw
-
d:lwg2392
LWG2392

New
"character type" is used but not defined
http://cplusplus.github.io/LWG/lwg-active.html#2392



Jeffrey Yasskin
-
d:lwg2393
LWG2393

WP
std::function's Callable definition is broken
http://cplusplus.github.io/LWG/lwg-defects.html#2393



Daniel Krügler
-
d:lwg2394
LWG2394

Tentatively Ready
locale::name specification unclear — what is implementation-defined?
http://cplusplus.github.io/LWG/lwg-active.html#2394



Richard Smith
-
d:lwg2395
LWG2395

WP
[fund.ts] Preconditions: is defined nowhere
http://cplusplus.github.io/LWG/lwg-defects.html#2395



Zhihao Yuan
-
d:lwg2396
LWG2396

WP
underlying_type doesn't say what to do for an incomplete enumeration type
http://cplusplus.github.io/LWG/lwg-defects.html#2396



Richard Smith
-
d:lwg2397
LWG2397

Resolved
map<K, V>::emplace and explicit V constructors
http://cplusplus.github.io/LWG/lwg-defects.html#2397



Peter Dimov
-
d:lwg2398
LWG2398

Open
type_info's destructor shouldn't be required to be virtual
http://cplusplus.github.io/LWG/lwg-active.html#2398



Stephan T. Lavavej
-
d:lwg2399
LWG2399

WP
shared_ptr's constructor from unique_ptr should be constrained
http://cplusplus.github.io/LWG/lwg-defects.html#2399



Stephan T. Lavavej
-
d:lwg24
LWG24

TC1
"do_convert" doesn't exist
http://cplusplus.github.io/LWG/lwg-defects.html#24



Nathan Myers
-
d:lwg240
LWG240

CD1
Complexity of adjacent_find() is meaningless
http://cplusplus.github.io/LWG/lwg-defects.html#240



Angelika Langer
-
d:lwg2400
LWG2400

WP
shared_ptr's get_deleter() should use addressof()
http://cplusplus.github.io/LWG/lwg-defects.html#2400



Stephan T. Lavavej
-
d:lwg2401
LWG2401

WP
std::function needs more noexcept
http://cplusplus.github.io/LWG/lwg-defects.html#2401



Stephan T. Lavavej
-
d:lwg2402
LWG2402

NAD
basic_string(const basic_string& str, size_type pos, size_type n = npos) shouldn't use Allocator()
http://cplusplus.github.io/LWG/lwg-closed.html#2402



Stephan T. Lavavej
-
d:lwg2403
LWG2403

WP
stof() should call strtof() and wcstof()
http://cplusplus.github.io/LWG/lwg-defects.html#2403



Stephan T. Lavavej
-
d:lwg2404
LWG2404

WP
mismatch()'s complexity needs to be updated
http://cplusplus.github.io/LWG/lwg-defects.html#2404



Stephan T. Lavavej
-
d:lwg2405
LWG2405

NAD
rotate()'s return value is incorrect when middle == first
http://cplusplus.github.io/LWG/lwg-closed.html#2405



Stephan T. Lavavej
-
d:lwg2406
LWG2406

WP
negative_binomial_distribution should reject p == 1
http://cplusplus.github.io/LWG/lwg-defects.html#2406



Stephan T. Lavavej
-
d:lwg2407
LWG2407

WP
packaged_task(allocator_arg_t, const Allocator&, F&&) should neither be constrained nor explicit
http://cplusplus.github.io/LWG/lwg-defects.html#2407



Stephan T. Lavavej
-
d:lwg2408
LWG2408

WP
SFINAE-friendly common_type/iterator_traits is missing in C++14
http://cplusplus.github.io/LWG/lwg-defects.html#2408



Daniel Krügler
-
d:lwg2409
LWG2409

WP
[fund.ts] SFINAE-friendly common_type/iterator_traits should be removed from the fundamental-ts
http://cplusplus.github.io/LWG/lwg-defects.html#2409



Daniel Krügler
-
d:lwg241
LWG241

CD1
Does unique_copy() require CopyConstructible and Assignable?
http://cplusplus.github.io/LWG/lwg-defects.html#241



Angelika Langer
-
d:lwg2410
LWG2410

WP
[fund.ts] shared_ptr<array>'s constructor from unique_ptr should be constrained
http://cplusplus.github.io/LWG/lwg-defects.html#2410



Jeffrey Yasskin
-
d:lwg2411
LWG2411

WP
shared_ptr is only contextually convertible to bool
http://cplusplus.github.io/LWG/lwg-defects.html#2411



Jonathan Wakely
-
d:lwg2412
LWG2412

SG1
promise::set_value() and promise::get_future() should not race
http://cplusplus.github.io/LWG/lwg-active.html#2412



Jonathan Wakely
-
d:lwg2413
LWG2413

New
assert macro is overconstrained
http://cplusplus.github.io/LWG/lwg-active.html#2413



David Krauss
-
d:lwg2414
LWG2414

Open
Member function reentrancy should be implementation-defined
http://cplusplus.github.io/LWG/lwg-active.html#2414



Stephan T. Lavavej
-
d:lwg2415
LWG2415

WP
Inconsistency between unique_ptr and shared_ptr
http://cplusplus.github.io/LWG/lwg-defects.html#2415



Jonathan Wakely
-
d:lwg2416
LWG2416

Resolved
[fund.ts] std::experimental::any allocator support is unimplementable
http://cplusplus.github.io/LWG/lwg-defects.html#2416



Jonathan Wakely
-
d:lwg2417
LWG2417

LEWG
[fund.ts.v2] std::experimental::optional::operator< and LessThanComparable requirement
http://cplusplus.github.io/LWG/lwg-active.html#2417



Daniel Krügler
-
d:lwg2418
LWG2418

WP
[fund.ts] apply does not work with member pointers
http://cplusplus.github.io/LWG/lwg-defects.html#2418



Zhihao Yuan
-
d:lwg2419
LWG2419

LEWG
Clang's libc++ extension to std::tuple
http://cplusplus.github.io/LWG/lwg-active.html#2419



Akim Demaille
-
d:lwg242
LWG242

CD1
Side effects of function objects
http://cplusplus.github.io/LWG/lwg-defects.html#242



Angelika Langer
-
d:lwg2420
LWG2420

WP
function<void(ArgTypes...)> does not discard the return value of the target object
http://cplusplus.github.io/LWG/lwg-defects.html#2420



Agustín Bergé
-
d:lwg2421
LWG2421

New
Non-specification of handling zero size in std::align [ptr.align]
http://cplusplus.github.io/LWG/lwg-active.html#2421



Melissa Mears
-
d:lwg2422
LWG2422

WP
std::numeric_limits<T>::is_modulo description: "most machines" errata
http://cplusplus.github.io/LWG/lwg-defects.html#2422



Melissa Mears
-
d:lwg2423
LWG2423

New
Missing specification slice_array, gslice_array, mask_array, indirect_array copy constructor
http://cplusplus.github.io/LWG/lwg-active.html#2423



Akira Takahashi
-
d:lwg2424
LWG2424

Tentatively Resolved
29.5 should state that atomic types are not trivially copyable
http://cplusplus.github.io/LWG/lwg-active.html#2424



Jens Maurer
-
d:lwg2425
LWG2425

WP
operator delete(void*, size_t) doesn't invalidate pointers sufficiently
http://cplusplus.github.io/LWG/lwg-defects.html#2425



Richard Smith
-
d:lwg2426
LWG2426

WP
Issue about compare_exchange
http://cplusplus.github.io/LWG/lwg-defects.html#2426



Hans Boehm
-
d:lwg2427
LWG2427

WP
Container adaptors as sequence containers, redux
http://cplusplus.github.io/LWG/lwg-defects.html#2427



Tim Song
-
d:lwg2428
LWG2428

WP
"External declaration" used without being defined
http://cplusplus.github.io/LWG/lwg-defects.html#2428



Tim Song
-
d:lwg2429
LWG2429

NAD
std::basic_ostringstream is missing an allocator-extended constructor
http://cplusplus.github.io/LWG/lwg-closed.html#2429



Markus Kemp
-
d:lwg243
LWG243

CD1
get and getline when sentry reports failure
http://cplusplus.github.io/LWG/lwg-defects.html#243



Martin Sebor
-
d:lwg2430
LWG2430

LEWG
Heterogeneous container lookup should be enabled using meta-function instead of nested type
http://cplusplus.github.io/LWG/lwg-active.html#2430



Tomasz Kamiński
-
d:lwg2431
LWG2431

New
Missing regular expression traits requirements
http://cplusplus.github.io/LWG/lwg-active.html#2431



Jonathan Wakely
-
d:lwg2432
LWG2432

EWG
initializer_list assignability
http://cplusplus.github.io/LWG/lwg-active.html#2432



David Krauss
-
d:lwg2433
LWG2433

WP
uninitialized_copy()/etc. should tolerate overloaded operator&
http://cplusplus.github.io/LWG/lwg-defects.html#2433



Stephan T. Lavavej
-
d:lwg2434
LWG2434

WP
shared_ptr::use_count() is efficient
http://cplusplus.github.io/LWG/lwg-defects.html#2434



Stephan T. Lavavej
-
d:lwg2435
LWG2435

WP
reference_wrapper::operator()'s Remark should be deleted
http://cplusplus.github.io/LWG/lwg-defects.html#2435



Stephan T. Lavavej
-
d:lwg2436
LWG2436

WP
Comparators for associative containers should always be CopyConstructible
http://cplusplus.github.io/LWG/lwg-defects.html#2436



Stephan T. Lavavej
-
d:lwg2437
LWG2437

WP
iterator_traits<OutIt>::reference can and can't be void
http://cplusplus.github.io/LWG/lwg-defects.html#2437



Stephan T. Lavavej
-
d:lwg2438
LWG2438

WP
std::iterator inheritance shouldn't be mandated
http://cplusplus.github.io/LWG/lwg-defects.html#2438



Stephan T. Lavavej
-
d:lwg2439
LWG2439

WP
unique_copy() sometimes can't fall back to reading its output
http://cplusplus.github.io/LWG/lwg-defects.html#2439



Stephan T. Lavavej
-
d:lwg244
LWG244

NAD
Must find's third argument be CopyConstructible?
http://cplusplus.github.io/LWG/lwg-closed.html#244



Andrew Koenig
-
d:lwg2440
LWG2440

WP
seed_seq::size() should be noexcept
http://cplusplus.github.io/LWG/lwg-defects.html#2440



Stephan T. Lavavej
-
d:lwg2441
LWG2441

WP
Exact-width atomic typedefs should be provided
http://cplusplus.github.io/LWG/lwg-defects.html#2441



Stephan T. Lavavej
-
d:lwg2442
LWG2442

WP
call_once() shouldn't DECAY_COPY()
http://cplusplus.github.io/LWG/lwg-defects.html#2442



Stephan T. Lavavej
-
d:lwg2443
LWG2443

Tentatively Resolved
std::array member functions should be constexpr
http://cplusplus.github.io/LWG/lwg-active.html#2443



Peter Sommerlad
-
d:lwg2444
LWG2444

Open
Inconsistent complexity for std::sort_heap
http://cplusplus.github.io/LWG/lwg-active.html#2444



François Dumont
-
d:lwg2445
LWG2445

SG1
"Stronger" memory ordering
http://cplusplus.github.io/LWG/lwg-active.html#2445



JF Bastien
-
d:lwg2446
LWG2446

LEWG
Unspecialized std::tuple_size should be defined
http://cplusplus.github.io/LWG/lwg-active.html#2446



Nevin Liber
-
d:lwg2447
LWG2447

WP
Allocators and volatile-qualified value types
http://cplusplus.github.io/LWG/lwg-defects.html#2447



Daniel Krügler
-
d:lwg2448
LWG2448

WP
Non-normative Container destructor specification
http://cplusplus.github.io/LWG/lwg-defects.html#2448



Daniel Krügler
-
d:lwg2449
LWG2449

New
vector::insert invalidates end()?
http://cplusplus.github.io/LWG/lwg-active.html#2449



Marc Glisse
-
d:lwg245
LWG245

NAD
Which operations on istream_iterator trigger input operations?
http://cplusplus.github.io/LWG/lwg-closed.html#245



Andrew Koenig
-
d:lwg2450
LWG2450

WP
(greater|less|greater_equal|less_equal)<void> do not yield a total order for pointers
http://cplusplus.github.io/LWG/lwg-defects.html#2450



Joaquín M López Muñoz
-
d:lwg2451
LWG2451

WP
[fund.ts.v2] optional<T> should 'forward' T's implicit conversions
http://cplusplus.github.io/LWG/lwg-defects.html#2451



Geoffrey Romer
-
d:lwg2452
LWG2452

Core
is_constructible, etc. and default arguments
http://cplusplus.github.io/LWG/lwg-active.html#2452



Hubert Tong
-
d:lwg2453
LWG2453

New
§[iterator.range] and now [iterator.container] aren't available via <initializer_list>
http://cplusplus.github.io/LWG/lwg-active.html#2453



Richard Smith
-
d:lwg2454
LWG2454

WP
Add raw_storage_iterator::base() member
http://cplusplus.github.io/LWG/lwg-defects.html#2454



Jonathan Wakely
-
d:lwg2455
LWG2455

WP
Allocator default construction should be allowed to throw
http://cplusplus.github.io/LWG/lwg-defects.html#2455



Pablo Halpern
-
d:lwg2456
LWG2456

Resolved
Incorrect exception specifications for 'swap' throughout library
http://cplusplus.github.io/LWG/lwg-defects.html#2456



Richard Smith
-
d:lwg2457
LWG2457

New
std::begin() and std::end() do not support multi-dimensional arrays correctly
http://cplusplus.github.io/LWG/lwg-active.html#2457



Janez Žemva
-
d:lwg2458
LWG2458

WP
N3778 and new library deallocation signatures
http://cplusplus.github.io/LWG/lwg-defects.html#2458



Richard Smith
-
d:lwg2459
LWG2459

WP
std::polar should require a non-negative rho
http://cplusplus.github.io/LWG/lwg-defects.html#2459



Marshall Clow
-
d:lwg246
LWG246

Dup
a.insert(p,t) is incorrectly specified
http://cplusplus.github.io/LWG/lwg-closed.html#246



Mark Rodgers
-
d:lwg2460
LWG2460

Tentatively Ready
LWG issue 2408 and value categories
http://cplusplus.github.io/LWG/lwg-active.html#2460



Richard Smith
-
d:lwg2461
LWG2461

New
Interaction between allocators and container exception safety guarantees
http://cplusplus.github.io/LWG/lwg-active.html#2461



dyp
-
d:lwg2462
LWG2462

WP
std::ios_base::failure is overspecified
http://cplusplus.github.io/LWG/lwg-defects.html#2462



Jonathan Wakely
-
d:lwg2463
LWG2463

WP
[fund.ts] Incorrect complexity for sample() algorithm
http://cplusplus.github.io/LWG/lwg-defects.html#2463



Joe Gottman
-
d:lwg2464
LWG2464

WP
try_emplace and insert_or_assign misspecified
http://cplusplus.github.io/LWG/lwg-defects.html#2464



Thomas Koeppe
-
d:lwg2465
LWG2465

Open
SFINAE-friendly common_type is nearly impossible to specialize correctly and regresses key functionality
http://cplusplus.github.io/LWG/lwg-active.html#2465



Eric Niebler
-
d:lwg2466
LWG2466

WP
allocator_traits::max_size() default behavior is incorrect
http://cplusplus.github.io/LWG/lwg-defects.html#2466



Howard Hinnant
-
d:lwg2467
LWG2467

WP
is_always_equal has slightly inconsistent default
http://cplusplus.github.io/LWG/lwg-defects.html#2467



Howard Hinnant
-
d:lwg2468
LWG2468

Tentatively Ready
Self-move-assignment of library types
http://cplusplus.github.io/LWG/lwg-active.html#2468



Matt Austern
-
d:lwg2469
LWG2469

WP
Wrong specification of Requires clause of operator[] for map and unordered_map
http://cplusplus.github.io/LWG/lwg-defects.html#2469



Tomasz Kamiński
-
d:lwg247
LWG247

CD1
vector, deque::insert complexity
http://cplusplus.github.io/LWG/lwg-defects.html#247



Lisa Lippincott
-
d:lwg2470
LWG2470

WP
Allocator's destroy function should be allowed to fail to instantiate
http://cplusplus.github.io/LWG/lwg-defects.html#2470



Daniel Krügler
-
d:lwg2471
LWG2471

LEWG
copy_n's number of InputIterator increments unspecified
http://cplusplus.github.io/LWG/lwg-active.html#2471



Jonathan Wakely
-
d:lwg2472
LWG2472

New
Heterogeneous comparisons in the standard library can result in ambiguities
http://cplusplus.github.io/LWG/lwg-active.html#2472



Richard Smith
-
d:lwg2473
LWG2473

WP
basic_filebuf's relation to C FILE semantics
http://cplusplus.github.io/LWG/lwg-defects.html#2473



Aaron Ballman
-
d:lwg2474
LWG2474

NAD
<cmath> functions unfriendly to integral_constant arguments
http://cplusplus.github.io/LWG/lwg-closed.html#2474



Matheus Izvekov
-
d:lwg2475
LWG2475

Tentatively Ready
Allow overwriting of std::basic_string terminator with charT() to allow cleaner interoperation with legacy APIs
http://cplusplus.github.io/LWG/lwg-active.html#2475



Matt Weber
-
d:lwg2476
LWG2476

WP
scoped_allocator_adaptor is not assignable
http://cplusplus.github.io/LWG/lwg-defects.html#2476



Jonathan Wakely
-
d:lwg2477
LWG2477

WP
Inconsistency of wordings in std::vector::erase() and std::deque::erase()
http://cplusplus.github.io/LWG/lwg-defects.html#2477



Anton Savin
-
d:lwg2478
LWG2478

New
Unclear how wstring_convert uses cvtstate
http://cplusplus.github.io/LWG/lwg-active.html#2478



Jonathan Wakely
-
d:lwg2479
LWG2479

New
Unclear how wbuffer_convert uses cvtstate
http://cplusplus.github.io/LWG/lwg-active.html#2479



Jonathan Wakely
-
d:lwg248
LWG248

CD1
time_get fails to set eofbit
http://cplusplus.github.io/LWG/lwg-defects.html#248



Martin Sebor
-
d:lwg2480
LWG2480

New
Error handling of wbuffer_convert unclear
http://cplusplus.github.io/LWG/lwg-active.html#2480



Jonathan Wakely
-
d:lwg2481
LWG2481

New
wstring_convert should be more precise regarding "byte-error string" etc.
http://cplusplus.github.io/LWG/lwg-active.html#2481



Jonathan Wakely
-
d:lwg2482
LWG2482

WP
§[c.strings] Table 73 mentions nonexistent functions
http://cplusplus.github.io/LWG/lwg-defects.html#2482



S. B.Tam
-
d:lwg2483
LWG2483

WP
throw_with_nested() should use is_final
http://cplusplus.github.io/LWG/lwg-defects.html#2483



Stephan T. Lavavej
-
d:lwg2484
LWG2484

WP
rethrow_if_nested() is doubly unimplementable
http://cplusplus.github.io/LWG/lwg-defects.html#2484



Stephan T. Lavavej
-
d:lwg2485
LWG2485

WP
get() should be overloaded for const tuple&&
http://cplusplus.github.io/LWG/lwg-defects.html#2485



Stephan T. Lavavej
-
d:lwg2486
LWG2486

WP
mem_fn() should be required to use perfect forwarding
http://cplusplus.github.io/LWG/lwg-defects.html#2486



Stephan T. Lavavej
-
d:lwg2487
LWG2487

WP
bind() should be const-overloaded, not cv-overloaded
http://cplusplus.github.io/LWG/lwg-defects.html#2487



Stephan T. Lavavej
-
d:lwg2488
LWG2488

WP
Placeholders should be allowed and encouraged to be constexpr
http://cplusplus.github.io/LWG/lwg-defects.html#2488



Stephan T. Lavavej
-
d:lwg2489
LWG2489

WP
mem_fn() should be noexcept
http://cplusplus.github.io/LWG/lwg-defects.html#2489



Stephan T. Lavavej
-
d:lwg249
LWG249

NAD
Return Type of auto_ptr::operator=
http://cplusplus.github.io/LWG/lwg-closed.html#249



Joseph Gottman
-
d:lwg2490
LWG2490

New
<regex> needs lots of noexcept
http://cplusplus.github.io/LWG/lwg-active.html#2490



Stephan T. Lavavej
-
d:lwg2491
LWG2491

New
std::less<T*> in constant expression
http://cplusplus.github.io/LWG/lwg-active.html#2491



Agustín K-ballo Bergé
-
d:lwg2492
LWG2492

WP
Clarify requirements for comp
http://cplusplus.github.io/LWG/lwg-defects.html#2492



Anton Savin
-
d:lwg2493
LWG2493

New
initializer_list supports incomplete classes
http://cplusplus.github.io/LWG/lwg-active.html#2493



David Krauss
-
d:lwg2494
LWG2494

WP
[fund.ts.v2] ostream_joiner needs noexcept
http://cplusplus.github.io/LWG/lwg-defects.html#2494



Nate Wilson
-
d:lwg2495
LWG2495

WP
There is no such thing as an Exception Safety element
http://cplusplus.github.io/LWG/lwg-defects.html#2495



Jonathan Wakely
-
d:lwg2496
LWG2496

New
Certain hard-to-avoid errors not in the immediate context are not allowed to be triggered by the evaluation of type traits
http://cplusplus.github.io/LWG/lwg-active.html#2496



Hubert Tong
-
d:lwg2497
LWG2497

New
Use of uncaught_exception()
http://cplusplus.github.io/LWG/lwg-active.html#2497



Roger Orr
-
d:lwg2498
LWG2498

New
operator>>(basic_istream&&, T&&) returns basic_istream&, but should probably return basic_istream&&
http://cplusplus.github.io/LWG/lwg-active.html#2498



Richard Smith
-
d:lwg2499
LWG2499

Open
operator>>(basic_istream&, CharT*) makes it hard to avoid buffer overflows
http://cplusplus.github.io/LWG/lwg-active.html#2499



Richard Smith
-
d:lwg25
LWG25

TC1
String operator<< uses width() value wrong
http://cplusplus.github.io/LWG/lwg-defects.html#25



Nathan Myers
-
d:lwg250
LWG250

CD1
splicing invalidates iterators
http://cplusplus.github.io/LWG/lwg-defects.html#250



Brian Parker
-
d:lwg2500
LWG2500

WP
[fund.ts.v2] fundts.memory.smartptr.shared.obs/6 should apply to cv-unqualified void
http://cplusplus.github.io/LWG/lwg-defects.html#2500



Jeffrey Yasskin
-
d:lwg2501
LWG2501

Tentatively Resolved
std::function requires POCMA/POCCA
http://cplusplus.github.io/LWG/lwg-active.html#2501



David Krauss
-
d:lwg2502
LWG2502

Tentatively Resolved
std::function does not use allocator::construct
http://cplusplus.github.io/LWG/lwg-active.html#2502



David Krauss
-
d:lwg2503
LWG2503

Tentatively Ready
multiline option should be added to syntax_option_type
http://cplusplus.github.io/LWG/lwg-active.html#2503



Nozomu Katō
-
d:lwg2504
LWG2504

New
basic_streambuf is not an abstract class
http://cplusplus.github.io/LWG/lwg-active.html#2504



Jonathan Wakely
-
d:lwg2505
LWG2505

Tentatively Resolved
auto_ptr_ref creation requirements underspecified
http://cplusplus.github.io/LWG/lwg-active.html#2505



Hubert Tong
-
d:lwg2506
LWG2506

New
Underspecification of atomics
http://cplusplus.github.io/LWG/lwg-active.html#2506



Geoffrey Romer
-
d:lwg2507
LWG2507

New
codecvt_mode should be a bitmask type
http://cplusplus.github.io/LWG/lwg-active.html#2507



Jonathan Wakely
-
d:lwg2508
LWG2508

New
§[new.delete.dataraces] wording needs to be updated
http://cplusplus.github.io/LWG/lwg-active.html#2508



Hans Boehm
-
d:lwg2509
LWG2509

WP
[fund.ts.v2] any_cast doesn't work with rvalue reference targets and cannot move with a value target
http://cplusplus.github.io/LWG/lwg-defects.html#2509



Ville Voutilainen
-
d:lwg251
LWG251

CD1
basic_stringbuf missing allocator_type
http://cplusplus.github.io/LWG/lwg-defects.html#251



Martin Sebor
-
d:lwg2510
LWG2510

Tentatively Ready
Tag types should not be DefaultConstructible
http://cplusplus.github.io/LWG/lwg-active.html#2510



Ville Voutilainen
-
d:lwg2511
LWG2511

New
scoped_allocator_adaptor piecewise construction does not require CopyConstructible
http://cplusplus.github.io/LWG/lwg-active.html#2511



David Krauss
-
d:lwg2512
LWG2512

Open
Y2K bites; what is an "unambiguous year identifier"?
http://cplusplus.github.io/LWG/lwg-active.html#2512



Hubert Tong
-
d:lwg2513
LWG2513

New
Missing requirements for basic_string::value_type
http://cplusplus.github.io/LWG/lwg-active.html#2513



Jonathan Wakely
-
d:lwg2514
LWG2514

Tentatively Ready
Type traits must not be final
http://cplusplus.github.io/LWG/lwg-active.html#2514



Jonathan Wakely
-
d:lwg2515
LWG2515

WP
[fund.ts.v2] Certain comparison operators of observer_ptr do not match synopsis
http://cplusplus.github.io/LWG/lwg-defects.html#2515



Tim Song
-
d:lwg2516
LWG2516

WP
[fund.ts.v2] Public "exposition only" members in observer_ptr
http://cplusplus.github.io/LWG/lwg-defects.html#2516



Tim Song
-
d:lwg2517
LWG2517

WP
[fund.ts.v2] Two propagate_const assignment operators have incorrect return type
http://cplusplus.github.io/LWG/lwg-defects.html#2517



Tim Song
-
d:lwg2518
LWG2518

New
[fund.ts.v2] Non-member swap for propagate_const should call member swap
http://cplusplus.github.io/LWG/lwg-active.html#2518



Tim Song
-
d:lwg2519
LWG2519

Tentatively Ready
Iterator operator-= has gratuitous undefined behaviour
http://cplusplus.github.io/LWG/lwg-active.html#2519



Hubert Tong
-
d:lwg252
LWG252

CD1
missing casts/C-style casts used in iostreams
http://cplusplus.github.io/LWG/lwg-defects.html#252



Martin Sebor
-
d:lwg2520
LWG2520

WP
N4089 broke initializing unique_ptr<T[]> from a nullptr
http://cplusplus.github.io/LWG/lwg-defects.html#2520



Ville Voutilainen
-
d:lwg2521
LWG2521

New
[fund.ts.v2] weak_ptr's converting move constructor should be modified as well for array support
http://cplusplus.github.io/LWG/lwg-active.html#2521



Tim Song
-
d:lwg2522
LWG2522

WP
[fund.ts.v2] Contradiction in set_default_resource specification
http://cplusplus.github.io/LWG/lwg-defects.html#2522



Tim Song
-
d:lwg2523
LWG2523

WP
std::promise synopsis shows two set_value_at_thread_exit()'s for no apparent reason
http://cplusplus.github.io/LWG/lwg-defects.html#2523



Tim Song
-
d:lwg2524
LWG2524

Open
generate_canonical can occasionally return 1.0
http://cplusplus.github.io/LWG/lwg-active.html#2524



Michael Prähofer
-
d:lwg2525
LWG2525

New
[fund.ts.v2] get_memory_resource should be const and noexcept
http://cplusplus.github.io/LWG/lwg-active.html#2525



Tim Song
-
d:lwg2526
LWG2526

WP
[fund.ts.v2] Incorrect precondition for experimental::function::swap
http://cplusplus.github.io/LWG/lwg-defects.html#2526



Tim Song
-
d:lwg2527
LWG2527

New
[fund.ts.v2] ALLOCATOR_OF for function::operator= has incorrect default
http://cplusplus.github.io/LWG/lwg-active.html#2527



Tim Song
-
d:lwg2528
LWG2528

New
Order of std::tuple construction unspecified
http://cplusplus.github.io/LWG/lwg-active.html#2528



Brian Rodriguez
-
d:lwg2529
LWG2529

Tentatively Resolved
Assigning to enable_shared_from_this::__weak_this twice
http://cplusplus.github.io/LWG/lwg-active.html#2529



Jonathan Wakely
-
d:lwg253
LWG253

CD1
valarray helper functions are almost entirely useless
http://cplusplus.github.io/LWG/lwg-defects.html#253



Robert Klarer
-
d:lwg2530
LWG2530

Open
Clarify observable side effects of releasing a shared state
http://cplusplus.github.io/LWG/lwg-active.html#2530



Agustín K-ballo Bergé
-
d:lwg2531
LWG2531

Tentatively Ready
future::get should explicitly state that the shared state is released
http://cplusplus.github.io/LWG/lwg-active.html#2531



Agustín K-ballo Bergé
-
d:lwg2532
LWG2532

Open
Satisfying a promise at thread exit
http://cplusplus.github.io/LWG/lwg-active.html#2532



Agustín K-ballo Bergé
-
d:lwg2533
LWG2533

SG1
[concurr.ts] Constrain threads where future::then can run a continuation
http://cplusplus.github.io/LWG/lwg-active.html#2533



Agustín K-ballo Bergé
-
d:lwg2534
LWG2534

Tentatively Ready
Constrain rvalue stream operators
http://cplusplus.github.io/LWG/lwg-active.html#2534



Robert Haberlach
-
d:lwg2535
LWG2535

NAD
Inconsistency between ostream::write and ostream::operator<<
http://cplusplus.github.io/LWG/lwg-closed.html#2535



Marshall Clow
-
d:lwg2536
LWG2536

Tentatively Ready
What should <complex.h> do?
http://cplusplus.github.io/LWG/lwg-active.html#2536



Richard Smith
-
d:lwg2537
LWG2537

WP
Constructors for priority_queue taking allocators should call make_heap
http://cplusplus.github.io/LWG/lwg-defects.html#2537



Eric Schmidt
-
d:lwg2538
LWG2538

NAD
[parallel.ts] Requirements on data race behavior of iterators and swap should be clarified
http://cplusplus.github.io/LWG/lwg-closed.html#2538



Robert Geva
-
d:lwg2539
LWG2539

WP
[fund.ts.v2] invocation_trait definition definition doesn't work for surrogate call functions
http://cplusplus.github.io/LWG/lwg-defects.html#2539



Mike Spertus
-
d:lwg254
LWG254

CD1
Exception types in clause 19 are constructed from std::string
http://cplusplus.github.io/LWG/lwg-defects.html#254



Dave Abrahams
-
d:lwg2540
LWG2540

Tentatively Ready
unordered_multimap::insert hint iterator
http://cplusplus.github.io/LWG/lwg-active.html#2540



Isaac Hier
-
d:lwg2541
LWG2541

New
[parallel.ts] Headers for ExecutionPolicy algorithm overloads
http://cplusplus.github.io/LWG/lwg-active.html#2541



Tim Song
-
d:lwg2542
LWG2542

WP
Missing const requirements for associative containers
http://cplusplus.github.io/LWG/lwg-defects.html#2542



Daniel Krügler
-
d:lwg2543
LWG2543

Tentatively Ready
LWG 2148 (hash support for enum types) seems under-specified
http://cplusplus.github.io/LWG/lwg-active.html#2543



Ville Voutilainen
-
d:lwg2544
LWG2544

Tentatively Ready
istreambuf_iterator(basic_streambuf<charT, traits>* s) effects unclear when s is 0
http://cplusplus.github.io/LWG/lwg-active.html#2544



S. B. Tam
-
d:lwg2545
LWG2545

WP
Simplify wording for bind without explicitly specified return type
http://cplusplus.github.io/LWG/lwg-defects.html#2545



Tomasz Kamiński
-
d:lwg2546
LWG2546

New
Implementability of locale-sensitive UnicodeEscapeSequence matching
http://cplusplus.github.io/LWG/lwg-active.html#2546



Hubert Tong
-
d:lwg2547
LWG2547

New
Container requirements (and other library text) should say "strict total order", not just "total order"
http://cplusplus.github.io/LWG/lwg-active.html#2547



Matt Austern
-
d:lwg2548
LWG2548

Tentatively Resolved
Missing vfscanf from <cstdio>
http://cplusplus.github.io/LWG/lwg-active.html#2548



Richard Smith
-
d:lwg2549
LWG2549

WP
Tuple EXPLICIT constructor templates that take tuple parameters end up taking references to temporaries and will create dangling references
http://cplusplus.github.io/LWG/lwg-defects.html#2549



Ville Voutilainen
-
d:lwg255
LWG255

LEWG
Why do basic_streambuf<>::pbump() and gbump() take an int?
http://cplusplus.github.io/LWG/lwg-active.html#255



Martin Sebor
-
d:lwg2550
LWG2550

WP
Wording of unordered container's clear() method complexity
http://cplusplus.github.io/LWG/lwg-defects.html#2550



Yegor Derevenets
-
d:lwg2551
LWG2551

WP
[fund.ts.v2] "Exception safety" cleanup in library fundamentals required
http://cplusplus.github.io/LWG/lwg-defects.html#2551



Daniel Krügler
-
d:lwg2552
LWG2552

NAD
priority_queue doesn't work with move-only types
http://cplusplus.github.io/LWG/lwg-closed.html#2552



Matt Austern
-
d:lwg2553
LWG2553

NAD
[fund.ts.v2] basic_string_view substring constructor
http://cplusplus.github.io/LWG/lwg-closed.html#2553



Evan Teran
-
d:lwg2554
LWG2554

Resolved
Swapping multidimensional arrays is never noexcept
http://cplusplus.github.io/LWG/lwg-defects.html#2554



Orson Peters
-
d:lwg2555
LWG2555

WP
[fund.ts.v2] No handling for over-aligned types in optional
http://cplusplus.github.io/LWG/lwg-defects.html#2555



Marshall Clow
-
d:lwg2556
LWG2556

Tentatively Ready
Wide contract for future::share()
http://cplusplus.github.io/LWG/lwg-active.html#2556



Agustín K-ballo Bergé
-
d:lwg2557
LWG2557

WP
Logical operator traits are broken in the zero-argument case
http://cplusplus.github.io/LWG/lwg-defects.html#2557



Geoffrey Romer
-
d:lwg2558
LWG2558

WP
[fund.ts.v2] Logical operator traits are broken in the zero-argument case
http://cplusplus.github.io/LWG/lwg-defects.html#2558



Geoffrey Romer
-
d:lwg2559
LWG2559

WP
Error in LWG 2234's resolution
http://cplusplus.github.io/LWG/lwg-defects.html#2559



Tim Song
-
d:lwg256
LWG256

CD1
typo in 27.4.4.2, p17: copy_event does not exist
http://cplusplus.github.io/LWG/lwg-defects.html#256



Martin Sebor
-
d:lwg2560
LWG2560

WP
is_constructible underspecified when applied to a function type
http://cplusplus.github.io/LWG/lwg-defects.html#2560



Richard Smith
-
d:lwg2561
LWG2561

New
[fund.ts.v2] Incorrect exception specifications for 'swap' in C++ Extensions for Library Fundamentals
http://cplusplus.github.io/LWG/lwg-active.html#2561



Daniel Krügler
-
d:lwg2562
LWG2562

Tentatively Ready
Consistent total ordering of pointers by comparison functors
http://cplusplus.github.io/LWG/lwg-active.html#2562



Casey Carter
-
d:lwg2563
LWG2563

New
LWG 2259 relaxes requirements, perhaps unintentionally
http://cplusplus.github.io/LWG/lwg-active.html#2563



Ville Voutilainen
-
d:lwg2564
LWG2564

New
[fund.ts.v2] std::experimental::function constructors taking allocator arguments may throw exceptions
http://cplusplus.github.io/LWG/lwg-active.html#2564



Tim Song
-
d:lwg2565
LWG2565

WP
std::function's move constructor should guarantee nothrow for reference_wrappers and function pointers
http://cplusplus.github.io/LWG/lwg-defects.html#2565



Tim Song
-
d:lwg2566
LWG2566

WP
Requirements on the first template parameter of container adaptors
http://cplusplus.github.io/LWG/lwg-defects.html#2566



Tim Song
-
d:lwg2567
LWG2567

Tentatively Ready
Specification of logical operator traits uses BaseCharacteristic, which is defined only for UnaryTypeTraits and BinaryTypeTraits
http://cplusplus.github.io/LWG/lwg-active.html#2567



Tim Song
-
d:lwg2568
LWG2568

Open
[fund.ts.v2] Specification of logical operator traits uses BaseCharacteristic, which is defined only for UnaryTypeTraits and BinaryTypeTraits
http://cplusplus.github.io/LWG/lwg-active.html#2568



Tim Song
-
d:lwg2569
LWG2569

Tentatively Ready
conjunction and disjunction requirements are too strict
http://cplusplus.github.io/LWG/lwg-active.html#2569



Tim Song
-
d:lwg257
LWG257

NAD
STL functional object and iterator inheritance.
http://cplusplus.github.io/LWG/lwg-closed.html#257



Robert Dick
-
d:lwg2570
LWG2570

Tentatively Ready
[fund.ts.v2] conjunction and disjunction requirements are too strict
http://cplusplus.github.io/LWG/lwg-active.html#2570



Tim Song
-
d:lwg2571
LWG2571

WP
§[map.modifiers]/2 imposes nonsensical requirement on insert(InputIterator, InputIterator)
http://cplusplus.github.io/LWG/lwg-defects.html#2571



Tim Song
-
d:lwg2572
LWG2572

WP
The remarks for shared_ptr::operator* should apply to cv-qualified void as well
http://cplusplus.github.io/LWG/lwg-defects.html#2572



Tim Song
-
d:lwg2573
LWG2573

WP
[fund.ts.v2] std::hash<std::experimental::shared_ptr<T>> does not work for arrays
http://cplusplus.github.io/LWG/lwg-defects.html#2573



Tim Song
-
d:lwg2574
LWG2574

WP
[fund.ts.v2] std::experimental::function::operator=(F&&) should be constrained
http://cplusplus.github.io/LWG/lwg-defects.html#2574



Tim Song
-
d:lwg2575
LWG2575

WP
[fund.ts.v2] experimental::function::assign should be removed
http://cplusplus.github.io/LWG/lwg-defects.html#2575



Tim Song
-
d:lwg2576
LWG2576

WP
istream_iterator and ostream_iterator should use std::addressof
http://cplusplus.github.io/LWG/lwg-defects.html#2576



Tim Song
-
d:lwg2577
LWG2577

WP
{shared,unique}_lock should use std::addressof
http://cplusplus.github.io/LWG/lwg-defects.html#2577



Tim Song
-
d:lwg2578
LWG2578

Tentatively Ready
Iterator requirements should reference iterator traits
http://cplusplus.github.io/LWG/lwg-active.html#2578



Ville Voutilainen
-
d:lwg2579
LWG2579

WP
Inconsistency wrt Allocators in basic_string assignment vs. basic_string::assign
http://cplusplus.github.io/LWG/lwg-defects.html#2579



Marshall Clow
-
d:lwg258
LWG258

CD1
Missing allocator requirement
http://cplusplus.github.io/LWG/lwg-defects.html#258



Matt Austern
-
d:lwg2580
LWG2580

NAD
Who is definitive: operator= or assign?
http://cplusplus.github.io/LWG/lwg-closed.html#2580



Marshall Clow
-
d:lwg2581
LWG2581

WP
Specialization of <type_traits> variable templates should be prohibited
http://cplusplus.github.io/LWG/lwg-defects.html#2581



Tim Song
-
d:lwg2582
LWG2582

WP
§[res.on.functions]/2's prohibition against incomplete types shouldn't apply to type traits
http://cplusplus.github.io/LWG/lwg-defects.html#2582



Tim Song
-
d:lwg2583
LWG2583

WP
There is no way to supply an allocator for basic_string(str, pos)
http://cplusplus.github.io/LWG/lwg-defects.html#2583



Pablo Halpern
-
d:lwg2584
LWG2584

Tentatively Ready
<regex> ECMAScript IdentityEscape is ambiguous
http://cplusplus.github.io/LWG/lwg-active.html#2584



Billy O'Neal III
-
d:lwg2585
LWG2585

WP
forward_list::resize(size_type, const value_type&) effects incorrect
http://cplusplus.github.io/LWG/lwg-defects.html#2585



Tim Song
-
d:lwg2586
LWG2586

WP
Wrong value category used in scoped_allocator_adaptor::construct()
http://cplusplus.github.io/LWG/lwg-defects.html#2586



Jonathan Wakely
-
d:lwg2587
LWG2587

Open
"Convertible to bool" requirement in conjunction and disjunction
http://cplusplus.github.io/LWG/lwg-active.html#2587



Tim Song
-
d:lwg2588
LWG2588

Open
[fund.ts.v2] "Convertible to bool" requirement in conjunction and disjunction
http://cplusplus.github.io/LWG/lwg-active.html#2588



Tim Song
-
d:lwg2589
LWG2589

Tentatively Ready
match_results can't satisfy the requirements of a container
http://cplusplus.github.io/LWG/lwg-active.html#2589



S. B. Tam
-
d:lwg259
LWG259

CD1
basic_string::operator[] and const correctness
http://cplusplus.github.io/LWG/lwg-defects.html#259



Chris Newton
-
d:lwg2590
LWG2590

WP
Aggregate initialization for std::array
http://cplusplus.github.io/LWG/lwg-defects.html#2590



Robert Haberlach
-
d:lwg2591
LWG2591

Tentatively Ready
std::function's member template target() should not lead to undefined behaviour
http://cplusplus.github.io/LWG/lwg-active.html#2591



Daniel Krügler
-
d:lwg2592
LWG2592

New
Require that chrono::duration_casts from smaller durations to larger durations do not overflow
http://cplusplus.github.io/LWG/lwg-active.html#2592



Andy Giese
-
d:lwg2593
LWG2593

LEWG
Moved-from state of Allocators
http://cplusplus.github.io/LWG/lwg-active.html#2593



David Krauss
-
d:lwg2594
LWG2594

New
Contradicting definition of empty shared_ptr on shared_ptr(nullptr, d)
http://cplusplus.github.io/LWG/lwg-active.html#2594



Kazutoshi Satoda
-
d:lwg2595
LWG2595

New
reverse_iterator::operator[]'s return type revisited
http://cplusplus.github.io/LWG/lwg-active.html#2595



Robert Haberlach
-
d:lwg2596
LWG2596

WP
vector::data() should use addressof
http://cplusplus.github.io/LWG/lwg-defects.html#2596



Marshall Clow
-
d:lwg2597
LWG2597

New
std::log misspecified for complex numbers
http://cplusplus.github.io/LWG/lwg-active.html#2597



Thomas Koeppe
-
d:lwg2598
LWG2598

Tentatively Ready
addressof works on temporaries
http://cplusplus.github.io/LWG/lwg-active.html#2598



Brent Friedman
-
d:lwg2599
LWG2599

New
Library incomplete type permission phrase is unclear
http://cplusplus.github.io/LWG/lwg-active.html#2599



Zhihao Yuan
-
d:lwg26
LWG26

TC1
Bad sentry example
http://cplusplus.github.io/LWG/lwg-defects.html#26



Nathan Myers
-
d:lwg260
LWG260

CD1
Inconsistent return type of istream_iterator::operator++(int)
http://cplusplus.github.io/LWG/lwg-defects.html#260



Martin Sebor
-
d:lwg2600
LWG2600

LEWG
ios_base must store inaccessible iostate flags
http://cplusplus.github.io/LWG/lwg-active.html#2600



David Krauss
-
d:lwg2601
LWG2601

WP
[filesys.ts] [PDTS] Make namespaces consistent with Library TS policy
http://cplusplus.github.io/LWG/lwg-defects.html#2601



FI-5, US-5, GB-3, CH-6
-
d:lwg2602
LWG2602

WP
[filesys.ts] [PDTS] Tighten specification when there is no reasonable behavior
http://cplusplus.github.io/LWG/lwg-defects.html#2602



FI-1
-
d:lwg2603
LWG2603

WP
[filesys.ts] [PDTS] Filename length needs bullet item
http://cplusplus.github.io/LWG/lwg-defects.html#2603



CH-2
-
d:lwg2604
LWG2604

NAD
[filesys.ts] [PDTS] Need definition of dot and dot-dot
http://cplusplus.github.io/LWG/lwg-closed.html#2604



CH-3
-
d:lwg2605
LWG2605

WP
[filesys.ts] [PDTS] Parent of root directory unspecified
http://cplusplus.github.io/LWG/lwg-defects.html#2605



CH-4
-
d:lwg2606
LWG2606

WP
[filesys.ts] [PDTS] Path depth is underspecified
http://cplusplus.github.io/LWG/lwg-defects.html#2606



CH-5
-
d:lwg2607
LWG2607

WP
[filesys.ts] [PDTS] Unhelpful comment for struct space_info
http://cplusplus.github.io/LWG/lwg-defects.html#2607



GB-4
-
d:lwg2608
LWG2608

WP
[filesys.ts] [PDTS] file_time_type underspecified
http://cplusplus.github.io/LWG/lwg-defects.html#2608



CH-7
-
d:lwg2609
LWG2609

WP
[filesys.ts] [PDTS] Unclear why range-based-for functions return different types
http://cplusplus.github.io/LWG/lwg-defects.html#2609



FI-2
-
d:lwg261
LWG261

CD1
Missing description of istream_iterator::operator!=
http://cplusplus.github.io/LWG/lwg-defects.html#261



Martin Sebor
-
d:lwg2610
LWG2610

NAD
[filesys.ts] [PDTS] Apparently inconsistent return types from several functions
http://cplusplus.github.io/LWG/lwg-closed.html#2610



FI-4
-
d:lwg2611
LWG2611

NAD Future
[filesys.ts] [PDTS] Lack of relative() operation function
http://cplusplus.github.io/LWG/lwg-closed.html#2611



GB-1
-
d:lwg2612
LWG2612

NAD Future
[filesys.ts] [PDTS] uintmax_t too small for large file sizes
http://cplusplus.github.io/LWG/lwg-closed.html#2612



CH-8
-
d:lwg2613
LWG2613

NAD
[filesys.ts] [PDTS] Missing actual error conditions thrown
http://cplusplus.github.io/LWG/lwg-closed.html#2613



CH 9
-
d:lwg2614
LWG2614

WP
[filesys.ts] [PDTS] Incorrect postconditions for path copy/move constructor
http://cplusplus.github.io/LWG/lwg-defects.html#2614



GB-7, CH-10
-
d:lwg2615
LWG2615

WP
[filesys.ts] [PDTS] Missing behavior for characters with no representation
http://cplusplus.github.io/LWG/lwg-defects.html#2615



GB-8
-
d:lwg2616
LWG2616

WP
[filesys.ts] [PDTS] Append behavior underspecified if target is empty
http://cplusplus.github.io/LWG/lwg-defects.html#2616



CH-11
-
d:lwg2617
LWG2617

NAD
[filesys.ts] [PDTS] path member swap() unnecessary
http://cplusplus.github.io/LWG/lwg-closed.html#2617



CH-12
-
d:lwg2618
LWG2618

WP
[filesys.ts] [PDTS] is_absolute() return clause confusing
http://cplusplus.github.io/LWG/lwg-defects.html#2618



FI-7
-
d:lwg2619
LWG2619

WP
[filesys.ts] [PDTS] Consider using quoted manipulators
http://cplusplus.github.io/LWG/lwg-defects.html#2619



FI-8
-
d:lwg262
LWG262

CD1
Bitmask operator ~ specified incorrectly
http://cplusplus.github.io/LWG/lwg-defects.html#262



Beman Dawes
-
d:lwg2621
LWG2621

WP
[filesys.ts] [PDTS] directory_entry operator== needs clarification
http://cplusplus.github.io/LWG/lwg-defects.html#2621



GB-12
-
d:lwg2622
LWG2622

WP
[filesys.ts] [PDTS] directory_iterator underspecified
http://cplusplus.github.io/LWG/lwg-defects.html#2622



CH-13
-
d:lwg2623
LWG2623

NAD
[filesys.ts] [PDTS] Request for create_regular_file() and/or touch()
http://cplusplus.github.io/LWG/lwg-closed.html#2623



CH-14
-
d:lwg2624
LWG2624

WP
[filesys.ts] [PDTS] Incorrect effects clause for path copy
http://cplusplus.github.io/LWG/lwg-defects.html#2624



GB-14
-
d:lwg2625
LWG2625

WP
[filesys.ts] [PDTS] Copying equivalent paths effects not specified
http://cplusplus.github.io/LWG/lwg-defects.html#2625



CH-15
-
d:lwg2626
LWG2626

NAD
[filesys.ts] [PDTS] Equivalence is a volatile property
http://cplusplus.github.io/LWG/lwg-closed.html#2626



CH-16
-
d:lwg2627
LWG2627

WP
[filesys.ts] [PDTS] Return value of uintmax_t on error?
http://cplusplus.github.io/LWG/lwg-defects.html#2627



FI-9
-
d:lwg2628
LWG2628

NAD
[filesys.ts] [PDTS] Possible last_write_time() postcondition?
http://cplusplus.github.io/LWG/lwg-closed.html#2628



GB-15
-
d:lwg2629
LWG2629

WP
[filesys.ts] [PDTS] Unclear semantics of read_symlink on error
http://cplusplus.github.io/LWG/lwg-defects.html#2629



GB-16
-
d:lwg263
LWG263

CD1
Severe restriction on basic_string reference counting
http://cplusplus.github.io/LWG/lwg-defects.html#263



Kevlin Henney
-
d:lwg2630
LWG2630

NAD
[filesys.ts] [PDTS] remove() must avoid race
http://cplusplus.github.io/LWG/lwg-closed.html#2630



CH-17
-
d:lwg2631
LWG2631

NAD
[filesys.ts] [PDTS] POSIX guarantees atomicity for rename()
http://cplusplus.github.io/LWG/lwg-closed.html#2631



CH-18
-
d:lwg2632
LWG2632

WP
[filesys.ts] [PDTS] system_complete() example needs clarification
http://cplusplus.github.io/LWG/lwg-defects.html#2632



FI-10
-
d:lwg2633
LWG2633

WP
[filesys.ts] [PDTS] unique_path() is a security vulnerability
http://cplusplus.github.io/LWG/lwg-defects.html#2633



CH-19
-
d:lwg2634
LWG2634

WP
[filesys.ts] [PDTS] enum class directory_options has no summary
http://cplusplus.github.io/LWG/lwg-defects.html#2634



P.J. Plauger
-
d:lwg2635
LWG2635

WP
[filesys.ts] [PDTS] directory_options::skip_permission_denied is not used
http://cplusplus.github.io/LWG/lwg-defects.html#2635



P.J. Plauger
-
d:lwg2636
LWG2636

WP
[filesys.ts] [PDTS] copy_options::copy_symlinks is not used
http://cplusplus.github.io/LWG/lwg-defects.html#2636



P.J. Plauger
-
d:lwg2637
LWG2637

WP
[filesys.ts] [PDTS] All functions with error_code arguments should be noexcept
http://cplusplus.github.io/LWG/lwg-defects.html#2637



P.J. Plauger
-
d:lwg2638
LWG2638

NAD
[filesys.ts] [PDTS] Make certain functions noexcept and drop error_code version
http://cplusplus.github.io/LWG/lwg-closed.html#2638



P.J. Plauger
-
d:lwg2639
LWG2639

NAD Editorial
[filesys.ts] [PDTS] permissions() is missing from synopsis
http://cplusplus.github.io/LWG/lwg-closed.html#2639



P.J. Plauger
-
d:lwg264
LWG264

CD1
Associative container insert(i, j) complexity requirements are not feasible.
http://cplusplus.github.io/LWG/lwg-defects.html#264



John Potter
-
d:lwg2640
LWG2640

WP
[filesys.ts] [PDTS] class directory_entry should retain operator const path&() from V2
http://cplusplus.github.io/LWG/lwg-defects.html#2640



P.J. Plauger
-
d:lwg2641
LWG2641

WP
[filesys.ts] [PDTS] directory_iterator, recursive_directory_iterator, move construct/assign should be noexcept
http://cplusplus.github.io/LWG/lwg-defects.html#2641



P.J. Plauger
-
d:lwg2642
LWG2642

NAD
[filesys.ts] [PDTS] class path should have defaulted constructors/destructor/assignments.
http://cplusplus.github.io/LWG/lwg-closed.html#2642



P.J. Plauger
-
d:lwg2643
LWG2643

Dup
[filesys.ts] [PDTS] path::compare(const string&) should be path::compare(const string_type&)
http://cplusplus.github.io/LWG/lwg-closed.html#2643



P.J. Plauger
-
d:lwg2644
LWG2644

WP
[filesys.ts] [PDTS] enum classes copy_options and perms should be bitmask types
http://cplusplus.github.io/LWG/lwg-defects.html#2644



P.J. Plauger
-
d:lwg2645
LWG2645

WP
[filesys.ts] [PDTS] create_directory should refer to perms::all instead of Posix S_IRWXU|S_IRWXG|S_IRWXO
http://cplusplus.github.io/LWG/lwg-defects.html#2645



P.J. Plauger
-
d:lwg2646
LWG2646

NAD
[filesys.ts] [PDTS] Do we really need generic*?
http://cplusplus.github.io/LWG/lwg-closed.html#2646



P.J. Plauger
-
d:lwg2647
LWG2647

WP
[filesys.ts] [PDTS] last_write_time() uses ill-formed cast
http://cplusplus.github.io/LWG/lwg-defects.html#2647



P.J. Plauger
-
d:lwg2648
LWG2648

WP
[filesys.ts] [PDTS] path::template<class charT>string() conversion rules
http://cplusplus.github.io/LWG/lwg-defects.html#2648



P.J. Plauger
-
d:lwg2649
LWG2649

WP
[filesys.ts] [PDTS] path and directory_entry move ctors should not be noexcept
http://cplusplus.github.io/LWG/lwg-defects.html#2649



Stephan T. Lavavej
-
d:lwg265
LWG265

CD1
std::pair::pair() effects overly restrictive
http://cplusplus.github.io/LWG/lwg-defects.html#265



Martin Sebor
-
d:lwg2650
LWG2650

WP
[filesys.ts] [PDTS] path::compare(const string& s) wrong argument type
http://cplusplus.github.io/LWG/lwg-defects.html#2650



Stephan T. Lavavej
-
d:lwg2651
LWG2651

Dup
[filesys.ts] [PDTS] directory_iterator, recursive_directory_iterator, pointer/reference typedefs wrong
http://cplusplus.github.io/LWG/lwg-closed.html#2651



Stephan T. Lavavej
-
d:lwg2652
LWG2652

WP
[filesys.ts] [PDTS] Better to avoid deriving from std::iterator
http://cplusplus.github.io/LWG/lwg-defects.html#2652



Stephan T. Lavavej
-
d:lwg2653
LWG2653

WP
[filesys.ts] [PDTS] directory_entry multithreading concerns
http://cplusplus.github.io/LWG/lwg-defects.html#2653



Stephan T. Lavavej
-
d:lwg2654
LWG2654

NAD Future
[filesys.ts] [PDTS] Concerns with security and testability
http://cplusplus.github.io/LWG/lwg-closed.html#2654



Google
-
d:lwg2655
LWG2655

WP
[filesys.ts] [PDTS] Clarify Error reporting
http://cplusplus.github.io/LWG/lwg-defects.html#2655



Beman Dawes
-
d:lwg2656
LWG2656

WP
[filesys.ts] [PDTS] Feature test macro for TS version
http://cplusplus.github.io/LWG/lwg-defects.html#2656



Clark Nelson
-
d:lwg2657
LWG2657

WP
[filesys.ts] [PDTS] Inappropriate use of "No diagnostic is required"
http://cplusplus.github.io/LWG/lwg-defects.html#2657



LWG/SG-3
-
d:lwg2658
LWG2658

WP
[filesys.ts] [PDTS] POSIX utime() is obsolescent
http://cplusplus.github.io/LWG/lwg-defects.html#2658



LWG/SG-3
-
d:lwg2659
LWG2659

NAD Editorial
[filesys.ts] [PDTS] Invalid expressions for bitmask types
http://cplusplus.github.io/LWG/lwg-closed.html#2659



Daniel Krügler
-
d:lwg266
LWG266

CD1
bad_exception::~bad_exception() missing Effects clause
http://cplusplus.github.io/LWG/lwg-defects.html#266



Martin Sebor
-
d:lwg2660
LWG2660

WP
[filesys.ts] [PDTS] Incorrect Throws specification for absolute()
http://cplusplus.github.io/LWG/lwg-defects.html#2660



Daniel Krügler
-
d:lwg2661
LWG2661

NAD
[filesys.ts] Surprising equivalent() behavior if neither file exists
http://cplusplus.github.io/LWG/lwg-closed.html#2661



Beman Dawes
-
d:lwg2662
LWG2662

WP
[filesys.ts] Allocator requirements unspecified
http://cplusplus.github.io/LWG/lwg-defects.html#2662



Daniel Krügler
-
d:lwg2663
LWG2663

Tentatively Resolved
Enable efficient retrieval of file size from directory_entry
http://cplusplus.github.io/LWG/lwg-active.html#2663



Gor Nishanov
-
d:lwg2664
LWG2664

Tentatively Ready
operator/ (and other append) semantics not useful if argument has root
http://cplusplus.github.io/LWG/lwg-active.html#2664



Peter Dimov
-
d:lwg2665
LWG2665

Open
remove_filename() post condition is incorrect
http://cplusplus.github.io/LWG/lwg-active.html#2665



Eric Fiselier
-
d:lwg2666
LWG2666

NAD Editorial
Bitmask operations should use bitmask terms
http://cplusplus.github.io/LWG/lwg-closed.html#2666



Jonathan Wakely
-
d:lwg2667
LWG2667

WP
path::root_directory() description is confusing
http://cplusplus.github.io/LWG/lwg-defects.html#2667



Jonathan Wakely
-
d:lwg2668
LWG2668

New
path::operator+= is defined, but not operator+
http://cplusplus.github.io/LWG/lwg-active.html#2668



Jonathan Wakely
-
d:lwg2669
LWG2669

WP
recursive_directory_iterator effects refers to non-existent functions
http://cplusplus.github.io/LWG/lwg-defects.html#2669



Jonathan Wakely
-
d:lwg267
LWG267

NAD
interaction of strstreambuf::overflow() and seekoff()
http://cplusplus.github.io/LWG/lwg-closed.html#267



Martin Sebor
-
d:lwg2670
LWG2670

WP
system_complete refers to undefined variable 'base'
http://cplusplus.github.io/LWG/lwg-defects.html#2670



Jonathan Wakely
-
d:lwg2671
LWG2671

WP
Errors in Copy
http://cplusplus.github.io/LWG/lwg-defects.html#2671



Jonathan Wakely
-
d:lwg2672
LWG2672

Tentatively Ready
Should is_empty use error_code in its specification?
http://cplusplus.github.io/LWG/lwg-active.html#2672



Jonathan Wakely
-
d:lwg2673
LWG2673

WP
status() effects cannot be implemented as specified
http://cplusplus.github.io/LWG/lwg-defects.html#2673



Jonathan Wakely
-
d:lwg2674
LWG2674

WP
Bidirectional iterator requirement on path::iterator is very expensive
http://cplusplus.github.io/LWG/lwg-defects.html#2674



Jonathan Wakely
-
d:lwg2675
LWG2675

New
register_callback can fail
http://cplusplus.github.io/LWG/lwg-active.html#2675



David Krauss
-
d:lwg2676
LWG2676

Review
Provide filesystem::path overloads for File-based streams
http://cplusplus.github.io/LWG/lwg-active.html#2676



Beman Dawes
-
d:lwg2677
LWG2677

Tentatively Resolved
directory_entry::status is not allowed to be cached as a quality-of-implementation issue
http://cplusplus.github.io/LWG/lwg-active.html#2677



Billy O'Neal
-
d:lwg2678
LWG2678

Tentatively Ready
std::filesystem enum classes overspecified
http://cplusplus.github.io/LWG/lwg-active.html#2678



Richard Smith
-
d:lwg2679
LWG2679

Tentatively Ready
Inconsistent Use of Effects and Equivalent To
http://cplusplus.github.io/LWG/lwg-active.html#2679



Dawn Perchik
-
d:lwg268
LWG268

CD1
Typo in locale synopsis
http://cplusplus.github.io/LWG/lwg-defects.html#268



Martin Sebor
-
d:lwg2680
LWG2680

Tentatively Ready
Add "Equivalent to" to filesystem
http://cplusplus.github.io/LWG/lwg-active.html#2680



Beman Dawes
-
d:lwg2681
LWG2681

Tentatively Ready
filesystem::copy() cannot copy symlinks
http://cplusplus.github.io/LWG/lwg-active.html#2681



Jonathan Wakely
-
d:lwg2682
LWG2682

Open
filesystem::copy() won't create a symlink to a directory
http://cplusplus.github.io/LWG/lwg-active.html#2682



Jonathan Wakely
-
d:lwg2683
LWG2683

WP
filesystem::copy() says "no effects"
http://cplusplus.github.io/LWG/lwg-defects.html#2683



Jonathan Wakely
-
d:lwg2684
LWG2684

WP
priority_queue lacking comparator typedef
http://cplusplus.github.io/LWG/lwg-defects.html#2684



Robert Haberlach
-
d:lwg2685
LWG2685

WP
shared_ptr deleters must not not throw on move construction
http://cplusplus.github.io/LWG/lwg-defects.html#2685



Jonathan Wakely
-
d:lwg2686
LWG2686

Tentatively Ready
Why is std::hash specialized for error_code, but not error_condition?
http://cplusplus.github.io/LWG/lwg-active.html#2686



Tim Song
-
d:lwg2687
LWG2687

WP
{inclusive,exclusive}_scan misspecified
http://cplusplus.github.io/LWG/lwg-defects.html#2687



Tim Song
-
d:lwg2688
LWG2688

WP
clamp misses preconditions and has extraneous condition on result
http://cplusplus.github.io/LWG/lwg-defects.html#2688



Martin Moene
-
d:lwg2689
LWG2689

WP
Parallel versions of std::copy and std::move shouldn't be in order
http://cplusplus.github.io/LWG/lwg-defects.html#2689



Tim Song
-
d:lwg269
LWG269

NAD
cstdarg and unnamed parameters
http://cplusplus.github.io/LWG/lwg-closed.html#269



J. Stephen Adamczyk
-
d:lwg2690
LWG2690

LEWG
invoke<R>
http://cplusplus.github.io/LWG/lwg-active.html#2690



Zhihao Yuan
-
d:lwg2691
LWG2691

New
money_base::space and do_put: U+0020 versus fill
http://cplusplus.github.io/LWG/lwg-active.html#2691



Hubert Tong
-
d:lwg2692
LWG2692

Tentatively NAD
Overspecification of lvalueness of bitmask elements
http://cplusplus.github.io/LWG/lwg-active.html#2692



Hubert Tong
-
d:lwg2693
LWG2693

New
constexpr for various std::complex arithmetic and value operators
http://cplusplus.github.io/LWG/lwg-active.html#2693



Oliver Rosten
-
d:lwg2694
LWG2694

Tentatively Ready
Application of LWG 436 accidentally deleted definition of "facet"
http://cplusplus.github.io/LWG/lwg-active.html#2694



Tim Song
-
d:lwg2695
LWG2695

New
"As if" unclear in [member.functions]
http://cplusplus.github.io/LWG/lwg-active.html#2695



Hubert Tong
-
d:lwg2696
LWG2696

Tentatively Ready
Interaction between make_shared and enable_shared_from_this is underspecified
http://cplusplus.github.io/LWG/lwg-active.html#2696



Joe Gottman
-
d:lwg2697
LWG2697

New
[concurr.ts] Behavior of future/shared_future unwrapping constructor when given an invalid future
http://cplusplus.github.io/LWG/lwg-active.html#2697



Tim Song
-
d:lwg2698
LWG2698

WP
Effect of assign() on iterators/pointers/references
http://cplusplus.github.io/LWG/lwg-defects.html#2698



Tim Song
-
d:lwg2699
LWG2699

Tentatively Ready
Missing restriction in [numeric.requirements]
http://cplusplus.github.io/LWG/lwg-active.html#2699



Hubert Tong
-
d:lwg27
LWG27

TC1
String::erase(range) yields wrong iterator
http://cplusplus.github.io/LWG/lwg-defects.html#27



Nathan Myers
-
d:lwg270
LWG270

CD1
Binary search requirements overly strict
http://cplusplus.github.io/LWG/lwg-defects.html#270



Matt Austern
-
d:lwg2700
LWG2700

NAD
resource_adaptor went missing
http://cplusplus.github.io/LWG/lwg-closed.html#2700



Jonathan Wakely
-
d:lwg2701
LWG2701

NAD Editorial
Unclear requirement in [memory.resource.private]
http://cplusplus.github.io/LWG/lwg-closed.html#2701



Jonathan Wakely
-
d:lwg2702
LWG2702

New
num_put::do_put(..., bool) performs ill-formed do_put call
http://cplusplus.github.io/LWG/lwg-active.html#2702



Hubert Tong
-
d:lwg2703
LWG2703

New
No provision for fill-padding when boolalpha is set
http://cplusplus.github.io/LWG/lwg-active.html#2703



Hubert Tong
-
d:lwg2704
LWG2704

WP
recursive_directory_iterator's members should require '*this is dereferenceable'
http://cplusplus.github.io/LWG/lwg-defects.html#2704



Eric Fiselier
-
d:lwg2705
LWG2705

New
Questionable precondition on Sequence containers a.assign(n, t)
http://cplusplus.github.io/LWG/lwg-active.html#2705



Kazutoshi Satoda
-
d:lwg2706
LWG2706

WP
Error reporting for recursive_directory_iterator::pop() is under-specified
http://cplusplus.github.io/LWG/lwg-defects.html#2706



Eric Fiselier
-
d:lwg2707
LWG2707

WP
path construction and assignment should have "string_type&&" overloads
http://cplusplus.github.io/LWG/lwg-defects.html#2707



Eric Fiselier
-
d:lwg2708
LWG2708

Open
recursive_directory_iterator::recursion_pending() is incorrectly specified
http://cplusplus.github.io/LWG/lwg-active.html#2708



Eric Fiselier
-
d:lwg2709
LWG2709

WP
offsetof is unnecessarily imprecise
http://cplusplus.github.io/LWG/lwg-defects.html#2709



Richard Smith
-
d:lwg271
LWG271

CD1
basic_iostream missing typedefs
http://cplusplus.github.io/LWG/lwg-defects.html#271



Martin Sebor
-
d:lwg2710
LWG2710

WP
"Effects: Equivalent to ..." doesn't count "Synchronization:" as determined semantics
http://cplusplus.github.io/LWG/lwg-defects.html#2710



Kazutoshi Satoda
-
d:lwg2711
LWG2711

WP
path is convertible from approximately everything under the sun
http://cplusplus.github.io/LWG/lwg-defects.html#2711



Tim Song
-
d:lwg2712
LWG2712

Tentatively Ready
copy_file(from, to, ...) has a number of unspecified error conditions
http://cplusplus.github.io/LWG/lwg-active.html#2712



Eric Fiselier
-
d:lwg2713
LWG2713

New
More missing allocator-extended constructors for unordered containers
http://cplusplus.github.io/LWG/lwg-active.html#2713



Billy Robert O'Neal III
-
d:lwg2714
LWG2714

New
complex stream extraction underspecified
http://cplusplus.github.io/LWG/lwg-active.html#2714



Tim Song
-
d:lwg2715
LWG2715

New
What is 'aggregate initialization syntax'?
http://cplusplus.github.io/LWG/lwg-active.html#2715



S. B. Tam
-
d:lwg2716
LWG2716

WP
Specification of shuffle and sample disallows lvalue URNGs
http://cplusplus.github.io/LWG/lwg-defects.html#2716



Tim Song
-
d:lwg2717
LWG2717

Tentatively NAD
scoped_allocator_adaptor uses forward to do move's job
http://cplusplus.github.io/LWG/lwg-active.html#2717



Billy Robert O'Neal III
-
d:lwg2718
LWG2718

WP
Parallelism bug in [algorithms.parallel.exec] p2
http://cplusplus.github.io/LWG/lwg-defects.html#2718



Jared Hoberock
-
d:lwg2719
LWG2719

WP
permissions function should not be noexcept due to narrow contract
http://cplusplus.github.io/LWG/lwg-defects.html#2719



Eric Fiselier
-
d:lwg272
LWG272

CD1
Missing parentheses around subexpression
http://cplusplus.github.io/LWG/lwg-defects.html#272



Martin Sebor
-
d:lwg2720
LWG2720

WP
permissions function incorrectly specified for symlinks
http://cplusplus.github.io/LWG/lwg-defects.html#2720



Eric Fiselier
-
d:lwg2721
LWG2721

WP
remove_all has incorrect post conditions
http://cplusplus.github.io/LWG/lwg-defects.html#2721



Eric Fiselier
-
d:lwg2722
LWG2722

Tentatively Ready
equivalent incorrectly specifies throws clause
http://cplusplus.github.io/LWG/lwg-active.html#2722



Eric Fiselier
-
d:lwg2723
LWG2723

WP
Do directory_iterator and recursive_directory_iterator become the end iterator upon error?
http://cplusplus.github.io/LWG/lwg-defects.html#2723



Eric Fiselier
-
d:lwg2724
LWG2724

WP
The protected virtual member functions of memory_resource should be private
http://cplusplus.github.io/LWG/lwg-defects.html#2724



Ville Voutilainen
-
d:lwg2725
LWG2725

WP
filesystem::exists(const path&, error_code&) error reporting
http://cplusplus.github.io/LWG/lwg-defects.html#2725



Jonathan Wakely
-
d:lwg2726
LWG2726

WP
[recursive_]directory_iterator::increment(error_code&) is underspecified
http://cplusplus.github.io/LWG/lwg-defects.html#2726



Daniel Krügler
-
d:lwg2727
LWG2727

WP
Parallel algorithms with constexpr specifier
http://cplusplus.github.io/LWG/lwg-defects.html#2727



Jonathan Wakely
-
d:lwg2728
LWG2728

WP
status(p).permissions() and symlink_status(p).permissions() are not specified
http://cplusplus.github.io/LWG/lwg-defects.html#2728



Eric Fiselier
-
d:lwg2729
LWG2729

Tentatively Ready
Missing SFINAE on std::pair::operator=
http://cplusplus.github.io/LWG/lwg-active.html#2729



Richard Smith
-
d:lwg273
LWG273

CD1
Missing ios_base qualification on members of a dependent class
http://cplusplus.github.io/LWG/lwg-defects.html#273



Martin Sebor
-
d:lwg2730
LWG2730

New
numeric_limits primary template definition
http://cplusplus.github.io/LWG/lwg-active.html#2730



Richard Smith
-
d:lwg2731
LWG2731

New
Existence of lock_guard<MutexTypes...>::mutex_type typedef unclear
http://cplusplus.github.io/LWG/lwg-active.html#2731



Eric Fiselier
-
d:lwg2732
LWG2732

Tentatively Ready
Questionable specification of path::operator/= and path::append
http://cplusplus.github.io/LWG/lwg-active.html#2732



Tim Song
-
d:lwg2733
LWG2733

Tentatively Ready
[fund.ts.v2] gcd / lcm and bool
http://cplusplus.github.io/LWG/lwg-active.html#2733



Richard Smith
-
d:lwg2734
LWG2734

New
Questionable specification in [path.concat]
http://cplusplus.github.io/LWG/lwg-active.html#2734



Tim Song
-
d:lwg2735
LWG2735

Tentatively Ready
std::abs(short), std::abs(signed char) and others should return int instead of double in order to be compatible with C++98 and C
http://cplusplus.github.io/LWG/lwg-active.html#2735



Jörn Heusipp
-
d:lwg2736
LWG2736

Tentatively Ready
nullopt_t insufficiently constrained
http://cplusplus.github.io/LWG/lwg-active.html#2736



Tim Song
-
d:lwg2737
LWG2737

New
Consider relaxing object size restrictions for single-object allocation functions
http://cplusplus.github.io/LWG/lwg-active.html#2737



Clark Nelson
-
d:lwg2738
LWG2738

Tentatively Ready
is_constructible with void types
http://cplusplus.github.io/LWG/lwg-active.html#2738



S. B. Tam
-
d:lwg2739
LWG2739

Tentatively Ready
Issue with time_point non-member subtraction with an unsigned duration
http://cplusplus.github.io/LWG/lwg-active.html#2739



Michael Winterberg
-
d:lwg274
LWG274

CD1
a missing/impossible allocator requirement
http://cplusplus.github.io/LWG/lwg-defects.html#274



Martin Sebor
-
d:lwg2740
LWG2740

Tentatively Ready
constexpr optional<T>::operator->
http://cplusplus.github.io/LWG/lwg-active.html#2740



Agustín K-ballo Bergé
-
d:lwg2741
LWG2741

New
is_partitioned requirements need updating
http://cplusplus.github.io/LWG/lwg-active.html#2741



Jonathan Wakely
-
d:lwg2742
LWG2742

Tentatively Ready
Inconsistent string interface taking string_view
http://cplusplus.github.io/LWG/lwg-active.html#2742



Richard Smith
-
d:lwg2743
LWG2743

New
p0083r3 node_handle private members missing "exposition only" comment
http://cplusplus.github.io/LWG/lwg-active.html#2743



Richard Smith
-
d:lwg2744
LWG2744

Tentatively Ready
any's in_place constructors
http://cplusplus.github.io/LWG/lwg-active.html#2744



Ville Voutilainen
-
d:lwg2745
LWG2745

Tentatively Ready
[fund.ts.v2] Implementability of LWG 2451
http://cplusplus.github.io/LWG/lwg-active.html#2745



Casey Carter
-
d:lwg2746
LWG2746

New
Inconsistency between requirements for emplace between optional and variant
http://cplusplus.github.io/LWG/lwg-active.html#2746



Richard Smith
-
d:lwg2747
LWG2747

Tentatively Ready
Possibly redundant std::move in [alg.foreach]
http://cplusplus.github.io/LWG/lwg-active.html#2747



Jonathan Wakely
-
d:lwg2748
LWG2748

Tentatively Ready
swappable traits for optionals
http://cplusplus.github.io/LWG/lwg-active.html#2748



Agustín K-ballo Bergé
-
d:lwg2749
LWG2749

Tentatively Ready
swappable traits for variants
http://cplusplus.github.io/LWG/lwg-active.html#2749



Agustín K-ballo Bergé
-
d:lwg275
LWG275

CD1
Wrong type in num_get::get() overloads
http://cplusplus.github.io/LWG/lwg-defects.html#275



Matt Austern
-
d:lwg2750
LWG2750

Tentatively Ready
[fund.ts.v2] LWG 2451 conversion constructor constraint
http://cplusplus.github.io/LWG/lwg-active.html#2750



Casey Carter
-
d:lwg2751
LWG2751

New
shared_ptr deleter not specified to observe expired weak_ptr instances
http://cplusplus.github.io/LWG/lwg-active.html#2751



Aaron Jacobs
-
d:lwg2752
LWG2752

Tentatively Ready
"Throws:" clauses of async and packaged_task are unimplementable
http://cplusplus.github.io/LWG/lwg-active.html#2752



Billy Robert O'Neal III
-
d:lwg2753
LWG2753

Tentatively Ready
Optional's constructors and assignments need constraints
http://cplusplus.github.io/LWG/lwg-active.html#2753



Casey Carter
-
d:lwg2754
LWG2754

Tentatively Ready
The in_place constructors and emplace functions added by P0032R3 don't require CopyConstructible
http://cplusplus.github.io/LWG/lwg-active.html#2754



Ville Voutilainen
-
d:lwg2755
LWG2755

Tentatively Ready
§[string.view.io] uses non-existent basic_string_view::to_string function
http://cplusplus.github.io/LWG/lwg-active.html#2755



Billy Baker
-
d:lwg2756
LWG2756

Tentatively Ready
C++ WP optional<T> should 'forward' T's implicit conversions
http://cplusplus.github.io/LWG/lwg-active.html#2756



Casey Carter
-
d:lwg2757
LWG2757

Tentatively Resolved
std::string{}.insert(3, "ABCDE", 0, 1) is ambiguous
http://cplusplus.github.io/LWG/lwg-active.html#2757



Marshall Clow
-
d:lwg2758
LWG2758

Tentatively Ready
std::string{}.assign("ABCDE", 0, 1) is ambiguous
http://cplusplus.github.io/LWG/lwg-active.html#2758



Marshall Clow
-
d:lwg2759
LWG2759

Tentatively Ready
gcd / lcm and bool for the WP
http://cplusplus.github.io/LWG/lwg-active.html#2759



Walter Brown
-
d:lwg276
LWG276

CD1
Assignable requirement for container value type overly strict
http://cplusplus.github.io/LWG/lwg-defects.html#276



Peter Dimov
-
d:lwg2760
LWG2760

Tentatively Ready
non-const basic_string::data should not invalidate iterators
http://cplusplus.github.io/LWG/lwg-active.html#2760



Billy Baker
-
d:lwg2761
LWG2761

NAD
directory_entry comparisons are members
http://cplusplus.github.io/LWG/lwg-closed.html#2761



Ville Voutilainen
-
d:lwg2762
LWG2762

LEWG
unique_ptr operator*() should be noexcept
http://cplusplus.github.io/LWG/lwg-active.html#2762



Ville Voutilainen
-
d:lwg2763
LWG2763

New
common_type_t<void, void> is undefined
http://cplusplus.github.io/LWG/lwg-active.html#2763



Tim Song
-
d:lwg2764
LWG2764

New
Are <cstddint> macros optional?
http://cplusplus.github.io/LWG/lwg-active.html#2764



Thomas Koeppe
-
d:lwg2765
LWG2765

Tentatively Ready
Did LWG 1123 go too far?
http://cplusplus.github.io/LWG/lwg-active.html#2765



Richard Smith
-
d:lwg2766
LWG2766

New
Swapping non-swappable types
http://cplusplus.github.io/LWG/lwg-active.html#2766



Agustín K-ballo Bergé
-
d:lwg2767
LWG2767

Tentatively Ready
not_fn call_wrapper can form invalid types
http://cplusplus.github.io/LWG/lwg-active.html#2767



Jonathan Wakely
-
d:lwg2768
LWG2768

Tentatively Ready
any_cast and move semantics
http://cplusplus.github.io/LWG/lwg-active.html#2768



Casey Carter
-
d:lwg2769
LWG2769

Open
Redundant const in the return type of any_cast(const any&)
http://cplusplus.github.io/LWG/lwg-active.html#2769



Casey Carter
-
d:lwg277
LWG277

NAD
Normative encouragement in allocator requirements unclear
http://cplusplus.github.io/LWG/lwg-closed.html#277



Matt Austern
-
d:lwg2770
LWG2770

Open
tuple_size<const T> specialization is not SFINAE compatible and breaks decomposition declarations
http://cplusplus.github.io/LWG/lwg-active.html#2770



Richard Smith
-
d:lwg2771
LWG2771

Tentatively Ready
Broken Effects of some basic_string::compare functions in terms of basic_string_view
http://cplusplus.github.io/LWG/lwg-active.html#2771



Daniel Krügler
-
d:lwg2772
LWG2772

New
Inconsistency in the insert(node) interface
http://cplusplus.github.io/LWG/lwg-active.html#2772



Tomasz Kamiński
-
d:lwg2773
LWG2773

Tentatively Ready
Making std::ignore constexpr
http://cplusplus.github.io/LWG/lwg-active.html#2773



Vincent Reverdy
-
d:lwg2774
LWG2774

New
std::function construction vs assignment
http://cplusplus.github.io/LWG/lwg-active.html#2774



Barry Revzin
-
d:lwg2775
LWG2775

Dup
reverse_iterator is does not compile for fancy pointers
http://cplusplus.github.io/LWG/lwg-closed.html#2775



Billy Robert O'Neal III
-
d:lwg2776
LWG2776

New
shared_ptr unique() and use_count()
http://cplusplus.github.io/LWG/lwg-active.html#2776



Hans Boehm
-
d:lwg2777
LWG2777

Tentatively Ready
basic_string_view::copy should use char_traits::copy
http://cplusplus.github.io/LWG/lwg-active.html#2777



Billy Robert O'Neal III
-
d:lwg2778
LWG2778

Tentatively Ready
basic_string_view is missing constexpr
http://cplusplus.github.io/LWG/lwg-active.html#2778



Billy Robert O'Neal III
-
d:lwg2779
LWG2779

LEWG
[networking.ts] Relax strict aliasing requirement for user-defined buffer sequence iterators
http://cplusplus.github.io/LWG/lwg-active.html#2779



Vinnie Falco
-
d:lwg278
LWG278

CD1
What does iterator validity mean?
http://cplusplus.github.io/LWG/lwg-defects.html#278



P.J. Plauger
-
d:lwg2780
LWG2780

New
basic_string_view::copy is missing constexpr
http://cplusplus.github.io/LWG/lwg-active.html#2780



Billy Robert O'Neal III
-
d:lwg2781
LWG2781

New
Contradictory requirements for std::function and std::reference_wrapper
http://cplusplus.github.io/LWG/lwg-active.html#2781



Jonathan Wakely
-
d:lwg2782
LWG2782

New
scoped_allocator_adaptor constructors must be constrained
http://cplusplus.github.io/LWG/lwg-active.html#2782



Jonathan Wakely
-
d:lwg2783
LWG2783

New
stack::emplace() and queue::emplace() should return decltype(auto)
http://cplusplus.github.io/LWG/lwg-active.html#2783



Jonathan Wakely
-
d:lwg2784
LWG2784

New
Resolution to LWG 2484 is missing "otherwise, no effects" and is hard to parse
http://cplusplus.github.io/LWG/lwg-active.html#2784



Jonathan Wakely
-
d:lwg279
LWG279

NAD
const and non-const iterators should have equivalent typedefs
http://cplusplus.github.io/LWG/lwg-closed.html#279



Steve Cleary
-
d:lwg28
LWG28

TC1
Ctype<char>is ambiguous
http://cplusplus.github.io/LWG/lwg-defects.html#28



Nathan Myers
-
d:lwg280
LWG280

CD1
Comparison of reverse_iterator to const reverse_iterator
http://cplusplus.github.io/LWG/lwg-defects.html#280



Steve Cleary
-
d:lwg281
LWG281

CD1
std::min() and max() requirements overly restrictive
http://cplusplus.github.io/LWG/lwg-defects.html#281



Martin Sebor
-
d:lwg282
LWG282

CD1
What types does numpunct grouping refer to?
http://cplusplus.github.io/LWG/lwg-defects.html#282



Howard Hinnant
-
d:lwg283
LWG283

CD1
std::replace() requirement incorrect/insufficient
http://cplusplus.github.io/LWG/lwg-defects.html#283



Martin Sebor
-
d:lwg284
LWG284

CD1
unportable example in 20.3.7, p6
http://cplusplus.github.io/LWG/lwg-defects.html#284



Martin Sebor
-
d:lwg285
LWG285

CD1
minor editorial errors in fstream ctors
http://cplusplus.github.io/LWG/lwg-defects.html#285



Martin Sebor
-
d:lwg286
LWG286

CD1
<cstdlib> requirements missing size_t typedef
http://cplusplus.github.io/LWG/lwg-defects.html#286



Judy Ward
-
d:lwg287
LWG287

NAD
conflicting ios_base fmtflags
http://cplusplus.github.io/LWG/lwg-closed.html#287



Judy Ward
-
d:lwg288
LWG288

CD1
<cerrno> requirements missing macro EILSEQ
http://cplusplus.github.io/LWG/lwg-defects.html#288



Judy Ward
-
d:lwg289
LWG289

NAD
<cmath> requirements missing C float and long double versions
http://cplusplus.github.io/LWG/lwg-closed.html#289



Judy Ward
-
d:lwg29
LWG29

TC1
Ios_base::init doesn't exist
http://cplusplus.github.io/LWG/lwg-defects.html#29



Nathan Myers
-
d:lwg290
LWG290

NAD
Requirements to for_each and its function object
http://cplusplus.github.io/LWG/lwg-closed.html#290



Angelika Langer
-
d:lwg291
LWG291

CD1
Underspecification of set algorithms
http://cplusplus.github.io/LWG/lwg-defects.html#291



Matt Austern
-
d:lwg292
LWG292

CD1
effects of a.copyfmt (a)
http://cplusplus.github.io/LWG/lwg-defects.html#292



Martin Sebor
-
d:lwg293
LWG293

NAD
Order of execution in transform algorithm
http://cplusplus.github.io/LWG/lwg-closed.html#293



Angelika Langer
-
d:lwg294
LWG294

CD1
User defined macros and standard headers
http://cplusplus.github.io/LWG/lwg-defects.html#294



James Kanze
-
d:lwg295
LWG295

CD1
Is abs defined in <cmath>?
http://cplusplus.github.io/LWG/lwg-defects.html#295



Jens Maurer
-
d:lwg296
LWG296

C++11
Missing descriptions and requirements of pair operators
http://cplusplus.github.io/LWG/lwg-defects.html#296



Martin Sebor
-
d:lwg297
LWG297

CD1
const_mem_fun_t<>::argument_type should be const T*
http://cplusplus.github.io/LWG/lwg-defects.html#297



Martin Sebor
-
d:lwg298
LWG298

CD1
::operator delete[] requirement incorrect/insufficient
http://cplusplus.github.io/LWG/lwg-defects.html#298



John A. Pedretti
-
d:lwg299
LWG299

NAD Editorial
Incorrect return types for iterator dereference
http://cplusplus.github.io/LWG/lwg-closed.html#299



John Potter
-
d:lwg3
LWG3

TC1
Atexit registration during atexit() call is not described
http://cplusplus.github.io/LWG/lwg-defects.html#3



Steve Clamage
-
d:lwg30
LWG30

TC1
Wrong header for LC_*
http://cplusplus.github.io/LWG/lwg-defects.html#30



Nathan Myers
-
d:lwg300
LWG300

CD1
list::merge() specification incomplete
http://cplusplus.github.io/LWG/lwg-defects.html#300



John Pedretti
-
d:lwg301
LWG301

CD1
basic_string template ctor effects clause omits allocator argument
http://cplusplus.github.io/LWG/lwg-defects.html#301



Martin Sebor
-
d:lwg302
LWG302

NAD
Need error indication from codecvt<>::do_length
http://cplusplus.github.io/LWG/lwg-closed.html#302



Gregory Bumgardner
-
d:lwg303
LWG303

CD1
Bitset input operator underspecified
http://cplusplus.github.io/LWG/lwg-defects.html#303



Matt Austern
-
d:lwg304
LWG304

NAD
Must *a return an lvalue when a is an input iterator?
http://cplusplus.github.io/LWG/lwg-closed.html#304



Dave Abrahams
-
d:lwg305
LWG305

CD1
Default behavior of codecvt<wchar_t, char, mbstate_t>::length()
http://cplusplus.github.io/LWG/lwg-defects.html#305



Howard Hinnant
-
d:lwg306
LWG306

CD1
offsetof macro and non-POD types
http://cplusplus.github.io/LWG/lwg-defects.html#306



Steve Clamage
-
d:lwg307
LWG307

CD1
Lack of reference typedefs in container adaptors
http://cplusplus.github.io/LWG/lwg-defects.html#307



Howard Hinnant
-
d:lwg308
LWG308

CD1
Table 82 mentions unrelated headers
http://cplusplus.github.io/LWG/lwg-defects.html#308



Martin Sebor
-
d:lwg309
LWG309

NAD
Does sentry catch exceptions?
http://cplusplus.github.io/LWG/lwg-closed.html#309



Martin Sebor
-
d:lwg31
LWG31

TC1
Immutable locale values
http://cplusplus.github.io/LWG/lwg-defects.html#31



Nathan Myers
-
d:lwg310
LWG310

CD1
Is errno a macro?
http://cplusplus.github.io/LWG/lwg-defects.html#310



Steve Clamage
-
d:lwg311
LWG311

CD1
Incorrect wording in basic_ostream class synopsis
http://cplusplus.github.io/LWG/lwg-defects.html#311



Andy Sawyer
-
d:lwg312
LWG312

CD1
Table 27 is missing headers
http://cplusplus.github.io/LWG/lwg-defects.html#312



Martin Sebor
-
d:lwg313
LWG313

NAD
set_terminate and set_unexpected question
http://cplusplus.github.io/LWG/lwg-closed.html#313



Judy Ward
-
d:lwg314
LWG314

NAD
Is the stack unwound when terminate() is called?
http://cplusplus.github.io/LWG/lwg-closed.html#314



Detlef Vollmann
-
d:lwg315
LWG315

CD1
Bad "range" in list::unique complexity
http://cplusplus.github.io/LWG/lwg-defects.html#315



Andy Sawyer
-
d:lwg316
LWG316

CD1
Vague text in Table 69
http://cplusplus.github.io/LWG/lwg-defects.html#316



Martin Sebor
-
d:lwg317
LWG317

CD1
Instantiation vs. specialization of facets
http://cplusplus.github.io/LWG/lwg-defects.html#317



Martin Sebor
-
d:lwg318
LWG318

CD1
Misleading comment in definition of numpunct_byname
http://cplusplus.github.io/LWG/lwg-defects.html#318



Martin Sebor
-
d:lwg319
LWG319

CD1
Storage allocation wording confuses "Required behavior", "Requires"
http://cplusplus.github.io/LWG/lwg-defects.html#319



Beman Dawes
-
d:lwg32
LWG32

TC1
Pbackfail description inconsistent
http://cplusplus.github.io/LWG/lwg-defects.html#32



Nathan Myers
-
d:lwg320
LWG320

CD1
list::assign overspecified
http://cplusplus.github.io/LWG/lwg-defects.html#320



Howard Hinnant
-
d:lwg321
LWG321

CD1
Typo in num_get
http://cplusplus.github.io/LWG/lwg-defects.html#321



Kevin Djang
-
d:lwg322
LWG322

CD1
iterator and const_iterator should have the same value type
http://cplusplus.github.io/LWG/lwg-defects.html#322



Matt Austern
-
d:lwg323
LWG323

NAD
abs() overloads in different headers
http://cplusplus.github.io/LWG/lwg-closed.html#323



Dave Abrahams
-
d:lwg324
LWG324

CD1
Do output iterators have value types?
http://cplusplus.github.io/LWG/lwg-defects.html#324



Dave Abrahams
-
d:lwg325
LWG325

CD1
Misleading text in moneypunct<>::do_grouping
http://cplusplus.github.io/LWG/lwg-defects.html#325



Martin Sebor
-
d:lwg326
LWG326

NAD
Missing typedef in moneypunct_byname
http://cplusplus.github.io/LWG/lwg-closed.html#326



Martin Sebor
-
d:lwg327
LWG327

CD1
Typo in time_get facet in table 52
http://cplusplus.github.io/LWG/lwg-defects.html#327



Tiki Wan
-
d:lwg328
LWG328

CD1
Bad sprintf format modifier in money_put<>::do_put()
http://cplusplus.github.io/LWG/lwg-defects.html#328



Martin Sebor
-
d:lwg329
LWG329

CD1
vector capacity, reserve and reallocation
http://cplusplus.github.io/LWG/lwg-defects.html#329



Anthony Williams
-
d:lwg33
LWG33

TC1
Codecvt<> mentions from_type
http://cplusplus.github.io/LWG/lwg-defects.html#33



Nathan Myers
-
d:lwg330
LWG330

NAD
Misleading "exposition only" value in class locale definition
http://cplusplus.github.io/LWG/lwg-closed.html#330



Martin Sebor
-
d:lwg331
LWG331

CD1
bad declaration of destructor for ios_base::failure
http://cplusplus.github.io/LWG/lwg-defects.html#331



PremAnand M. Rao
-
d:lwg332
LWG332

NAD
Consider adding increment and decrement operators to std::fpos< T >
http://cplusplus.github.io/LWG/lwg-closed.html#332



PremAnand M. Rao
-
d:lwg333
LWG333

CD1
does endl imply synchronization with the device?
http://cplusplus.github.io/LWG/lwg-defects.html#333



PremAnand M. Rao
-
d:lwg334
LWG334

CD1
map::operator[] specification forces inefficient implementation
http://cplusplus.github.io/LWG/lwg-defects.html#334



Andrea Griffini
-
d:lwg335
LWG335

CD1
minor issue with char_traits, table 37
http://cplusplus.github.io/LWG/lwg-defects.html#335



Andy Sawyer
-
d:lwg336
LWG336

CD1
Clause 17 lack of references to deprecated headers
http://cplusplus.github.io/LWG/lwg-defects.html#336



Detlef Vollmann
-
d:lwg337
LWG337

CD1
replace_copy_if's template parameter should be InputIterator
http://cplusplus.github.io/LWG/lwg-defects.html#337



Detlef Vollmann
-
d:lwg338
LWG338

CD1
is whitespace allowed between `-' and a digit?
http://cplusplus.github.io/LWG/lwg-defects.html#338



Martin Sebor
-
d:lwg339
LWG339

CD1
definition of bitmask type restricted to clause 27
http://cplusplus.github.io/LWG/lwg-defects.html#339



Martin Sebor
-
d:lwg34
LWG34

TC1
True/falsename() not in ctype<>
http://cplusplus.github.io/LWG/lwg-defects.html#34



Nathan Myers
-
d:lwg340
LWG340

CD1
interpretation of has_facet<Facet>(loc)
http://cplusplus.github.io/LWG/lwg-defects.html#340



Martin Sebor
-
d:lwg341
LWG341

CD1
Vector reallocation and swap
http://cplusplus.github.io/LWG/lwg-defects.html#341



Anthony Williams
-
d:lwg342
LWG342

NAD
seek and eofbit
http://cplusplus.github.io/LWG/lwg-closed.html#342



Howard Hinnant
-
d:lwg343
LWG343

Resolved
Unspecified library header dependencies
http://cplusplus.github.io/LWG/lwg-defects.html#343



Martin Sebor
-
d:lwg344
LWG344

NAD
grouping + showbase
http://cplusplus.github.io/LWG/lwg-closed.html#344



Howard Hinnant
-
d:lwg345
LWG345

CD1
type tm in <cwchar>
http://cplusplus.github.io/LWG/lwg-defects.html#345



Clark Nelson
-
d:lwg346
LWG346

CD1
Some iterator member functions should be const
http://cplusplus.github.io/LWG/lwg-defects.html#346



Jeremy Siek
-
d:lwg347
LWG347

CD1
locale::category and bitmask requirements
http://cplusplus.github.io/LWG/lwg-defects.html#347



P.J. Plauger, Nathan Myers
-
d:lwg348
LWG348

Dup
Minor issue with std::pair operator<
http://cplusplus.github.io/LWG/lwg-closed.html#348



Andy Sawyer
-
d:lwg349
LWG349

CD1
Minor typographical error in ostream_iterator
http://cplusplus.github.io/LWG/lwg-defects.html#349



Andy Sawyer
-
d:lwg35
LWG35

TC1
No manipulator unitbuf in synopsis
http://cplusplus.github.io/LWG/lwg-defects.html#35



Nathan Myers
-
d:lwg350
LWG350

Dup
allocator<>::address
http://cplusplus.github.io/LWG/lwg-closed.html#350



Nathan Myers
-
d:lwg351
LWG351

NAD Editorial
unary_negate and binary_negate: struct or class?
http://cplusplus.github.io/LWG/lwg-closed.html#351



Dale Riley
-
d:lwg352
LWG352

CD1
missing fpos requirements
http://cplusplus.github.io/LWG/lwg-defects.html#352



Martin Sebor
-
d:lwg353
LWG353

Resolved
std::pair missing template assignment
http://cplusplus.github.io/LWG/lwg-defects.html#353



Martin Sebor
-
d:lwg354
LWG354

CD1
Associative container lower/upper bound requirements
http://cplusplus.github.io/LWG/lwg-defects.html#354



Hans Aberg
-
d:lwg355
LWG355

CD1
Operational semantics for a.back()
http://cplusplus.github.io/LWG/lwg-defects.html#355



Yaroslav Mironov
-
d:lwg356
LWG356

NAD
Meaning of ctype_base::mask enumerators
http://cplusplus.github.io/LWG/lwg-closed.html#356



Matt Austern
-
d:lwg357
LWG357

NAD Editorial
<cmath> float functions cannot return HUGE_VAL
http://cplusplus.github.io/LWG/lwg-closed.html#357



Ray Lischner
-
d:lwg358
LWG358

CD1
interpreting thousands_sep after a decimal_point
http://cplusplus.github.io/LWG/lwg-defects.html#358



Martin Sebor
-
d:lwg359
LWG359

CD1
num_put<>::do_put (..., bool) undocumented
http://cplusplus.github.io/LWG/lwg-defects.html#359



Martin Sebor
-
d:lwg36
LWG36

TC1
Iword & pword storage lifetime omitted
http://cplusplus.github.io/LWG/lwg-defects.html#36



Nathan Myers
-
d:lwg360
LWG360

CD1
locale mandates inefficient implementation
http://cplusplus.github.io/LWG/lwg-defects.html#360



Martin Sebor
-
d:lwg361
LWG361

NAD
num_get<>::do_get (..., void*&) checks grouping
http://cplusplus.github.io/LWG/lwg-closed.html#361



Martin Sebor
-
d:lwg362
LWG362

CD1
bind1st/bind2nd type safety
http://cplusplus.github.io/LWG/lwg-defects.html#362



Andrew Demkin
-
d:lwg363
LWG363

CD1
Missing exception specification in 27.4.2.1.1
http://cplusplus.github.io/LWG/lwg-defects.html#363



Walter Brown and Marc Paterno
-
d:lwg364
LWG364

CD1
Inconsistent wording in 27.5.2.4.2
http://cplusplus.github.io/LWG/lwg-defects.html#364



Walter Brown, Marc Paterno
-
d:lwg365
LWG365

CD1
Lack of const-qualification in clause 27
http://cplusplus.github.io/LWG/lwg-defects.html#365



Walter Brown, Marc Paterno
-
d:lwg366
LWG366

NAD
Excessive const-qualification
http://cplusplus.github.io/LWG/lwg-closed.html#366



Walter Brown, Marc Paterno
-
d:lwg367
LWG367

NAD
remove_copy/remove_copy_if and Input Iterators
http://cplusplus.github.io/LWG/lwg-closed.html#367



Anthony Williams
-
d:lwg368
LWG368

NAD Editorial
basic_string::replace has two "Throws" paragraphs
http://cplusplus.github.io/LWG/lwg-closed.html#368



Beman Dawes
-
d:lwg369
LWG369

CD1
io stream objects and static ctors
http://cplusplus.github.io/LWG/lwg-defects.html#369



Ruslan Abdikeev
-
d:lwg37
LWG37

TC1
Leftover "global" reference
http://cplusplus.github.io/LWG/lwg-defects.html#37



Nathan Myers
-
d:lwg370
LWG370

CD1
Minor error in basic_istream::get
http://cplusplus.github.io/LWG/lwg-defects.html#370



Ray Lischner
-
d:lwg371
LWG371

CD1
Stability of multiset and multimap member functions
http://cplusplus.github.io/LWG/lwg-defects.html#371



Frank Compagner
-
d:lwg372
LWG372

NAD
Inconsistent description of stdlib exceptions
http://cplusplus.github.io/LWG/lwg-closed.html#372



Randy Maddox
-
d:lwg373
LWG373

CD1
Are basic_istream and basic_ostream to use (exceptions()&badbit) != 0 ?
http://cplusplus.github.io/LWG/lwg-defects.html#373



Keith Baker
-
d:lwg374
LWG374

NAD
moneypunct::frac_digits returns int not unsigned
http://cplusplus.github.io/LWG/lwg-closed.html#374



Ray Lischner
-
d:lwg375
LWG375

CD1
basic_ios should be ios_base in 27.7.1.3
http://cplusplus.github.io/LWG/lwg-defects.html#375



Ray Lischner
-
d:lwg376
LWG376

CD1
basic_streambuf semantics
http://cplusplus.github.io/LWG/lwg-defects.html#376



Ray Lischner
-
d:lwg377
LWG377

NAD
basic_string::insert and length_error
http://cplusplus.github.io/LWG/lwg-closed.html#377



Ray Lischner
-
d:lwg378
LWG378

Dup
locale immutability and locale::operator=()
http://cplusplus.github.io/LWG/lwg-closed.html#378



Martin Sebor
-
d:lwg379
LWG379

CD1
nonsensical ctype::do_widen() requirement
http://cplusplus.github.io/LWG/lwg-defects.html#379



Martin Sebor
-
d:lwg38
LWG38

TC1
Facet definition incomplete
http://cplusplus.github.io/LWG/lwg-defects.html#38



Nathan Myers
-
d:lwg380
LWG380

CD1
typos in codecvt tables 53 and 54
http://cplusplus.github.io/LWG/lwg-defects.html#380



Martin Sebor
-
d:lwg381
LWG381

CD1
detection of invalid mbstate_t in codecvt
http://cplusplus.github.io/LWG/lwg-defects.html#381



Martin Sebor
-
d:lwg382
LWG382

NAD
codecvt do_in/out result
http://cplusplus.github.io/LWG/lwg-closed.html#382



Martin Sebor
-
d:lwg383
LWG383

CD1
Bidirectional iterator assertion typo
http://cplusplus.github.io/LWG/lwg-defects.html#383



ysapir (submitted via comp.std.c++)
-
d:lwg384
LWG384

CD1
equal_range has unimplementable runtime complexity
http://cplusplus.github.io/LWG/lwg-defects.html#384



Hans Bos
-
d:lwg385
LWG385

NAD
Does call by value imply the CopyConstructible requirement?
http://cplusplus.github.io/LWG/lwg-closed.html#385



Matt Austern
-
d:lwg386
LWG386

CD1
Reverse iterator's operator[] has impossible return type
http://cplusplus.github.io/LWG/lwg-defects.html#386



Matt Austern
-
d:lwg387
LWG387

CD1
std::complex over-encapsulated
http://cplusplus.github.io/LWG/lwg-defects.html#387



Gabriel Dos Reis
-
d:lwg388
LWG388

NAD
Use of complex as a key in associative containers
http://cplusplus.github.io/LWG/lwg-closed.html#388



Gabriel Dos Reis
-
d:lwg389
LWG389

CD1
Const overload of valarray::operator[] returns by value
http://cplusplus.github.io/LWG/lwg-defects.html#389



Gabriel Dos Reis
-
d:lwg39
LWG39

TC1
istreambuf_iterator<>::operator++(int) definition garbled
http://cplusplus.github.io/LWG/lwg-defects.html#39



Nathan Myers
-
d:lwg390
LWG390

NAD Editorial
CopyConstructible requirements too strict
http://cplusplus.github.io/LWG/lwg-closed.html#390



Doug Gregor
-
d:lwg391
LWG391

CD1
non-member functions specified as const
http://cplusplus.github.io/LWG/lwg-defects.html#391



James Kanze
-
d:lwg392
LWG392

NAD
'equivalence' for input iterators
http://cplusplus.github.io/LWG/lwg-closed.html#392



Corwin Joy
-
d:lwg393
LWG393

NAD Editorial
do_in/do_out operation on state unclear
http://cplusplus.github.io/LWG/lwg-closed.html#393



Alberto Barbati
-
d:lwg394
LWG394

NAD
behavior of formatted output on failure
http://cplusplus.github.io/LWG/lwg-closed.html#394



Martin Sebor
-
d:lwg395
LWG395

CD1
inconsistencies in the definitions of rand() and random_shuffle()
http://cplusplus.github.io/LWG/lwg-defects.html#395



James Kanze
-
d:lwg396
LWG396

CD1
what are characters zero and one
http://cplusplus.github.io/LWG/lwg-defects.html#396



Martin Sebor
-
d:lwg397
LWG397

NAD Editorial
ostream::sentry dtor throws exceptions
http://cplusplus.github.io/LWG/lwg-closed.html#397



Martin Sebor
-
d:lwg398
LWG398

NAD
effects of end-of-file on unformatted input functions
http://cplusplus.github.io/LWG/lwg-closed.html#398



Martin Sebor
-
d:lwg399
LWG399

NAD
volations of unformatted input function requirements
http://cplusplus.github.io/LWG/lwg-closed.html#399



Martin Sebor
-
d:lwg4
LWG4

NAD
basic_string size_type and difference_type should be implementation defined
http://cplusplus.github.io/LWG/lwg-closed.html#4



Beman Dawes
-
d:lwg40
LWG40

TC1
Meaningless normative paragraph in examples
http://cplusplus.github.io/LWG/lwg-defects.html#40



Nathan Myers
-
d:lwg400
LWG400

CD1
redundant type cast in lib.allocator.members
http://cplusplus.github.io/LWG/lwg-defects.html#400



Markus Mauhart
-
d:lwg401
LWG401

CD1
incorrect type casts in table 32 in lib.allocator.requirements
http://cplusplus.github.io/LWG/lwg-defects.html#401



Markus Mauhart
-
d:lwg402
LWG402

CD1
wrong new expression in [some_]allocator::construct
http://cplusplus.github.io/LWG/lwg-defects.html#402



Markus Mauhart
-
d:lwg403
LWG403

CD1
basic_string::swap should not throw exceptions
http://cplusplus.github.io/LWG/lwg-defects.html#403



Beman Dawes
-
d:lwg404
LWG404

CD1
May a replacement allocation function be declared inline?
http://cplusplus.github.io/LWG/lwg-defects.html#404



Matt Austern
-
d:lwg405
LWG405

CD1
qsort and POD
http://cplusplus.github.io/LWG/lwg-defects.html#405



Ray Lischner
-
d:lwg406
LWG406

CD1
vector::insert(s) exception safety
http://cplusplus.github.io/LWG/lwg-defects.html#406



Dave Abrahams
-
d:lwg407
LWG407

CD1
Can singular iterators be destroyed?
http://cplusplus.github.io/LWG/lwg-defects.html#407



Nathan Myers
-
d:lwg408
LWG408

NAD Editorial
Is vector<reverse_iterator<char*> > forbidden?
http://cplusplus.github.io/LWG/lwg-closed.html#408



Nathan Myers
-
d:lwg409
LWG409

CD1
Closing an fstream should clear error state
http://cplusplus.github.io/LWG/lwg-defects.html#409



Nathan Myers
-
d:lwg41
LWG41

TC1
Ios_base needs clear(), exceptions()
http://cplusplus.github.io/LWG/lwg-defects.html#41



Nathan Myers
-
d:lwg410
LWG410

CD1
Missing semantics for stack and queue comparison operators
http://cplusplus.github.io/LWG/lwg-defects.html#410



Hans Bos
-
d:lwg411
LWG411

CD1
Wrong names of set member functions
http://cplusplus.github.io/LWG/lwg-defects.html#411



Daniel Frey
-
d:lwg412
LWG412

CD1
Typo in 27.4.4.3
http://cplusplus.github.io/LWG/lwg-defects.html#412



Martin Sebor
-
d:lwg413
LWG413

CD1
Proposed resolution to LDR#64 still wrong
http://cplusplus.github.io/LWG/lwg-defects.html#413



Bo Persson
-
d:lwg414
LWG414

CD1
Which iterators are invalidated by v.erase()?
http://cplusplus.github.io/LWG/lwg-defects.html#414



Matt Austern
-
d:lwg415
LWG415

CD1
behavior of std::ws
http://cplusplus.github.io/LWG/lwg-defects.html#415



Martin Sebor
-
d:lwg416
LWG416

CD1
definitions of XXX_MIN and XXX_MAX macros in climits
http://cplusplus.github.io/LWG/lwg-defects.html#416



Martin Sebor
-
d:lwg417
LWG417

NAD
what does ctype::do_widen() return on failure
http://cplusplus.github.io/LWG/lwg-closed.html#417



Martin Sebor
-
d:lwg418
LWG418

NAD
exceptions thrown during iostream cleanup
http://cplusplus.github.io/LWG/lwg-closed.html#418



Martin Sebor
-
d:lwg419
LWG419

C++11
istream extractors not setting failbit if eofbit is already set
http://cplusplus.github.io/LWG/lwg-defects.html#419



Martin Sebor
-
d:lwg42
LWG42

TC1
String ctors specify wrong default allocator
http://cplusplus.github.io/LWG/lwg-defects.html#42



Nathan Myers
-
d:lwg420
LWG420

CD1
is std::FILE a complete type?
http://cplusplus.github.io/LWG/lwg-defects.html#420



Martin Sebor
-
d:lwg421
LWG421

NAD
is basic_streambuf copy-constructible?
http://cplusplus.github.io/LWG/lwg-closed.html#421



Martin Sebor
-
d:lwg422
LWG422

CD1
explicit specializations of member functions of class templates
http://cplusplus.github.io/LWG/lwg-defects.html#422



Martin Sebor
-
d:lwg423
LWG423

LEWG
effects of negative streamsize in iostreams
http://cplusplus.github.io/LWG/lwg-active.html#423



Martin Sebor
-
d:lwg424
LWG424

NAD Editorial
normative notes
http://cplusplus.github.io/LWG/lwg-closed.html#424



Martin Sebor
-
d:lwg425
LWG425

CD1
return value of std::get_temporary_buffer
http://cplusplus.github.io/LWG/lwg-defects.html#425



Martin Sebor
-
d:lwg426
LWG426

CD1
search_n(), fill_n(), and generate_n() with negative n
http://cplusplus.github.io/LWG/lwg-defects.html#426



Martin Sebor
-
d:lwg427
LWG427

C++11
Stage 2 and rationale of DR 221
http://cplusplus.github.io/LWG/lwg-defects.html#427



Martin Sebor
-
d:lwg428
LWG428

CD1
string::erase(iterator) validity
http://cplusplus.github.io/LWG/lwg-defects.html#428



Martin Sebor
-
d:lwg429
LWG429

Dup
typo in basic_ios::clear(iostate)
http://cplusplus.github.io/LWG/lwg-closed.html#429



Martin Sebor
-
d:lwg43
LWG43

Dup
Locale table correction
http://cplusplus.github.io/LWG/lwg-closed.html#43



Brendan Kehoe
-
d:lwg430
LWG430

C++11
valarray subset operations
http://cplusplus.github.io/LWG/lwg-defects.html#430



Martin Sebor
-
d:lwg431
LWG431

Resolved
Swapping containers with unequal allocators
http://cplusplus.github.io/LWG/lwg-defects.html#431



Matt Austern
-
d:lwg432
LWG432

CD1
stringbuf::overflow() makes only one write position available
http://cplusplus.github.io/LWG/lwg-defects.html#432



Christian W Brock
-
d:lwg433
LWG433

NAD
Contradiction in specification of unexpected()
http://cplusplus.github.io/LWG/lwg-closed.html#433



Vyatcheslav Sysoltsev
-
d:lwg434
LWG434

CD1
bitset::to_string() hard to use
http://cplusplus.github.io/LWG/lwg-defects.html#434



Martin Sebor
-
d:lwg435
LWG435

CD1
bug in DR 25
http://cplusplus.github.io/LWG/lwg-defects.html#435



Martin Sebor
-
d:lwg436
LWG436

CD1
are cv-qualified facet types valid facets?
http://cplusplus.github.io/LWG/lwg-defects.html#436



Martin Sebor
-
d:lwg437
LWG437

NAD
Formatted output of function pointers is confusing
http://cplusplus.github.io/LWG/lwg-closed.html#437



Ivan Godard
-
d:lwg438
LWG438

CD1
Ambiguity in the "do the right thing" clause
http://cplusplus.github.io/LWG/lwg-defects.html#438



Howard Hinnant
-
d:lwg439
LWG439

NAD
Should facets be copyable?
http://cplusplus.github.io/LWG/lwg-closed.html#439



Matt Austern
-
d:lwg44
LWG44

CD1
Iostreams use operator== on int_type values
http://cplusplus.github.io/LWG/lwg-defects.html#44



Nathan Myers
-
d:lwg440
LWG440

NAD
Should std::complex use unqualified transcendentals?
http://cplusplus.github.io/LWG/lwg-closed.html#440



Matt Austern
-
d:lwg441
LWG441

CD1
Is fpos::state const?
http://cplusplus.github.io/LWG/lwg-defects.html#441



Vincent Leloup
-
d:lwg442
LWG442

CD1
sentry::operator bool() inconsistent signature
http://cplusplus.github.io/LWG/lwg-defects.html#442



Vincent Leloup
-
d:lwg443
LWG443

CD1
filebuf::close() inconsistent use of EOF
http://cplusplus.github.io/LWG/lwg-defects.html#443



Vincent Leloup
-
d:lwg444
LWG444

CD1
Bad use of casts in fstream
http://cplusplus.github.io/LWG/lwg-defects.html#444



Vincent Leloup
-
d:lwg445
LWG445

CD1
iterator_traits::reference unspecified for some iterator categories
http://cplusplus.github.io/LWG/lwg-defects.html#445



Dave Abrahams
-
d:lwg446
LWG446

NAD Editorial
Iterator equality between different containers
http://cplusplus.github.io/LWG/lwg-closed.html#446



Andy Koenig
-
d:lwg447
LWG447

Dup
Wrong template argument for time facets
http://cplusplus.github.io/LWG/lwg-closed.html#447



Pete Becker
-
d:lwg448
LWG448

CD1
Random Access Iterators over abstract classes
http://cplusplus.github.io/LWG/lwg-defects.html#448



Dave Abrahams
-
d:lwg449
LWG449

CD1
Library Issue 306 Goes Too Far
http://cplusplus.github.io/LWG/lwg-defects.html#449



Pete Becker
-
d:lwg45
LWG45

NAD
Stringstreams read/write pointers initial position unclear
http://cplusplus.github.io/LWG/lwg-closed.html#45



Matthias Mueller
-
d:lwg450
LWG450

Dup
set::find is inconsistent with associative container requirements
http://cplusplus.github.io/LWG/lwg-closed.html#450



Bill Plauger
-
d:lwg451
LWG451

Dup
Associative erase should return an iterator
http://cplusplus.github.io/LWG/lwg-closed.html#451



Bill Plauger
-
d:lwg452
LWG452

NAD
locale::combine should be permitted to generate a named locale
http://cplusplus.github.io/LWG/lwg-closed.html#452



Bill Plauger
-
d:lwg453
LWG453

CD1
basic_stringbuf::seekoff need not always fail for an empty stream
http://cplusplus.github.io/LWG/lwg-defects.html#453



Bill Plauger
-
d:lwg454
LWG454

NAD
basic_filebuf::open should accept wchar_t names
http://cplusplus.github.io/LWG/lwg-closed.html#454



Bill Plauger
-
d:lwg455
LWG455

CD1
cerr::tie() and wcerr::tie() are overspecified
http://cplusplus.github.io/LWG/lwg-defects.html#455



Bill Plauger
-
d:lwg456
LWG456

CD1
Traditional C header files are overspecified
http://cplusplus.github.io/LWG/lwg-defects.html#456



Bill Plauger
-
d:lwg457
LWG457

CD1
bitset constructor: incorrect number of initialized bits
http://cplusplus.github.io/LWG/lwg-defects.html#457



Dag Henriksson
-
d:lwg458
LWG458

NAD
24.1.5 contains unintended limitation for operator-
http://cplusplus.github.io/LWG/lwg-closed.html#458



Daniel Frey
-
d:lwg459
LWG459

NAD
Requirement for widening in stage 2 is overspecification
http://cplusplus.github.io/LWG/lwg-closed.html#459



Martin Sebor
-
d:lwg46
LWG46

TC1
Minor Annex D errors
http://cplusplus.github.io/LWG/lwg-defects.html#46



Brendan Kehoe
-
d:lwg460
LWG460

CD1
Default modes missing from basic_fstream member specifications
http://cplusplus.github.io/LWG/lwg-defects.html#460



Ben Hutchings
-
d:lwg461
LWG461

CD1
time_get hard or impossible to implement
http://cplusplus.github.io/LWG/lwg-defects.html#461



Bill Plauger
-
d:lwg462
LWG462

NAD
Destroying objects with static storage duration
http://cplusplus.github.io/LWG/lwg-closed.html#462



Bill Plauger
-
d:lwg463
LWG463

NAD
auto_ptr usability issues
http://cplusplus.github.io/LWG/lwg-closed.html#463



Rani Sharoni
-
d:lwg464
LWG464

CD1
Suggestion for new member functions in standard containers
http://cplusplus.github.io/LWG/lwg-defects.html#464



Thorsten Ottosen
-
d:lwg465
LWG465

CD1
Contents of <ciso646>
http://cplusplus.github.io/LWG/lwg-defects.html#465



Steve Clamage
-
d:lwg466
LWG466

NAD
basic_string ctor should prevent null pointer error
http://cplusplus.github.io/LWG/lwg-closed.html#466



Daniel Frey
-
d:lwg467
LWG467

CD1
char_traits::lt(), compare(), and memcmp()
http://cplusplus.github.io/LWG/lwg-defects.html#467



Martin Sebor
-
d:lwg468
LWG468

CD1
unexpected consequences of ios_base::operator void*()
http://cplusplus.github.io/LWG/lwg-defects.html#468



Martin Sebor
-
d:lwg469
LWG469

CD1
vector<bool> ill-formed relational operators
http://cplusplus.github.io/LWG/lwg-defects.html#469



Martin Sebor
-
d:lwg47
LWG47

TC1
Imbue() and getloc() Returns clauses swapped
http://cplusplus.github.io/LWG/lwg-defects.html#47



Matt Austern
-
d:lwg470
LWG470

NAD
accessing containers from their elements' special functions
http://cplusplus.github.io/LWG/lwg-closed.html#470



Martin Sebor
-
d:lwg471
LWG471

C++11
result of what() implementation-defined
http://cplusplus.github.io/LWG/lwg-defects.html#471



Martin Sebor
-
d:lwg472
LWG472

Dup
Missing "Returns" clause in std::equal_range
http://cplusplus.github.io/LWG/lwg-closed.html#472



Prateek R Karandikar
-
d:lwg473
LWG473

C++11
underspecified ctype calls
http://cplusplus.github.io/LWG/lwg-defects.html#473



Martin Sebor
-
d:lwg474
LWG474

CD1
confusing Footnote 297
http://cplusplus.github.io/LWG/lwg-defects.html#474



Martin Sebor
-
d:lwg475
LWG475

CD1
May the function object passed to for_each modify the elements of the iterated sequence?
http://cplusplus.github.io/LWG/lwg-defects.html#475



Stephan T. Lavavej, Jaakko Jarvi
-
d:lwg476
LWG476

NAD
Forward Iterator implied mutability
http://cplusplus.github.io/LWG/lwg-closed.html#476



Dave Abrahams
-
d:lwg477
LWG477

Dup
Operator-> for const forward iterators
http://cplusplus.github.io/LWG/lwg-closed.html#477



Dave Abrahams
-
d:lwg478
LWG478

CD1
Should forward iterator requirements table have a line for r->m?
http://cplusplus.github.io/LWG/lwg-defects.html#478



Dave Abrahams
-
d:lwg479
LWG479

Dup
Container requirements and placement new
http://cplusplus.github.io/LWG/lwg-closed.html#479



Herb Sutter
-
d:lwg48
LWG48

TC1
Use of non-existent exception constructor
http://cplusplus.github.io/LWG/lwg-defects.html#48



Matt Austern
-
d:lwg480
LWG480

NAD
unary_function and binary_function should have protected nonvirtual destructors
http://cplusplus.github.io/LWG/lwg-closed.html#480



Joe Gottman
-
d:lwg481
LWG481

NAD
unique's effects on the range [result, last)
http://cplusplus.github.io/LWG/lwg-closed.html#481



Andrew Koenig
-
d:lwg482
LWG482

Resolved
Swapping pairs
http://cplusplus.github.io/LWG/lwg-defects.html#482



Andrew Koenig
-
d:lwg483
LWG483

Dup
Heterogeneous equality and EqualityComparable
http://cplusplus.github.io/LWG/lwg-closed.html#483



Peter Dimov
-
d:lwg484
LWG484

LEWG
Convertible to T
http://cplusplus.github.io/LWG/lwg-active.html#484



Chris Jefferson
-
d:lwg485
LWG485

Resolved
output iterator insufficiently constrained
http://cplusplus.github.io/LWG/lwg-defects.html#485



Chris Jefferson
-
d:lwg486
LWG486

Dup
min/max CopyConstructible requirement is too strict
http://cplusplus.github.io/LWG/lwg-closed.html#486



Dave Abrahams
-
d:lwg487
LWG487

NAD
Allocator::construct is too limiting
http://cplusplus.github.io/LWG/lwg-closed.html#487



Dhruv Matani
-
d:lwg488
LWG488

CD1
rotate throws away useful information
http://cplusplus.github.io/LWG/lwg-defects.html#488



Howard Hinnant
-
d:lwg489
LWG489

NAD
std::remove / std::remove_if wrongly specified
http://cplusplus.github.io/LWG/lwg-closed.html#489



Thomas Mang
-
d:lwg49
LWG49

CD1
Underspecification of ios_base::sync_with_stdio
http://cplusplus.github.io/LWG/lwg-defects.html#49



Matt Austern
-
d:lwg490
LWG490

NAD
std::unique wrongly specified
http://cplusplus.github.io/LWG/lwg-closed.html#490



Thomas Mang
-
d:lwg491
LWG491

NAD
std::list<>::unique incorrectly specified
http://cplusplus.github.io/LWG/lwg-closed.html#491



Thomas Mang
-
d:lwg492
LWG492

NAD
Invalid iterator arithmetic expressions
http://cplusplus.github.io/LWG/lwg-closed.html#492



Thomas Mang
-
d:lwg493
LWG493

NAD
Undefined Expression in Input Iterator Note Title
http://cplusplus.github.io/LWG/lwg-closed.html#493



Chris Jefferson
-
d:lwg494
LWG494

NAD
Wrong runtime complexity for associative container's insert and delete
http://cplusplus.github.io/LWG/lwg-closed.html#494



Hans B os
-
d:lwg495
LWG495

CD1
Clause 22 template parameter requirements
http://cplusplus.github.io/LWG/lwg-defects.html#495



Beman Dawes
-
d:lwg496
LWG496

CD1
Illegal use of "T" in vector<bool>
http://cplusplus.github.io/LWG/lwg-defects.html#496



richard@ex-parrot.com
-
d:lwg497
LWG497

CD1
meaning of numeric_limits::traps for floating point types
http://cplusplus.github.io/LWG/lwg-defects.html#497



Martin Sebor
-
d:lwg498
LWG498

C++11
Requirements for partition() and stable_partition() too strong
http://cplusplus.github.io/LWG/lwg-defects.html#498



Sean Parent, Joe Gottman
-
d:lwg499
LWG499

NAD Editorial
Std. doesn't seem to require stable_sort() to be stable!
http://cplusplus.github.io/LWG/lwg-closed.html#499



Prateek Karandikar
-
d:lwg5
LWG5

TC1
String::compare specification questionable
http://cplusplus.github.io/LWG/lwg-defects.html#5



Jack Reeves
-
d:lwg50
LWG50

TC1
Copy constructor and assignment operator of ios_base
http://cplusplus.github.io/LWG/lwg-defects.html#50



Matt Austern
-
d:lwg500
LWG500

NAD
do_length cannot be implemented correctly
http://cplusplus.github.io/LWG/lwg-closed.html#500



Krzysztof Żelechowski
-
d:lwg501
LWG501

NAD
Proposal: strengthen guarantees of lib.comparisons
http://cplusplus.github.io/LWG/lwg-closed.html#501



Me <anti_spam_email2003@yahoo.com>
-
d:lwg502
LWG502

NAD
Proposition: Clarification of the interaction between a facet and an iterator
http://cplusplus.github.io/LWG/lwg-closed.html#502



Christopher Conrade Zseleghovski
-
d:lwg503
LWG503

NAD
more on locales
http://cplusplus.github.io/LWG/lwg-closed.html#503



P.J. Plauger
-
d:lwg504
LWG504

NAD Editorial
Integer types in pseudo-random number engine requirements
http://cplusplus.github.io/LWG/lwg-closed.html#504



Walter Brown
-
d:lwg505
LWG505

CD1
Result_type in random distribution requirements
http://cplusplus.github.io/LWG/lwg-defects.html#505



Walter Brown
-
d:lwg506
LWG506

NAD
Requirements of Distribution parameter for variate_generator
http://cplusplus.github.io/LWG/lwg-closed.html#506



Walter Brown
-
d:lwg507
LWG507

CD1
Missing requirement for variate_generator::operator()
http://cplusplus.github.io/LWG/lwg-defects.html#507



Walter Brown
-
d:lwg508
LWG508

CD1
Bad parameters for ranlux64_base_01
http://cplusplus.github.io/LWG/lwg-defects.html#508



Walter Brown
-
d:lwg509
LWG509

NAD
Uniform_int template parameters
http://cplusplus.github.io/LWG/lwg-closed.html#509



Walter Brown
-
d:lwg51
LWG51

TC1
Requirement to not invalidate iterators missing
http://cplusplus.github.io/LWG/lwg-defects.html#51



David Vandevoorde
-
d:lwg510
LWG510

NAD
Input_type for bernoulli_distribution
http://cplusplus.github.io/LWG/lwg-closed.html#510



Walter Brown
-
d:lwg511
LWG511

NAD
Input_type for binomial_distribution
http://cplusplus.github.io/LWG/lwg-closed.html#511



Walter Brown
-
d:lwg512
LWG512

NAD Editorial
Seeding subtract_with_carry_01 from a single unsigned long
http://cplusplus.github.io/LWG/lwg-closed.html#512



Walter Brown
-
d:lwg513
LWG513

NAD Editorial
Size of state for subtract_with_carry_01
http://cplusplus.github.io/LWG/lwg-closed.html#513



Walter Brown
-
d:lwg514
LWG514

NAD Editorial
Size of state for subtract_with_carry
http://cplusplus.github.io/LWG/lwg-closed.html#514



Walter Brown
-
d:lwg515
LWG515

NAD
Random number engine traits
http://cplusplus.github.io/LWG/lwg-closed.html#515



Walter Brown
-
d:lwg516
LWG516

NAD Editorial
Seeding subtract_with_carry_01 using a generator
http://cplusplus.github.io/LWG/lwg-closed.html#516



Walter Brown
-
d:lwg517
LWG517

NAD
Should include name in external representation
http://cplusplus.github.io/LWG/lwg-closed.html#517



Walter Brown
-
d:lwg518
LWG518

CD1
Are insert and erase stable for unordered_multiset and unordered_multimap?
http://cplusplus.github.io/LWG/lwg-defects.html#518



Matt Austern
-
d:lwg519
LWG519

CD1
Data() undocumented
http://cplusplus.github.io/LWG/lwg-defects.html#519



Pete Becker
-
d:lwg52
LWG52

TC1
Small I/O problems
http://cplusplus.github.io/LWG/lwg-defects.html#52



Matt Austern
-
d:lwg520
LWG520

CD1
Result_of and pointers to data members
http://cplusplus.github.io/LWG/lwg-defects.html#520



Pete Becker
-
d:lwg521
LWG521

CD1
Garbled requirements for argument_type in reference_wrapper
http://cplusplus.github.io/LWG/lwg-defects.html#521



Pete Becker
-
d:lwg522
LWG522

CD1
Tuple doesn't define swap
http://cplusplus.github.io/LWG/lwg-defects.html#522



Andy Koenig
-
d:lwg523
LWG523

LEWG
regex case-insensitive character ranges are unimplementable as specified
http://cplusplus.github.io/LWG/lwg-active.html#523



Eric Niebler
-
d:lwg524
LWG524

CD1
regex named character classes and case-insensitivity don't mix
http://cplusplus.github.io/LWG/lwg-defects.html#524



Eric Niebler
-
d:lwg525
LWG525

Resolved
type traits definitions not clear
http://cplusplus.github.io/LWG/lwg-defects.html#525



Robert Klarer
-
d:lwg526
LWG526

NAD
Is it undefined if a function in the standard changes in parameters?
http://cplusplus.github.io/LWG/lwg-closed.html#526



Chris Jefferson
-
d:lwg527
LWG527

CD1
tr1::bind has lost its Throws clause
http://cplusplus.github.io/LWG/lwg-defects.html#527



Peter Dimov
-
d:lwg528
LWG528

NAD
const_iterator iterator issue when they are the same type
http://cplusplus.github.io/LWG/lwg-closed.html#528



Paolo Carlini
-
d:lwg529
LWG529

NAD Editorial
The standard encourages redundant and confusing preconditions
http://cplusplus.github.io/LWG/lwg-closed.html#529



David Abrahams
-
d:lwg53
LWG53

TC1
Basic_ios destructor unspecified
http://cplusplus.github.io/LWG/lwg-defects.html#53



Matt Austern
-
d:lwg530
LWG530

CD1
Must elements of a string be contiguous?
http://cplusplus.github.io/LWG/lwg-defects.html#530



Matt Austern
-
d:lwg531
LWG531

CD1
array forms of unformatted input functions
http://cplusplus.github.io/LWG/lwg-defects.html#531



Martin Sebor
-
d:lwg532
LWG532

LEWG
Tuple comparison
http://cplusplus.github.io/LWG/lwg-active.html#532



David Abrahams
-
d:lwg533
LWG533

CD1
typo in 2.2.3.10/1
http://cplusplus.github.io/LWG/lwg-defects.html#533



Paolo Carlini
-
d:lwg534
LWG534

CD1
Missing basic_string members
http://cplusplus.github.io/LWG/lwg-defects.html#534



Alisdair Meredith
-
d:lwg535
LWG535

CD1
std::string::swap specification poorly worded
http://cplusplus.github.io/LWG/lwg-defects.html#535



Beman Dawes
-
d:lwg536
LWG536

Dup
Container iterator constructor and explicit convertibility
http://cplusplus.github.io/LWG/lwg-closed.html#536



Joaquín M López Muñoz
-
d:lwg537
LWG537

CD1
Typos in the signatures in 27.6.1.3/42-43 and 27.6.2.4
http://cplusplus.github.io/LWG/lwg-defects.html#537



Paolo Carlini
-
d:lwg538
LWG538

CD1
241 again: Does unique_copy() require CopyConstructible and Assignable?
http://cplusplus.github.io/LWG/lwg-defects.html#538



Howard Hinnant
-
d:lwg539
LWG539

C++11
partial_sum and adjacent_difference should mention requirements
http://cplusplus.github.io/LWG/lwg-defects.html#539



Marc Schoolderman
-
d:lwg54
LWG54

TC1
Basic_streambuf's destructor
http://cplusplus.github.io/LWG/lwg-defects.html#54



Matt Austern
-
d:lwg540
LWG540

CD1
shared_ptr<void>::operator*()
http://cplusplus.github.io/LWG/lwg-defects.html#540



Martin Sebor
-
d:lwg541
LWG541

CD1
shared_ptr template assignment and void
http://cplusplus.github.io/LWG/lwg-defects.html#541



Martin Sebor
-
d:lwg542
LWG542

CD1
shared_ptr observers
http://cplusplus.github.io/LWG/lwg-defects.html#542



Martin Sebor
-
d:lwg543
LWG543

CD1
valarray slice default constructor
http://cplusplus.github.io/LWG/lwg-defects.html#543



Howard Hinnant
-
d:lwg544
LWG544

NAD Editorial
minor NULL problems in C.2
http://cplusplus.github.io/LWG/lwg-closed.html#544



Martin Sebor
-
d:lwg545
LWG545

CD1
When is a deleter deleted?
http://cplusplus.github.io/LWG/lwg-defects.html#545



Matt Austern
-
d:lwg546
LWG546

NAD
[tr1] _Longlong and _ULonglong are integer types
http://cplusplus.github.io/LWG/lwg-closed.html#546



Matt Austern
-
d:lwg547
LWG547

NAD
division should be floating-point, not integer
http://cplusplus.github.io/LWG/lwg-closed.html#547



Matt Austern
-
d:lwg548
LWG548

NAD
May random_device block?
http://cplusplus.github.io/LWG/lwg-closed.html#548



Matt Austern
-
d:lwg549
LWG549

NAD Editorial
Undefined variable in binomial_distribution
http://cplusplus.github.io/LWG/lwg-closed.html#549



Matt Austern
-
d:lwg55
LWG55

TC1
Invalid stream position is undefined
http://cplusplus.github.io/LWG/lwg-defects.html#55



Matt Austern
-
d:lwg550
LWG550

CD1
What should the return type of pow(float,int) be?
http://cplusplus.github.io/LWG/lwg-defects.html#550



Howard Hinnant
-
d:lwg551
LWG551

CD1
<ccomplex>
http://cplusplus.github.io/LWG/lwg-defects.html#551



Howard Hinnant
-
d:lwg552
LWG552

CD1
random_shuffle and its generator
http://cplusplus.github.io/LWG/lwg-defects.html#552



Martin Sebor
-
d:lwg553
LWG553

NAD Editorial
very minor editorial change intptr_t / uintptr_t
http://cplusplus.github.io/LWG/lwg-closed.html#553



Paolo Carlini
-
d:lwg554
LWG554

NAD
Problem with lwg DR 184 numeric_limits<bool>
http://cplusplus.github.io/LWG/lwg-closed.html#554



Howard Hinnant
-
d:lwg555
LWG555

NAD Editorial
[tr1] 8.21/1: typo
http://cplusplus.github.io/LWG/lwg-closed.html#555



Paolo Carlini
-
d:lwg556
LWG556

C++11
Is Compare a BinaryPredicate?
http://cplusplus.github.io/LWG/lwg-defects.html#556



Martin Sebor
-
d:lwg557
LWG557

NAD Editorial
TR1: div(_Longlong, _Longlong) vs div(intmax_t, intmax_t)
http://cplusplus.github.io/LWG/lwg-closed.html#557



Paolo Carlini
-
d:lwg558
LWG558

NAD Editorial
lib.input.iterators Defect
http://cplusplus.github.io/LWG/lwg-closed.html#558



David Abrahams
-
d:lwg559
LWG559

CD1
numeric_limits<const T>
http://cplusplus.github.io/LWG/lwg-defects.html#559



Martin Sebor
-
d:lwg56
LWG56

TC1
Showmanyc's return type
http://cplusplus.github.io/LWG/lwg-defects.html#56



Matt Austern
-
d:lwg560
LWG560

NAD
User-defined allocators without default constructor
http://cplusplus.github.io/LWG/lwg-closed.html#560



Sergey P. Derevyago
-
d:lwg561
LWG561

CD1
inserter overly generic
http://cplusplus.github.io/LWG/lwg-defects.html#561



Howard Hinnant
-
d:lwg562
LWG562

CD1
stringbuf ctor inefficient
http://cplusplus.github.io/LWG/lwg-defects.html#562



Martin Sebor
-
d:lwg563
LWG563

CD1
stringbuf seeking from end
http://cplusplus.github.io/LWG/lwg-defects.html#563



Martin Sebor
-
d:lwg564
LWG564

C++11
stringbuf seekpos underspecified
http://cplusplus.github.io/LWG/lwg-defects.html#564



Martin Sebor
-
d:lwg565
LWG565

C++11
xsputn inefficient
http://cplusplus.github.io/LWG/lwg-defects.html#565



Martin Sebor
-
d:lwg566
LWG566

CD1
array forms of unformatted input function undefined for zero-element arrays
http://cplusplus.github.io/LWG/lwg-defects.html#566



Martin Sebor
-
d:lwg567
LWG567

CD1
streambuf inserter and extractor should be unformatted
http://cplusplus.github.io/LWG/lwg-defects.html#567



Martin Sebor
-
d:lwg568
LWG568

NAD
[tr1] log2 overloads missing
http://cplusplus.github.io/LWG/lwg-closed.html#568



Paolo Carlini
-
d:lwg569
LWG569

Dup
Postcondition for basic_ios::clear(iostate) incorrectly stated
http://cplusplus.github.io/LWG/lwg-closed.html#569



Seungbeom Kim
-
d:lwg57
LWG57

TC1
Mistake in char_traits
http://cplusplus.github.io/LWG/lwg-defects.html#57



Matt Austern
-
d:lwg570
LWG570

NAD
Request adding additional explicit specializations of char_traits
http://cplusplus.github.io/LWG/lwg-closed.html#570



Jack Reeves
-
d:lwg571
LWG571

NAD Editorial
Update C90 references to C99?
http://cplusplus.github.io/LWG/lwg-closed.html#571



Beman Dawes
-
d:lwg572
LWG572

NAD
Oops, we gave 507 WP status
http://cplusplus.github.io/LWG/lwg-closed.html#572



Howard Hinnant
-
d:lwg573
LWG573

NAD
C++0x file positioning should handle modern file sizes
http://cplusplus.github.io/LWG/lwg-closed.html#573



Beman Dawes
-
d:lwg574
LWG574

CD1
DR 369 Contradicts Text
http://cplusplus.github.io/LWG/lwg-defects.html#574



Pete Becker
-
d:lwg575
LWG575

CD1
the specification of ~shared_ptr is MT-unfriendly, makes implementation assumptions
http://cplusplus.github.io/LWG/lwg-defects.html#575



Peter Dimov
-
d:lwg576
LWG576

CD1
find_first_of is overconstrained
http://cplusplus.github.io/LWG/lwg-defects.html#576



Doug Gregor
-
d:lwg577
LWG577

CD1
upper_bound(first, last, ...) cannot return last
http://cplusplus.github.io/LWG/lwg-defects.html#577



Seungbeom Kim
-
d:lwg578
LWG578

CD1
purpose of hint to allocator::allocate()
http://cplusplus.github.io/LWG/lwg-defects.html#578



Martin Sebor
-
d:lwg579
LWG579

NAD
erase(iterator) for unordered containers should not return an iterator
http://cplusplus.github.io/LWG/lwg-closed.html#579



Joaquín M López Muñoz
-
d:lwg58
LWG58

NAD
Extracting a char from a wide-oriented stream
http://cplusplus.github.io/LWG/lwg-closed.html#58



Matt Austern
-
d:lwg580
LWG580

NAD Editorial
unused allocator members
http://cplusplus.github.io/LWG/lwg-closed.html#580



Martin Sebor
-
d:lwg581
LWG581

CD1
flush() not unformatted function
http://cplusplus.github.io/LWG/lwg-defects.html#581



Martin Sebor
-
d:lwg582
LWG582

NAD
specialized algorithms and volatile storage
http://cplusplus.github.io/LWG/lwg-closed.html#582



Martin Sebor
-
d:lwg583
LWG583

NAD
div() for unsigned integral types
http://cplusplus.github.io/LWG/lwg-closed.html#583



Beman Dawes
-
d:lwg584
LWG584

NAD
missing int pow(int,int) functionality
http://cplusplus.github.io/LWG/lwg-closed.html#584



Beman Dawes
-
d:lwg585
LWG585

NAD
facet error reporting
http://cplusplus.github.io/LWG/lwg-closed.html#585



Martin Sebor, Paolo Carlini
-
d:lwg586
LWG586

CD1
string inserter not a formatted function
http://cplusplus.github.io/LWG/lwg-defects.html#586



Martin Sebor
-
d:lwg587
LWG587

NAD Editorial
iststream ctor missing description
http://cplusplus.github.io/LWG/lwg-closed.html#587



Martin Sebor
-
d:lwg588
LWG588

NAD
requirements on zero sized tr1::arrays and other details
http://cplusplus.github.io/LWG/lwg-closed.html#588



Gennaro Prota
-
d:lwg589
LWG589

CD1
Requirements on iterators of member template functions of containers
http://cplusplus.github.io/LWG/lwg-defects.html#589



Peter Dimov
-
d:lwg59
LWG59

TC1
Ambiguity in specification of gbump
http://cplusplus.github.io/LWG/lwg-defects.html#59



Matt Austern
-
d:lwg590
LWG590

NAD Editorial
Type traits implementation latitude should be removed for C++0x
http://cplusplus.github.io/LWG/lwg-closed.html#590



Beman Dawes
-
d:lwg591
LWG591

NAD Editorial
Misleading "built-in
http://cplusplus.github.io/LWG/lwg-closed.html#591



whyglinux
-
d:lwg592
LWG592

NAD Editorial
Incorrect treatment of rdbuf()->close() return type
http://cplusplus.github.io/LWG/lwg-closed.html#592



Christopher Kohlhoff
-
d:lwg593
LWG593

CD1
__STDC_CONSTANT_MACROS
http://cplusplus.github.io/LWG/lwg-defects.html#593



Walter Brown
-
d:lwg594
LWG594

Resolved
Disadvantages of defining Swappable in terms of CopyConstructible and Assignable
http://cplusplus.github.io/LWG/lwg-defects.html#594



Niels Dekker
-
d:lwg595
LWG595

CD1
TR1/C++0x: fabs(complex<T>) redundant / wrongly specified
http://cplusplus.github.io/LWG/lwg-defects.html#595



Stefan Große Pawig
-
d:lwg596
LWG596

CD1
27.8.1.3 Table 112 omits "a+" and "a+b" modes
http://cplusplus.github.io/LWG/lwg-defects.html#596



Thomas Plum
-
d:lwg597
LWG597

NAD
[dec.tr] The notion of 'promotion' cannot be emulated by user-defined types.
http://cplusplus.github.io/LWG/lwg-closed.html#597



Daveed Vandevoorde
-
d:lwg598
LWG598

TRDec
[dec.tr] Conversion to integral should truncate, not round.
http://cplusplus.github.io/LWG/lwg-defects.html#598



Daniel Krugler
-
d:lwg599
LWG599

TRDec
[dec.tr] Say "octets" instead of "bytes."
http://cplusplus.github.io/LWG/lwg-defects.html#599



Daniel Krugler
-
d:lwg6
LWG6

NAD
File position not an offset unimplementable
http://cplusplus.github.io/LWG/lwg-closed.html#6



Matt Austern
-
d:lwg60
LWG60

TC1
What is a formatted input function?
http://cplusplus.github.io/LWG/lwg-defects.html#60



Matt Austern
-
d:lwg600
LWG600

TRDec
[dec.tr] Wrong parameters for wcstod* functions
http://cplusplus.github.io/LWG/lwg-defects.html#600



Daniel Krugler
-
d:lwg601
LWG601

TRDec
[dec.tr] numeric_limits typos
http://cplusplus.github.io/LWG/lwg-defects.html#601



Daniel Krugler
-
d:lwg602
LWG602

TRDec
[dec.tr] "generic floating type" not defined.
http://cplusplus.github.io/LWG/lwg-defects.html#602



Daniel Krügler
-
d:lwg603
LWG603

TRDec
[dec.tr] Trivially simplifying decimal classes.
http://cplusplus.github.io/LWG/lwg-defects.html#603



Martin Sebor
-
d:lwg604
LWG604

TRDec
[dec.tr] Storing a reference to a facet unsafe.
http://cplusplus.github.io/LWG/lwg-defects.html#604



Martin Sebor
-
d:lwg605
LWG605

TRDec
[dec.tr] <decfloat.h> doesn't live here anymore.
http://cplusplus.github.io/LWG/lwg-defects.html#605



Robert Klarer
-
d:lwg606
LWG606

NAD
[dec.tr] allow narrowing conversions
http://cplusplus.github.io/LWG/lwg-closed.html#606



Martin Sebor
-
d:lwg607
LWG607

CD1
Concern about short seed vectors
http://cplusplus.github.io/LWG/lwg-defects.html#607



Charles Karney
-
d:lwg608
LWG608

CD1
Unclear seed_seq construction details
http://cplusplus.github.io/LWG/lwg-defects.html#608



Charles Karney
-
d:lwg609
LWG609

CD1
missing static const
http://cplusplus.github.io/LWG/lwg-defects.html#609



Walter E. Brown
-
d:lwg61
LWG61

TC1
Ambiguity in iostreams exception policy
http://cplusplus.github.io/LWG/lwg-defects.html#61



Matt Austern
-
d:lwg610
LWG610

CD1
Suggested non-normative note for C++0x
http://cplusplus.github.io/LWG/lwg-defects.html#610



Scott Meyers
-
d:lwg611
LWG611

CD1
Standard library templates and incomplete types
http://cplusplus.github.io/LWG/lwg-defects.html#611



Nicola Musatti
-
d:lwg612
LWG612

CD1
numeric_limits::is_modulo insufficiently defined
http://cplusplus.github.io/LWG/lwg-defects.html#612



Chris Jefferson
-
d:lwg613
LWG613

CD1
max_digits10 missing from numeric_limits
http://cplusplus.github.io/LWG/lwg-defects.html#613



Bo Persson
-
d:lwg614
LWG614

NAD
std::string allocator requirements still inconsistent
http://cplusplus.github.io/LWG/lwg-closed.html#614



Bo Persson
-
d:lwg615
LWG615

NAD Editorial
Inconsistencies in Section 21.4
http://cplusplus.github.io/LWG/lwg-closed.html#615



Bo Persson
-
d:lwg616
LWG616

CD1
missing 'typename' in ctype_byname
http://cplusplus.github.io/LWG/lwg-defects.html#616



Bo Persson
-
d:lwg617
LWG617

NAD
std::array is a sequence that doesn't satisfy the sequence requirements?
http://cplusplus.github.io/LWG/lwg-closed.html#617



Bo Persson
-
d:lwg618
LWG618

CD1
valarray::cshift() effects on empty array
http://cplusplus.github.io/LWG/lwg-defects.html#618



Gabriel Dos Reis
-
d:lwg619
LWG619

CD1
Longjmp wording problem
http://cplusplus.github.io/LWG/lwg-defects.html#619



Lawrence Crowl
-
d:lwg62
LWG62

TC1
Sync's return value
http://cplusplus.github.io/LWG/lwg-defects.html#62



Matt Austern
-
d:lwg620
LWG620

CD1
valid uses of empty valarrays
http://cplusplus.github.io/LWG/lwg-defects.html#620



Martin Sebor
-
d:lwg621
LWG621

CD1
non-const copy assignment operators of helper arrays
http://cplusplus.github.io/LWG/lwg-defects.html#621



Martin Sebor
-
d:lwg622
LWG622

CD1
behavior of filebuf dtor and close on error
http://cplusplus.github.io/LWG/lwg-defects.html#622



Martin Sebor
-
d:lwg623
LWG623

CD1
pubimbue forbidden to call imbue
http://cplusplus.github.io/LWG/lwg-defects.html#623



Martin Sebor
-
d:lwg624
LWG624

CD1
valarray assignment and arrays of unequal length
http://cplusplus.github.io/LWG/lwg-defects.html#624



Martin Sebor
-
d:lwg625
LWG625

Resolved
Mixed up Effects and Returns clauses
http://cplusplus.github.io/LWG/lwg-defects.html#625



Martin Sebor
-
d:lwg626
LWG626

NAD Editorial
new Remark clauses not documented
http://cplusplus.github.io/LWG/lwg-closed.html#626



Martin Sebor
-
d:lwg627
LWG627

NAD
Low memory and exceptions
http://cplusplus.github.io/LWG/lwg-closed.html#627



P.J. Plauger
-
d:lwg628
LWG628

CD1
Inconsistent definition of basic_regex constructor
http://cplusplus.github.io/LWG/lwg-defects.html#628



Bo Persson
-
d:lwg629
LWG629

CD1
complex<T> insertion and locale dependence
http://cplusplus.github.io/LWG/lwg-defects.html#629



Gabriel Dos Reis
-
d:lwg63
LWG63

TC1
Exception-handling policy for unformatted output
http://cplusplus.github.io/LWG/lwg-defects.html#63



Matt Austern
-
d:lwg630
LWG630

C++11
arrays of valarray
http://cplusplus.github.io/LWG/lwg-defects.html#630



Martin Sebor
-
d:lwg631
LWG631

NAD
conflicting requirements for BinaryPredicate
http://cplusplus.github.io/LWG/lwg-closed.html#631



James Kanze
-
d:lwg632
LWG632

NAD
Time complexity of size() for std::set
http://cplusplus.github.io/LWG/lwg-closed.html#632



Lionel B
-
d:lwg633
LWG633

NAD Editorial
Return clause mentions undefined "type()"
http://cplusplus.github.io/LWG/lwg-closed.html#633



Daniel Krügler
-
d:lwg634
LWG634

CD1
allocator.address() doesn't work for types overloading operator&
http://cplusplus.github.io/LWG/lwg-defects.html#634



Howard Hinnant
-
d:lwg635
LWG635

Resolved
domain of allocator::address
http://cplusplus.github.io/LWG/lwg-defects.html#635



Howard Hinnant
-
d:lwg636
LWG636

NAD Editorial
26.5.2.3 valarray::operator[]
http://cplusplus.github.io/LWG/lwg-closed.html#636



Bo Persson
-
d:lwg637
LWG637

NAD Editorial
§[c.math]/10 inconsistent return values
http://cplusplus.github.io/LWG/lwg-closed.html#637



Bo Persson
-
d:lwg638
LWG638

CD1
deque end invalidation during erase
http://cplusplus.github.io/LWG/lwg-defects.html#638



Steve LoBasso
-
d:lwg639
LWG639

NAD
Still problems with exceptions during streambuf IO
http://cplusplus.github.io/LWG/lwg-closed.html#639



Daniel Krügler
-
d:lwg64
LWG64

TC1
Exception handling in basic_istream::operator>>(basic_streambuf*)
http://cplusplus.github.io/LWG/lwg-defects.html#64



Matt Austern
-
d:lwg640
LWG640

CD1
27.6.2.5.2 does not handle (unsigned) long long
http://cplusplus.github.io/LWG/lwg-defects.html#640



Daniel Krügler
-
d:lwg641
LWG641

NAD Editorial
Editorial fix for 27.6.4 (N2134)
http://cplusplus.github.io/LWG/lwg-closed.html#641



Daniel Krügler
-
d:lwg642
LWG642

NAD Editorial
Invalidated fstream footnotes in N2134
http://cplusplus.github.io/LWG/lwg-closed.html#642



Daniel Krügler
-
d:lwg643
LWG643

CD1
Impossible "as if" clauses
http://cplusplus.github.io/LWG/lwg-defects.html#643



Daniel Krügler
-
d:lwg644
LWG644

NAD
Possible typos in 'function' description
http://cplusplus.github.io/LWG/lwg-closed.html#644



Bo Persson
-
d:lwg645
LWG645

NAD Editorial
Missing members in match_results
http://cplusplus.github.io/LWG/lwg-closed.html#645



Daniel Krügler
-
d:lwg646
LWG646

CD1
const incorrect match_result members
http://cplusplus.github.io/LWG/lwg-defects.html#646



Daniel Krügler
-
d:lwg647
LWG647

NAD Editorial
Inconsistent regex_search params
http://cplusplus.github.io/LWG/lwg-closed.html#647



Daniel Krügler
-
d:lwg648
LWG648

NAD Editorial
regex_iterator c'tor needs clarification/editorial fix
http://cplusplus.github.io/LWG/lwg-closed.html#648



Daniel Krügler
-
d:lwg649
LWG649

NAD Editorial
Several typos in regex_token_iterator constructors
http://cplusplus.github.io/LWG/lwg-closed.html#649



Daniel Krügler
-
d:lwg65
LWG65

NAD
Underspecification of strstreambuf::seekoff
http://cplusplus.github.io/LWG/lwg-closed.html#65



Matt Austern
-
d:lwg650
LWG650

CD1
regex_token_iterator and const correctness
http://cplusplus.github.io/LWG/lwg-defects.html#650



Daniel Krügler
-
d:lwg651
LWG651

CD1
Missing preconditions for regex_token_iterator c'tors
http://cplusplus.github.io/LWG/lwg-defects.html#651



Daniel Krügler
-
d:lwg652
LWG652

CD1
regex_iterator and const correctness
http://cplusplus.github.io/LWG/lwg-defects.html#652



Daniel Krügler
-
d:lwg653
LWG653

NAD
Library reserved names
http://cplusplus.github.io/LWG/lwg-closed.html#653



Alisdair Meredith
-
d:lwg654
LWG654

CD1
Missing IO roundtrip for random number engines
http://cplusplus.github.io/LWG/lwg-defects.html#654



Daniel Krügler
-
d:lwg655
LWG655

CD1
Signature of generate_canonical not useful
http://cplusplus.github.io/LWG/lwg-defects.html#655



Daniel Krügler
-
d:lwg656
LWG656

NAD Editorial
Typo in subtract_with_carry_engine declaration
http://cplusplus.github.io/LWG/lwg-closed.html#656



Daniel Krügler
-
d:lwg657
LWG657

NAD
unclear requirement about header inclusion
http://cplusplus.github.io/LWG/lwg-closed.html#657



Gennaro Prota
-
d:lwg658
LWG658

Resolved
Two unspecified function comparators in [function.objects]
http://cplusplus.github.io/LWG/lwg-defects.html#658



Daniel Krügler
-
d:lwg659
LWG659

C++11
istreambuf_iterator should have an operator->()
http://cplusplus.github.io/LWG/lwg-defects.html#659



Niels Dekker
-
d:lwg66
LWG66

TC1
Strstreambuf::setbuf
http://cplusplus.github.io/LWG/lwg-defects.html#66



Matt Austern
-
d:lwg660
LWG660

CD1
Missing Bitwise Operations
http://cplusplus.github.io/LWG/lwg-defects.html#660



Beman Dawes
-
d:lwg661
LWG661

CD1
New 27.6.1.2.2 changes make special extractions useless
http://cplusplus.github.io/LWG/lwg-defects.html#661



Daniel Krügler
-
d:lwg662
LWG662

NAD
Inconsistent handling of incorrectly-placed thousands separators
http://cplusplus.github.io/LWG/lwg-closed.html#662



Cosmin Truta
-
d:lwg663
LWG663

NAD
Complexity Requirements
http://cplusplus.github.io/LWG/lwg-closed.html#663



Thomas Plum
-
d:lwg664
LWG664

CD1
do_unshift for codecvt<char, char, mbstate_t>
http://cplusplus.github.io/LWG/lwg-defects.html#664



Thomas Plum
-
d:lwg665
LWG665

CD1
do_unshift return value
http://cplusplus.github.io/LWG/lwg-defects.html#665



Thomas Plum
-
d:lwg666
LWG666

CD1
moneypunct::do_curr_symbol()
http://cplusplus.github.io/LWG/lwg-defects.html#666



Thomas Plum
-
d:lwg667
LWG667

NAD
money_get's widened minus sign
http://cplusplus.github.io/LWG/lwg-closed.html#667



Thomas Plum
-
d:lwg668
LWG668

NAD
money_get's empty minus sign
http://cplusplus.github.io/LWG/lwg-closed.html#668



Thomas Plum
-
d:lwg669
LWG669

NAD
Equivalent postive and negative signs in money_get
http://cplusplus.github.io/LWG/lwg-closed.html#669



Thomas Plum
-
d:lwg67
LWG67

Dup
Setw useless for strings
http://cplusplus.github.io/LWG/lwg-closed.html#67



Steve Clamage
-
d:lwg670
LWG670

Dup
money_base::pattern and space
http://cplusplus.github.io/LWG/lwg-closed.html#670



Thomas Plum
-
d:lwg671
LWG671

C++11
precision of hexfloat
http://cplusplus.github.io/LWG/lwg-defects.html#671



John Salmon
-
d:lwg672
LWG672

CD1
Swappable requirements need updating
http://cplusplus.github.io/LWG/lwg-defects.html#672



Howard Hinnant
-
d:lwg673
LWG673

CD1
unique_ptr update
http://cplusplus.github.io/LWG/lwg-defects.html#673



Howard Hinnant
-
d:lwg674
LWG674

CD1
shared_ptr interface changes for consistency with N1856
http://cplusplus.github.io/LWG/lwg-defects.html#674



Peter Dimov
-
d:lwg675
LWG675

CD1
Move assignment of containers
http://cplusplus.github.io/LWG/lwg-defects.html#675



Howard Hinnant
-
d:lwg676
LWG676

C++11
Moving the unordered containers
http://cplusplus.github.io/LWG/lwg-defects.html#676



Howard Hinnant
-
d:lwg677
LWG677

CD1
Weaknesses in seed_seq::randomize [rand.util.seedseq]
http://cplusplus.github.io/LWG/lwg-defects.html#677



Charles Karney
-
d:lwg678
LWG678

CD1
Changes for [rand.req.eng]
http://cplusplus.github.io/LWG/lwg-defects.html#678



Charles Karney
-
d:lwg679
LWG679

CD1
resize parameter by value
http://cplusplus.github.io/LWG/lwg-defects.html#679



Howard Hinnant
-
d:lwg68
LWG68

TC1
Extractors for char* should store null at end
http://cplusplus.github.io/LWG/lwg-defects.html#68



Angelika Langer
-
d:lwg680
LWG680

CD1
move_iterator operator-> return
http://cplusplus.github.io/LWG/lwg-defects.html#680



Howard Hinnant
-
d:lwg681
LWG681

CD1
Operator functions impossible to compare are defined in [re.submatch.op]
http://cplusplus.github.io/LWG/lwg-defects.html#681



Nozomu Katoo
-
d:lwg682
LWG682

CD1
basic_regex ctor takes InputIterator or ForwardIterator?
http://cplusplus.github.io/LWG/lwg-defects.html#682



Eric Niebler
-
d:lwg683
LWG683

NAD Editorial
regex_token_iterator summary error
http://cplusplus.github.io/LWG/lwg-closed.html#683



Eric Niebler
-
d:lwg684
LWG684

NAD Editorial
Unclear which members of match_results should be used in comparison
http://cplusplus.github.io/LWG/lwg-closed.html#684



Nozomu Katoo
-
d:lwg685
LWG685

CD1
reverse_iterator/move_iterator difference has invalid signatures
http://cplusplus.github.io/LWG/lwg-defects.html#685



Bo Persson
-
d:lwg686
LWG686

NAD
unique_ptr and shared_ptr fail to specify non-convertibility to int for unspecified-bool-type
http://cplusplus.github.io/LWG/lwg-closed.html#686



Beman Dawes
-
d:lwg687
LWG687

CD1
shared_ptr conversion constructor not constrained
http://cplusplus.github.io/LWG/lwg-defects.html#687



Peter Dimov
-
d:lwg688
LWG688

C++11
reference_wrapper, cref unsafe, allow binding to rvalues
http://cplusplus.github.io/LWG/lwg-defects.html#688



Peter Dimov
-
d:lwg689
LWG689

CD1
reference_wrapper constructor overly constrained
http://cplusplus.github.io/LWG/lwg-defects.html#689



Peter Dimov
-
d:lwg69
LWG69

TC1
Must elements of a vector be contiguous?
http://cplusplus.github.io/LWG/lwg-defects.html#69



Andrew Koenig
-
d:lwg690
LWG690

NAD Editorial
abs(long long) should return long long
http://cplusplus.github.io/LWG/lwg-closed.html#690



Niels Dekker
-
d:lwg691
LWG691

CD1
const_local_iterator cbegin, cend missing from TR1
http://cplusplus.github.io/LWG/lwg-defects.html#691



Joaquín M López Muñoz
-
d:lwg692
LWG692

CD1
get_money and put_money should be formatted I/O functions
http://cplusplus.github.io/LWG/lwg-defects.html#692



Martin Sebor
-
d:lwg693
LWG693

CD1
std::bitset::all() missing
http://cplusplus.github.io/LWG/lwg-defects.html#693



Martin Sebor
-
d:lwg694
LWG694

CD1
std::bitset and long long
http://cplusplus.github.io/LWG/lwg-defects.html#694



Martin Sebor
-
d:lwg695
LWG695

CD1
ctype<char>::classic_table() not accessible
http://cplusplus.github.io/LWG/lwg-defects.html#695



Martin Sebor
-
d:lwg696
LWG696

C++11
istream::operator>>(int&) broken
http://cplusplus.github.io/LWG/lwg-defects.html#696



Martin Sebor
-
d:lwg697
LWG697

Resolved
New <system_error> header leads to name clashes
http://cplusplus.github.io/LWG/lwg-defects.html#697



Daniel Krügler
-
d:lwg698
LWG698

CD1
system_error needs const char* constructors
http://cplusplus.github.io/LWG/lwg-defects.html#698



Daniel Krügler
-
d:lwg699
LWG699

CD1
N2111 changes min/max
http://cplusplus.github.io/LWG/lwg-defects.html#699



P.J. Plauger
-
d:lwg7
LWG7

TC1
String clause minor problems
http://cplusplus.github.io/LWG/lwg-defects.html#7



Matt Austern
-
d:lwg70
LWG70

TC1
Uncaught_exception() missing throw() specification
http://cplusplus.github.io/LWG/lwg-defects.html#70



Steve Clamage
-
d:lwg700
LWG700

CD1
N1856 defines struct identity
http://cplusplus.github.io/LWG/lwg-defects.html#700



P.J. Plauger
-
d:lwg701
LWG701

NAD
[tr1] assoc laguerre poly's
http://cplusplus.github.io/LWG/lwg-closed.html#701



Christopher Crawford
-
d:lwg702
LWG702

NAD
[tr1] Restriction in associated Legendre functions
http://cplusplus.github.io/LWG/lwg-closed.html#702



Christopher Crawford
-
d:lwg703
LWG703

CD1
map::at() need a complexity specification
http://cplusplus.github.io/LWG/lwg-defects.html#703



Joe Gottman
-
d:lwg704
LWG704

C++11
MoveAssignable requirement for container value type overly strict
http://cplusplus.github.io/LWG/lwg-defects.html#704



Howard Hinnant
-
d:lwg705
LWG705

CD1
type-trait decay incompletely specified
http://cplusplus.github.io/LWG/lwg-defects.html#705



Thorsten Ottosen
-
d:lwg706
LWG706

CD1
make_pair() should behave as make_tuple() wrt. reference_wrapper()
http://cplusplus.github.io/LWG/lwg-defects.html#706



Thorsten Ottosen
-
d:lwg707
LWG707

NAD
null pointer constant for exception_ptr
http://cplusplus.github.io/LWG/lwg-closed.html#707



Jens Maurer
-
d:lwg708
LWG708

LEWG
Locales need to be per thread and updated for POSIX changes
http://cplusplus.github.io/LWG/lwg-active.html#708



Peter Dimov
-
d:lwg709
LWG709

CD1
char_traits::not_eof has wrong signature
http://cplusplus.github.io/LWG/lwg-defects.html#709



Bo Persson
-
d:lwg71
LWG71

TC1
Do_get_monthname synopsis missing argument
http://cplusplus.github.io/LWG/lwg-defects.html#71



Nathan Myers
-
d:lwg710
LWG710

CD1
Missing postconditions
http://cplusplus.github.io/LWG/lwg-defects.html#710



Peter Dimov
-
d:lwg711
LWG711

C++11
Contradiction in empty shared_ptr
http://cplusplus.github.io/LWG/lwg-defects.html#711



Peter Dimov
-
d:lwg712
LWG712

CD1
seed_seq::size no longer useful
http://cplusplus.github.io/LWG/lwg-defects.html#712



Marc Paterno
-
d:lwg713
LWG713

CD1
sort() complexity is too lax
http://cplusplus.github.io/LWG/lwg-defects.html#713



Matt Austern
-
d:lwg714
LWG714

CD1
search_n complexity is too lax
http://cplusplus.github.io/LWG/lwg-defects.html#714



Matt Austern
-
d:lwg715
LWG715

CD1
minmax_element complexity is too lax
http://cplusplus.github.io/LWG/lwg-defects.html#715



Matt Austern
-
d:lwg716
LWG716

C++11
Production in [re.grammar] not actually modified
http://cplusplus.github.io/LWG/lwg-defects.html#716



Stephan T. Lavavej
-
d:lwg717
LWG717

NAD Editorial
Incomplete valarray::operator[] specification in [valarray.access]
http://cplusplus.github.io/LWG/lwg-closed.html#717



Daniel Krügler
-
d:lwg718
LWG718

NAD Editorial
basic_string is not a sequence
http://cplusplus.github.io/LWG/lwg-closed.html#718



Bo Persson
-
d:lwg719
LWG719

Resolved
std::is_literal type traits should be provided
http://cplusplus.github.io/LWG/lwg-defects.html#719



Daniel Krügler
-
d:lwg72
LWG72

Dup
Do_convert phantom member function
http://cplusplus.github.io/LWG/lwg-closed.html#72



Nathan Myers
-
d:lwg720
LWG720

CD1
Omissions in constexpr usages
http://cplusplus.github.io/LWG/lwg-defects.html#720



Daniel Krügler
-
d:lwg721
LWG721

NAD
wstring_convert inconsistensies
http://cplusplus.github.io/LWG/lwg-closed.html#721



Bo Persson
-
d:lwg722
LWG722

CD1
Missing [c.math] functions nanf and nanl
http://cplusplus.github.io/LWG/lwg-defects.html#722



Daniel Krügler
-
d:lwg723
LWG723

C++11
basic_regex should be moveable
http://cplusplus.github.io/LWG/lwg-defects.html#723



Daniel Krügler
-
d:lwg724
LWG724

C++11
DefaultConstructible is not defined
http://cplusplus.github.io/LWG/lwg-defects.html#724



Pablo Halpern
-
d:lwg725
LWG725

NAD Editorial
Optional sequence container requirements column label
http://cplusplus.github.io/LWG/lwg-closed.html#725



David Abrahams
-
d:lwg726
LWG726

NAD
Missing regex_replace() overloads
http://cplusplus.github.io/LWG/lwg-closed.html#726



Stephan T. Lavavej
-
d:lwg727
LWG727

C++11
regex_replace() doesn't accept basic_strings with custom traits and allocators
http://cplusplus.github.io/LWG/lwg-defects.html#727



Stephan T. Lavavej
-
d:lwg728
LWG728

CD1
Problem in [rand.eng.mers]/6
http://cplusplus.github.io/LWG/lwg-defects.html#728



Stephan Tolksdorf
-
d:lwg729
LWG729

NAD
Problem in [rand.req.eng]/3
http://cplusplus.github.io/LWG/lwg-closed.html#729



Stephan Tolksdorf
-
d:lwg73
LWG73

NAD
is_open should be const
http://cplusplus.github.io/LWG/lwg-closed.html#73



Matt Austern
-
d:lwg730
LWG730

NAD
Comment on [rand.req.adapt]/3 e)
http://cplusplus.github.io/LWG/lwg-closed.html#730



Stephan Tolksdorf
-
d:lwg731
LWG731

NAD
proposal for a customizable seed_seq
http://cplusplus.github.io/LWG/lwg-closed.html#731



Stephan Tolksdorf
-
d:lwg732
LWG732

Resolved
Defect in [rand.dist.samp.genpdf]
http://cplusplus.github.io/LWG/lwg-defects.html#732



Stephan Tolksdorf
-
d:lwg733
LWG733

NAD
Comment on [rand.req.dist]/9
http://cplusplus.github.io/LWG/lwg-closed.html#733



Stephan Tolksdorf
-
d:lwg734
LWG734

CD1
Unnecessary restriction in [rand.dist.norm.chisq]
http://cplusplus.github.io/LWG/lwg-defects.html#734



Stephan Tolksdorf
-
d:lwg735
LWG735

NAD
Unfortunate naming
http://cplusplus.github.io/LWG/lwg-closed.html#735



Stephan Tolksdorf
-
d:lwg736
LWG736

NAD
Comment on [rand.dist.samp.discrete]
http://cplusplus.github.io/LWG/lwg-closed.html#736



Stephan Tolksdorf
-
d:lwg737
LWG737

NAD
Comment on [rand.dist.samp.pconst]
http://cplusplus.github.io/LWG/lwg-closed.html#737



Stephan Tolksdorf
-
d:lwg738
LWG738

NAD Editorial
Editorial issue in [rand.adapt.disc]/3
http://cplusplus.github.io/LWG/lwg-closed.html#738



Stephan Tolksdorf
-
d:lwg739
LWG739

NAD
Defect in [rand.util.canonical]/3
http://cplusplus.github.io/LWG/lwg-closed.html#739



Stephan Tolksdorf
-
d:lwg74
LWG74

TC1
Garbled text for codecvt::do_max_length
http://cplusplus.github.io/LWG/lwg-defects.html#74



Matt Austern
-
d:lwg740
LWG740

CD1
Please remove *_ptr<T[N]>
http://cplusplus.github.io/LWG/lwg-defects.html#740



Herb Sutter
-
d:lwg741
LWG741

NAD
Const-incorrect get_deleter function for shared_ptr
http://cplusplus.github.io/LWG/lwg-closed.html#741



Daniel Krügler
-
d:lwg742
LWG742

Resolved
Enabling swap for proxy iterators
http://cplusplus.github.io/LWG/lwg-defects.html#742



Howard Hinnant
-
d:lwg743
LWG743

CD1
rvalue swap for shared_ptr
http://cplusplus.github.io/LWG/lwg-defects.html#743



Howard Hinnant
-
d:lwg744
LWG744

CD1
What is the lifetime of an exception pointed to by an exception_ptr?
http://cplusplus.github.io/LWG/lwg-defects.html#744



Alisdair Meredith
-
d:lwg745
LWG745

NAD
copy_exception API slices.
http://cplusplus.github.io/LWG/lwg-closed.html#745



Alisdair Meredith
-
d:lwg746
LWG746

CD1
current_exception may fail with bad_alloc
http://cplusplus.github.io/LWG/lwg-defects.html#746



Alisdair Meredith
-
d:lwg747
LWG747

NAD
We have 3 separate type traits to identify classes supporting no-throw operations
http://cplusplus.github.io/LWG/lwg-closed.html#747



Alisdair Meredith
-
d:lwg748
LWG748

NAD
The is_abstract type trait is defined by reference to 10.4.
http://cplusplus.github.io/LWG/lwg-closed.html#748



Alisdair Meredith
-
d:lwg749
LWG749

CD1
Currently has_nothrow_copy_constructor<T>::value is true if T has 'a' nothrow copy constructor.
http://cplusplus.github.io/LWG/lwg-defects.html#749



Alisdair Meredith
-
d:lwg75
LWG75

TC1
Contradiction in codecvt::length's argument types
http://cplusplus.github.io/LWG/lwg-defects.html#75



Matt
Austern
-
d:lwg750
LWG750

Dup
The current definition for is_convertible requires that the type be implicitly convertible, so explicit constructors are ignored.
http://cplusplus.github.io/LWG/lwg-closed.html#750



Alisdair Meredith
-
d:lwg751
LWG751

NAD
change pass-by-reference members of vector<bool> to pass-by-value?
http://cplusplus.github.io/LWG/lwg-closed.html#751



Alisdair Meredith
-
d:lwg752
LWG752

C++11
Allocator complexity requirement
http://cplusplus.github.io/LWG/lwg-defects.html#752



Hans Boehm
-
d:lwg753
LWG753

C++11
Move constructor in draft
http://cplusplus.github.io/LWG/lwg-defects.html#753



Yechezkel Mett
-
d:lwg754
LWG754

NAD Editorial
Ambiguous return clause for std::uninitialized_copy
http://cplusplus.github.io/LWG/lwg-closed.html#754



Daniel Krügler
-
d:lwg755
LWG755

CD1
std::vector and std:string lack explicit shrink-to-fit operations
http://cplusplus.github.io/LWG/lwg-defects.html#755



Beman Dawes
-
d:lwg756
LWG756

Resolved
Container adaptors push
http://cplusplus.github.io/LWG/lwg-defects.html#756



Paolo Carlini
-
d:lwg757
LWG757

NAD Editorial
Typo in the synopsis of vector
http://cplusplus.github.io/LWG/lwg-closed.html#757



Paolo Carlini
-
d:lwg758
LWG758

C++11
shared_ptr and nullptr
http://cplusplus.github.io/LWG/lwg-defects.html#758



Joe Gottman
-
d:lwg759
LWG759

CD1
A reference is not an object
http://cplusplus.github.io/LWG/lwg-defects.html#759



Jens Maurer
-
d:lwg76
LWG76

CD1
Can a codecvt facet always convert one internal character at a time?
http://cplusplus.github.io/LWG/lwg-defects.html#76



Matt Austern
-
d:lwg760
LWG760

Tentatively NAD
The emplace issue
http://cplusplus.github.io/LWG/lwg-active.html#760



Paolo Carlini
-
d:lwg761
LWG761

CD1
unordered_map needs an at() member function
http://cplusplus.github.io/LWG/lwg-defects.html#761



Joe Gottman
-
d:lwg762
LWG762

CD1
std::unique_ptr requires complete type?
http://cplusplus.github.io/LWG/lwg-defects.html#762



Daniel Krügler
-
d:lwg763
LWG763

NAD
Renaming emplace() overloads
http://cplusplus.github.io/LWG/lwg-closed.html#763



Sylvain Pion
-
d:lwg764
LWG764

NAD
equal_range on unordered containers should return a pair of local_iterators
http://cplusplus.github.io/LWG/lwg-closed.html#764



Joe Gottman
-
d:lwg765
LWG765

C++11
More on iterator validity
http://cplusplus.github.io/LWG/lwg-defects.html#765



Martin Sebor
-
d:lwg766
LWG766

CD1
Inconsistent exception guarantees between ordered and unordered associative containers
http://cplusplus.github.io/LWG/lwg-defects.html#766



Ion Gaztañaga
-
d:lwg767
LWG767

Resolved
Forwarding and backward compatibility
http://cplusplus.github.io/LWG/lwg-defects.html#767



Sylvain Pion
-
d:lwg768
LWG768

CD1
Typos in [atomics]?
http://cplusplus.github.io/LWG/lwg-defects.html#768



Alberto Ganesh Barbati
-
d:lwg769
LWG769

CD1
std::function should use nullptr_t instead of "unspecified-null-pointer-type"
http://cplusplus.github.io/LWG/lwg-defects.html#769



Daniel Krügler
-
d:lwg77
LWG77

Dup
Valarray operator[] const returning value
http://cplusplus.github.io/LWG/lwg-closed.html#77



Levente Farkas
-
d:lwg770
LWG770

CD1
std::function should use rvalue swap
http://cplusplus.github.io/LWG/lwg-defects.html#770



Daniel Krügler
-
d:lwg771
LWG771

CD1
Impossible throws clause in [string.conversions]
http://cplusplus.github.io/LWG/lwg-defects.html#771



Daniel Krügler
-
d:lwg772
LWG772

CD1
Impossible return clause in [string.conversions]
http://cplusplus.github.io/LWG/lwg-defects.html#772



Daniel Krügler
-
d:lwg773
LWG773

NAD
issues with random
http://cplusplus.github.io/LWG/lwg-closed.html#773



P.J. Plauger
-
d:lwg774
LWG774

C++11
Member swap undefined for most containers
http://cplusplus.github.io/LWG/lwg-defects.html#774



Alisdair Meredith
-
d:lwg775
LWG775

CD1
Tuple indexing should be unsigned?
http://cplusplus.github.io/LWG/lwg-defects.html#775



Alisdair Meredith
-
d:lwg776
LWG776

CD1
Undescribed assign function of std::array
http://cplusplus.github.io/LWG/lwg-defects.html#776



Daniel Krügler
-
d:lwg777
LWG777

CD1
Atomics Library Issue
http://cplusplus.github.io/LWG/lwg-defects.html#777



Lawrence Crowl
-
d:lwg778
LWG778

CD1
std::bitset does not have any constructor taking a string literal
http://cplusplus.github.io/LWG/lwg-defects.html#778



Thorsten Ottosen
-
d:lwg779
LWG779

CD1
Resolution of #283 incomplete
http://cplusplus.github.io/LWG/lwg-defects.html#779



Daniel Krügler
-
d:lwg78
LWG78

TC1
Typo: event_call_back
http://cplusplus.github.io/LWG/lwg-defects.html#78



Nico Josuttis
-
d:lwg780
LWG780

C++11
std::merge() specification incorrect/insufficient
http://cplusplus.github.io/LWG/lwg-defects.html#780



Daniel Krügler
-
d:lwg781
LWG781

CD1
std::complex should add missing C99 functions
http://cplusplus.github.io/LWG/lwg-defects.html#781



Daniel Krügler
-
d:lwg782
LWG782

CD1
Extended seed_seq constructor is useless
http://cplusplus.github.io/LWG/lwg-defects.html#782



Daniel Krügler
-
d:lwg783
LWG783

CD1
thread::id reuse
http://cplusplus.github.io/LWG/lwg-defects.html#783



Hans Boehm
-
d:lwg784
LWG784

NAD
unique_lock::release
http://cplusplus.github.io/LWG/lwg-closed.html#784



Constantine Sapuntzakis
-
d:lwg785
LWG785

NAD
[tr1] Random Number Requirements in TR1
http://cplusplus.github.io/LWG/lwg-closed.html#785



John Maddock
-
d:lwg786
LWG786

Resolved
Thread library timed waits, UTC and monotonic clocks
http://cplusplus.github.io/LWG/lwg-defects.html#786



Christopher Kohlhoff, Jeff Garland
-
d:lwg787
LWG787

CD1
complexity of binary_search
http://cplusplus.github.io/LWG/lwg-defects.html#787



Daniel Krügler
-
d:lwg788
LWG788

C++11
Ambiguity in [istream.iterator]
http://cplusplus.github.io/LWG/lwg-defects.html#788



Martin Sebor
-
d:lwg789
LWG789

CD1
xor_combine_engine(result_type) should be explicit
http://cplusplus.github.io/LWG/lwg-defects.html#789



P.J. Plauger
-
d:lwg79
LWG79

TC1
Inconsistent declaration of polar()
http://cplusplus.github.io/LWG/lwg-defects.html#79



Nico Josuttis
-
d:lwg790
LWG790

NAD
xor_combine::seed not specified
http://cplusplus.github.io/LWG/lwg-closed.html#790



P.J. Plauger
-
d:lwg791
LWG791

NAD
piecewise_constant_distribution::densities has wrong name
http://cplusplus.github.io/LWG/lwg-closed.html#791



P.J. Plauger
-
d:lwg792
LWG792

CD1
piecewise_constant_distribution is undefined for a range with just one endpoint
http://cplusplus.github.io/LWG/lwg-defects.html#792



P.J. Plauger
-
d:lwg793
LWG793

Resolved
discrete_distribution missing constructor
http://cplusplus.github.io/LWG/lwg-defects.html#793



P.J. Plauger
-
d:lwg794
LWG794

Resolved
piecewise_constant_distribution missing constructor
http://cplusplus.github.io/LWG/lwg-defects.html#794



P.J. Plauger
-
d:lwg795
LWG795

Dup
general_pdf_distribution should be dropped
http://cplusplus.github.io/LWG/lwg-closed.html#795



P.J. Plauger
-
d:lwg796
LWG796

NAD
ranlux48_base returns wrong value
http://cplusplus.github.io/LWG/lwg-closed.html#796



P.J. Plauger
-
d:lwg797
LWG797

NAD
ranlux48 returns wrong value
http://cplusplus.github.io/LWG/lwg-closed.html#797



P.J. Plauger
-
d:lwg798
LWG798

CD1
Refactoring of binders lead to interface breakage
http://cplusplus.github.io/LWG/lwg-defects.html#798



Daniel Krügler
-
d:lwg799
LWG799

NAD
[tr1] [tr.rand.eng.mers] and [rand.eng.mers]
http://cplusplus.github.io/LWG/lwg-closed.html#799



Stephan Tolksdorf
-
d:lwg8
LWG8

TC1
Locale::global lacks guarantee
http://cplusplus.github.io/LWG/lwg-defects.html#8



Matt Austern
-
d:lwg80
LWG80

TC1
Global Operators of complex declared twice
http://cplusplus.github.io/LWG/lwg-defects.html#80



Nico Josuttis
-
d:lwg800
LWG800

Resolved
Issues in 26.4.7.1 [rand.util.seedseq](6)
http://cplusplus.github.io/LWG/lwg-defects.html#800



Stephan Tolksdorf
-
d:lwg801
LWG801

Resolved
tuple and pair trivial members
http://cplusplus.github.io/LWG/lwg-defects.html#801



Lawrence Crowl
-
d:lwg802
LWG802

NAD
knuth_b returns wrong value
http://cplusplus.github.io/LWG/lwg-closed.html#802



P.J. Plauger
-
d:lwg803
LWG803

Resolved
Simplification of seed_seq::seq_seq
http://cplusplus.github.io/LWG/lwg-defects.html#803



Charles Karney
-
d:lwg804
LWG804

CD1
Some problems with classes error_code/error_condition
http://cplusplus.github.io/LWG/lwg-defects.html#804



Daniel Krügler
-
d:lwg805
LWG805

CD1
posix_error::posix_errno concerns
http://cplusplus.github.io/LWG/lwg-defects.html#805



Jens Maurer
-
d:lwg806
LWG806

CD1
unique_ptr::reset effects incorrect, too permissive
http://cplusplus.github.io/LWG/lwg-defects.html#806



Peter Dimov
-
d:lwg807
LWG807

CD1
tuple construction should not fail unless its element's construction fails
http://cplusplus.github.io/LWG/lwg-defects.html#807



Howard Hinnant
-
d:lwg808
LWG808

CD1
§[forward] incorrect redundant specification
http://cplusplus.github.io/LWG/lwg-defects.html#808



Jens Maurer
-
d:lwg809
LWG809

CD1
std::swap should be overloaded for array types
http://cplusplus.github.io/LWG/lwg-defects.html#809



Niels Dekker
-
d:lwg81
LWG81

NAD
Wrong declaration of slice operations
http://cplusplus.github.io/LWG/lwg-closed.html#81



Nico Josuttis
-
d:lwg810
LWG810

C++11
Missing traits dependencies in operational semantics of extended manipulators
http://cplusplus.github.io/LWG/lwg-defects.html#810



Daniel Krügler
-
d:lwg811
LWG811

C++11
pair of pointers no longer works with literal 0
http://cplusplus.github.io/LWG/lwg-defects.html#811



Doug Gregor
-
d:lwg812
LWG812

NAD Editorial
unsolicited multithreading considered harmful?
http://cplusplus.github.io/LWG/lwg-closed.html#812



Paul McKenney
-
d:lwg813
LWG813

CD1
"empty" undefined for shared_ptr
http://cplusplus.github.io/LWG/lwg-defects.html#813



Matt Austern
-
d:lwg814
LWG814

C++11
vector<bool>::swap(reference, reference) not defined
http://cplusplus.github.io/LWG/lwg-defects.html#814



Alisdair Meredith
-
d:lwg815
LWG815

Resolved
std::function and reference_closure do not use perfect forwarding
http://cplusplus.github.io/LWG/lwg-defects.html#815



Alisdair Meredith
-
d:lwg816
LWG816

Resolved
Should bind()'s returned functor have a nofail copy ctor when bind() is nofail?
http://cplusplus.github.io/LWG/lwg-defects.html#816



Stephan T. Lavavej
-
d:lwg817
LWG817

C++11
bind needs to be moved
http://cplusplus.github.io/LWG/lwg-defects.html#817



Howard Hinnant
-
d:lwg818
LWG818

CD1
wording for memory ordering
http://cplusplus.github.io/LWG/lwg-defects.html#818



Jens Maurer
-
d:lwg819
LWG819

C++11
rethrow_if_nested
http://cplusplus.github.io/LWG/lwg-defects.html#819



Alisdair Meredith
-
d:lwg82
LWG82

NAD
Missing constant for set elements
http://cplusplus.github.io/LWG/lwg-closed.html#82



Nico Josuttis
-
d:lwg820
LWG820

CD1
current_exception()'s interaction with throwing copy ctors
http://cplusplus.github.io/LWG/lwg-defects.html#820



Stephan T. Lavavej
-
d:lwg821
LWG821

C++11
Minor cleanup : unique_ptr
http://cplusplus.github.io/LWG/lwg-defects.html#821



Alisdair Meredith
-
d:lwg822
LWG822

NAD
Object with explicit copy constructor no longer CopyConstructible
http://cplusplus.github.io/LWG/lwg-closed.html#822



James Kanze
-
d:lwg823
LWG823

Resolved
identity<void> seems broken
http://cplusplus.github.io/LWG/lwg-defects.html#823



Walter Brown
-
d:lwg824
LWG824

CD1
rvalue ref issue with basic_string inserter
http://cplusplus.github.io/LWG/lwg-defects.html#824



Alisdair Meredith
-
d:lwg825
LWG825

Resolved
Missing rvalues reference stream insert/extract operators?
http://cplusplus.github.io/LWG/lwg-defects.html#825



Alisdair Meredith
-
d:lwg826
LWG826

NAD
Equivalent of %'d, or rather, lack thereof?
http://cplusplus.github.io/LWG/lwg-closed.html#826



Peter Dimov
-
d:lwg827
LWG827

Resolved
constexpr shared_ptr::shared_ptr()?
http://cplusplus.github.io/LWG/lwg-defects.html#827



Peter Dimov
-
d:lwg828
LWG828

Resolved
Static initialization for std::mutex?
http://cplusplus.github.io/LWG/lwg-defects.html#828



Peter Dimov
-
d:lwg829
LWG829

CD1
current_exception wording unclear about exception type
http://cplusplus.github.io/LWG/lwg-defects.html#829



Beman Dawes
-
d:lwg83
LWG83

TC1
String::npos vs. string::max_size()
http://cplusplus.github.io/LWG/lwg-defects.html#83



Nico Josuttis
-
d:lwg830
LWG830

NAD Editorial
Incomplete list of char_traits specializations
http://cplusplus.github.io/LWG/lwg-closed.html#830



Dietmar Kühl
-
d:lwg831
LWG831

NAD Editorial
wrong type for not_eof()
http://cplusplus.github.io/LWG/lwg-closed.html#831



Dietmar Kühl
-
d:lwg832
LWG832

NAD
Applying constexpr to System error support
http://cplusplus.github.io/LWG/lwg-closed.html#832



Beman Dawes
-
d:lwg833
LWG833

NAD
Freestanding implementations header list needs review for C++0x
http://cplusplus.github.io/LWG/lwg-closed.html#833



Beman Dawes
-
d:lwg834
LWG834

Resolved
unique_ptr::pointer requirements underspecified
http://cplusplus.github.io/LWG/lwg-defects.html#834



Daniel Krügler
-
d:lwg835
LWG835

C++11
Tying two streams together (correction to DR 581)
http://cplusplus.github.io/LWG/lwg-defects.html#835



Martin Sebor
-
d:lwg836
LWG836

C++11
Effects of money_base::space and money_base::none on money_get
http://cplusplus.github.io/LWG/lwg-defects.html#836



Martin Sebor
-
d:lwg837
LWG837

NAD Editorial
basic_ios::copyfmt() overly loosely specified
http://cplusplus.github.io/LWG/lwg-closed.html#837



Martin Sebor
-
d:lwg838
LWG838

C++11
Can an end-of-stream iterator become a non-end-of-stream one?
http://cplusplus.github.io/LWG/lwg-defects.html#838



Martin Sebor
-
d:lwg839
LWG839

Tentatively Resolved
Maps and sets missing splice operation
http://cplusplus.github.io/LWG/lwg-active.html#839



Alan Talbot
-
d:lwg84
LWG84

NAD
Ambiguity with string::insert()
http://cplusplus.github.io/LWG/lwg-closed.html#84



Nico Josuttis
-
d:lwg840
LWG840

NAD
pair default template argument
http://cplusplus.github.io/LWG/lwg-closed.html#840



Thorsten Ottosen
-
d:lwg841
LWG841

NAD Editorial
cstdint.syn inconsistent with C99
http://cplusplus.github.io/LWG/lwg-closed.html#841



Martin Sebor
-
d:lwg842
LWG842

CD1
ConstructibleAsElement and bit containers
http://cplusplus.github.io/LWG/lwg-defects.html#842



Howard Hinnant
-
d:lwg843
LWG843

CD1
Reference Closure
http://cplusplus.github.io/LWG/lwg-defects.html#843



Lawrence Crowl
-
d:lwg844
LWG844

CD1
complex pow return type is ambiguous
http://cplusplus.github.io/LWG/lwg-defects.html#844



Howard Hinnant
-
d:lwg845
LWG845

CD1
atomics cannot support aggregate initialization
http://cplusplus.github.io/LWG/lwg-defects.html#845



Alisdair Meredith
-
d:lwg846
LWG846

CD1
No definition for constructor
http://cplusplus.github.io/LWG/lwg-defects.html#846



Alisdair Meredith
-
d:lwg847
LWG847

C++11
string exception safety guarantees
http://cplusplus.github.io/LWG/lwg-defects.html#847



Hervé Brönnimann
-
d:lwg848
LWG848

CD1
Missing std::hash specializations for std::bitset/std::vector<bool>
http://cplusplus.github.io/LWG/lwg-defects.html#848



Thorsten Ottosen
-
d:lwg849
LWG849

NAD
missing type traits to compute root class and derived class of types in a class hierachy
http://cplusplus.github.io/LWG/lwg-closed.html#849



Thorsten Ottosen
-
d:lwg85
LWG85

NAD
String char types
http://cplusplus.github.io/LWG/lwg-closed.html#85



Nico Josuttis
-
d:lwg850
LWG850

CD1
Should shrink_to_fit apply to std::deque?
http://cplusplus.github.io/LWG/lwg-defects.html#850



Niels Dekker
-
d:lwg851
LWG851

LEWG
simplified array construction
http://cplusplus.github.io/LWG/lwg-active.html#851



Benjamin Kosnik
-
d:lwg852
LWG852

CD1
unordered containers begin(n) mistakenly const
http://cplusplus.github.io/LWG/lwg-defects.html#852



Robert Klarer
-
d:lwg853
LWG853

C++11
to_string needs updating with zero and one
http://cplusplus.github.io/LWG/lwg-defects.html#853



Howard Hinnant
-
d:lwg854
LWG854

C++11
default_delete converting constructor underspecified
http://cplusplus.github.io/LWG/lwg-defects.html#854



Howard Hinnant
-
d:lwg855
LWG855

NAD
capacity() and reserve() for deque?
http://cplusplus.github.io/LWG/lwg-closed.html#855



Hervé Brönnimann
-
d:lwg856
LWG856

CD1
Removal of aligned_union
http://cplusplus.github.io/LWG/lwg-defects.html#856



Jens Maurer
-
d:lwg857
LWG857

C++11
condition_variable::time_wait return bool error prone
http://cplusplus.github.io/LWG/lwg-defects.html#857



Beman Dawes
-
d:lwg858
LWG858

CD1
Wording for Minimal Support for Garbage Collection
http://cplusplus.github.io/LWG/lwg-defects.html#858



Pete Becker
-
d:lwg859
LWG859

C++11
Monotonic Clock is Conditionally Supported?
http://cplusplus.github.io/LWG/lwg-defects.html#859



Pete Becker
-
d:lwg86
LWG86

TC1
String constructors don't describe exceptions
http://cplusplus.github.io/LWG/lwg-defects.html#86



Nico Josuttis
-
d:lwg860
LWG860

C++11
Floating-Point State
http://cplusplus.github.io/LWG/lwg-defects.html#860



Lawrence Crowl
-
d:lwg861
LWG861

C++11
Incomplete specification of EqualityComparable for std::forward_list
http://cplusplus.github.io/LWG/lwg-defects.html#861



Daniel Krügler
-
d:lwg862
LWG862

NAD Editorial
Impossible complexity for 'includes'
http://cplusplus.github.io/LWG/lwg-closed.html#862



Alisdair Meredith
-
d:lwg863
LWG863

NAD
What is the state of a stream after close() succeeds
http://cplusplus.github.io/LWG/lwg-closed.html#863



Steve Clamage
-
d:lwg864
LWG864

NAD Editorial
Defect in atomic wording
http://cplusplus.github.io/LWG/lwg-closed.html#864



Anthony Williams
-
d:lwg865
LWG865

C++11
More algorithms that throw away information
http://cplusplus.github.io/LWG/lwg-defects.html#865



Daniel Krügler
-
d:lwg866
LWG866

C++11
Qualification of placement new-expressions
http://cplusplus.github.io/LWG/lwg-defects.html#866



Alberto Ganesh Barbati
-
d:lwg867
LWG867

NAD Editorial
Valarray and value-initialization
http://cplusplus.github.io/LWG/lwg-closed.html#867



Alberto Ganesh Barbati
-
d:lwg868
LWG868

C++11
Default construction and value-initialization
http://cplusplus.github.io/LWG/lwg-defects.html#868



Alberto Ganesh Barbati
-
d:lwg869
LWG869

C++11
Bucket (local) iterators and iterating past end
http://cplusplus.github.io/LWG/lwg-defects.html#869



Sohail Somani
-
d:lwg87
LWG87

Dup
Error in description of string::compare()
http://cplusplus.github.io/LWG/lwg-closed.html#87



Nico Josuttis
-
d:lwg870
LWG870

C++11
Do unordered containers not support function pointers for predicate/hasher?
http://cplusplus.github.io/LWG/lwg-defects.html#870



Daniel Krügler
-
d:lwg871
LWG871

C++11
Iota's requirements on T are too strong
http://cplusplus.github.io/LWG/lwg-defects.html#871



Daniel Krügler
-
d:lwg872
LWG872

C++11
move_iterator::operator[] has wrong return type
http://cplusplus.github.io/LWG/lwg-defects.html#872



Doug Gregor
-
d:lwg873
LWG873

NAD Editorial
signed integral type and unsigned integral type are not clearly defined
http://cplusplus.github.io/LWG/lwg-closed.html#873



Travis Vitek
-
d:lwg874
LWG874

Resolved
Missing initializer_list constructor for discrete_distribution
http://cplusplus.github.io/LWG/lwg-defects.html#874



Daniel Krügler
-
d:lwg875
LWG875

Resolved
Missing initializer_list constructor for piecewise_constant_distribution
http://cplusplus.github.io/LWG/lwg-defects.html#875



Daniel Krügler
-
d:lwg876
LWG876

C++11
basic_string access operations should give stronger guarantees
http://cplusplus.github.io/LWG/lwg-defects.html#876



Daniel Krügler
-
d:lwg877
LWG877

LEWG
to throw() or to Throw: Nothing.
http://cplusplus.github.io/LWG/lwg-active.html#877



Martin Sebor
-
d:lwg878
LWG878

C++11
forward_list preconditions
http://cplusplus.github.io/LWG/lwg-defects.html#878



Martin Sebor
-
d:lwg879
LWG879

NAD Editorial
Atomic load const qualification
http://cplusplus.github.io/LWG/lwg-closed.html#879



Alexander Chemeris
-
d:lwg88
LWG88

NAD
Inconsistency between string::insert() and string::append()
http://cplusplus.github.io/LWG/lwg-closed.html#88



Nico Josuttis
-
d:lwg880
LWG880

Resolved
Missing atomic exchange parameter
http://cplusplus.github.io/LWG/lwg-defects.html#880



Lawrence Crowl
-
d:lwg881
LWG881

C++11
shared_ptr conversion issue
http://cplusplus.github.io/LWG/lwg-defects.html#881



Peter Dimov
-
d:lwg882
LWG882

CD1
duration non-member arithmetic requirements
http://cplusplus.github.io/LWG/lwg-defects.html#882



Howard Hinnant
-
d:lwg883
LWG883

C++11
swap circular definition
http://cplusplus.github.io/LWG/lwg-defects.html#883



Alisdair Meredith
-
d:lwg884
LWG884

Resolved
shared_ptr swap
http://cplusplus.github.io/LWG/lwg-defects.html#884



Jonathan Wakely
-
d:lwg885
LWG885

C++11
pair assignment
http://cplusplus.github.io/LWG/lwg-defects.html#885



Alisdair Meredith
-
d:lwg886
LWG886

C++11
tuple construction
http://cplusplus.github.io/LWG/lwg-defects.html#886



Alisdair Meredith
-
d:lwg887
LWG887

NAD
issue with condition::wait_...
http://cplusplus.github.io/LWG/lwg-closed.html#887



Lawrence Crowl
-
d:lwg888
LWG888

C++11
this_thread::yield too strong
http://cplusplus.github.io/LWG/lwg-defects.html#888



Lawrence Crowl
-
d:lwg889
LWG889

Resolved
thread::id comparisons
http://cplusplus.github.io/LWG/lwg-defects.html#889



Lawrence Crowl
-
d:lwg89
LWG89

Dup
Missing throw specification for string::insert() and string::replace()
http://cplusplus.github.io/LWG/lwg-closed.html#89



Nico Josuttis
-
d:lwg890
LWG890

C++11
Improving <system_error> initialization
http://cplusplus.github.io/LWG/lwg-defects.html#890



Beman Dawes
-
d:lwg891
LWG891

C++11
std::thread, std::call_once issue
http://cplusplus.github.io/LWG/lwg-defects.html#891



Peter Dimov
-
d:lwg892
LWG892

NAD Editorial
Forward_list issues...
http://cplusplus.github.io/LWG/lwg-closed.html#892



Ed Smith-Rowland
-
d:lwg893
LWG893

C++11
std::mutex issue
http://cplusplus.github.io/LWG/lwg-defects.html#893



Peter Dimov
-
d:lwg894
LWG894

C++11
longjmp and destructors
http://cplusplus.github.io/LWG/lwg-defects.html#894



Lawrence Crowl, Alisdair Meredith
-
d:lwg895
LWG895

Dup
"Requires:" on std::string::at et al
http://cplusplus.github.io/LWG/lwg-closed.html#895



James Dennett
-
d:lwg896
LWG896

C++11
Library thread safety issue
http://cplusplus.github.io/LWG/lwg-defects.html#896



Hans Boehm
-
d:lwg897
LWG897

Resolved
Forward_list issues... Part 2
http://cplusplus.github.io/LWG/lwg-defects.html#897



Howard Hinnant
-
d:lwg898
LWG898

C++11
Small contradiction in n2723 to forward to committee
http://cplusplus.github.io/LWG/lwg-defects.html#898



Arch Robison
-
d:lwg899
LWG899

C++11
Adjusting shared_ptr for nullptr_t
http://cplusplus.github.io/LWG/lwg-defects.html#899



Peter Dimov
-
d:lwg9
LWG9

TC1
Operator new(0) calls should not yield the same pointer
http://cplusplus.github.io/LWG/lwg-defects.html#9



Steve Clamage
-
d:lwg90
LWG90

TC1
Incorrect description of operator >> for strings
http://cplusplus.github.io/LWG/lwg-defects.html#90



Nico Josuttis
-
d:lwg900
LWG900

C++11
Stream move-assignment
http://cplusplus.github.io/LWG/lwg-defects.html#900



Niels Dekker
-
d:lwg901
LWG901

NAD
insert iterators can move from lvalues
http://cplusplus.github.io/LWG/lwg-closed.html#901



Alisdair Meredith
-
d:lwg902
LWG902

NAD Concepts
Regular is the wrong concept to constrain numeric_limits
http://cplusplus.github.io/LWG/lwg-closed.html#902



Alisdair Meredith
-
d:lwg903
LWG903

NAD
back_insert_iterator issue
http://cplusplus.github.io/LWG/lwg-closed.html#903



Dave Abrahams
-
d:lwg904
LWG904

C++11
result_of argument types
http://cplusplus.github.io/LWG/lwg-defects.html#904



Jonathan Wakely
-
d:lwg905
LWG905

Dup
Mutex specification questions
http://cplusplus.github.io/LWG/lwg-closed.html#905



Herb Sutter
-
d:lwg906
LWG906

NAD Concepts
ObjectType is the wrong concept to constrain initializer_list
http://cplusplus.github.io/LWG/lwg-closed.html#906



Daniel Krügler
-
d:lwg907
LWG907

C++11
Bitset's immutable element retrieval is inconsistently defined
http://cplusplus.github.io/LWG/lwg-defects.html#907



Daniel Krügler
-
d:lwg908
LWG908

Resolved
Deleted assignment operators for atomic types must be volatile
http://cplusplus.github.io/LWG/lwg-defects.html#908



Anthony Williams
-
d:lwg909
LWG909

C++11
regex_token_iterator should use initializer_list
http://cplusplus.github.io/LWG/lwg-defects.html#909



Daniel Krügler
-
d:lwg91
LWG91

CD1
Description of operator>> and getline() for string<> might cause endless loop
http://cplusplus.github.io/LWG/lwg-defects.html#91



Nico Josuttis
-
d:lwg910
LWG910

NAD Concepts
Effects of MoveAssignable
http://cplusplus.github.io/LWG/lwg-closed.html#910



Alberto Ganesh Barbati
-
d:lwg911
LWG911

C++11
I/O streams and move/swap semantic
http://cplusplus.github.io/LWG/lwg-defects.html#911



Alberto Ganesh Barbati
-
d:lwg912
LWG912

NAD Concepts
Array swap needs to be conceptualized
http://cplusplus.github.io/LWG/lwg-closed.html#912



Daniel Krügler
-
d:lwg913
LWG913

NAD Concepts
Superfluous requirements for replace algorithms
http://cplusplus.github.io/LWG/lwg-closed.html#913



Daniel Krügler
-
d:lwg914
LWG914

NAD Concepts
Superfluous requirement for unique
http://cplusplus.github.io/LWG/lwg-closed.html#914



Daniel Krügler
-
d:lwg915
LWG915

NAD Editorial
minmax with initializer_list should return pair of T, not pair of const T&
http://cplusplus.github.io/LWG/lwg-closed.html#915



Daniel Krügler
-
d:lwg916
LWG916

NAD
Redundant move-assignment operator of pair should be removed
http://cplusplus.github.io/LWG/lwg-closed.html#916



Daniel Krügler
-
d:lwg917
LWG917

NAD
Redundant move-assignment operator of tuple should be removed
http://cplusplus.github.io/LWG/lwg-closed.html#917



Daniel Krügler
-
d:lwg918
LWG918

NAD Concepts
Swap for tuple needs to be conceptualized
http://cplusplus.github.io/LWG/lwg-closed.html#918



Daniel Krügler
-
d:lwg919
LWG919

NAD
(forward_)list specialized remove algorithms are over constrained
http://cplusplus.github.io/LWG/lwg-closed.html#919



Daniel Krügler
-
d:lwg92
LWG92

CD1
Incomplete Algorithm Requirements
http://cplusplus.github.io/LWG/lwg-defects.html#92



Nico Josuttis
-
d:lwg920
LWG920

C++11
Ref-qualification support in the library
http://cplusplus.github.io/LWG/lwg-defects.html#920



Bronek Kozicki
-
d:lwg921
LWG921

C++11
Rational Arithmetic should use template aliases
http://cplusplus.github.io/LWG/lwg-defects.html#921



Pablo Halpern
-
d:lwg922
LWG922

C++11
§[func.bind.place] Number of placeholders
http://cplusplus.github.io/LWG/lwg-defects.html#922



Sohail Somani
-
d:lwg923
LWG923

Resolved
atomics with floating-point
http://cplusplus.github.io/LWG/lwg-defects.html#923



Herb Sutter
-
d:lwg924
LWG924

Resolved
structs with internal padding
http://cplusplus.github.io/LWG/lwg-defects.html#924



Herb Sutter
-
d:lwg925
LWG925

C++11
shared_ptr's explicit conversion from unique_ptr
http://cplusplus.github.io/LWG/lwg-defects.html#925



Rodolfo Lima
-
d:lwg926
LWG926

NAD Editorial
Sequentially consistent fences, relaxed operations and modification order
http://cplusplus.github.io/LWG/lwg-closed.html#926



Anthony Williams
-
d:lwg927
LWG927

NAD Concepts
Dereferenceable should be HasDereference
http://cplusplus.github.io/LWG/lwg-closed.html#927



Pablo Halpern
-
d:lwg928
LWG928

NAD Concepts
Wrong concepts used for tuple's comparison operators
http://cplusplus.github.io/LWG/lwg-closed.html#928



Joe Gottman
-
d:lwg929
LWG929

C++11
Thread constructor
http://cplusplus.github.io/LWG/lwg-defects.html#929



Anthony Williams
-
d:lwg93
LWG93

NAD
Incomplete Valarray Subset Definitions
http://cplusplus.github.io/LWG/lwg-closed.html#93



Nico Josuttis
-
d:lwg930
LWG930

NAD
Access to std::array data as built-in array type
http://cplusplus.github.io/LWG/lwg-closed.html#930



Niels Dekker
-
d:lwg931
LWG931

C++11
type trait extent<T, I>
http://cplusplus.github.io/LWG/lwg-defects.html#931



Yechezkel Mett
-
d:lwg932
LWG932

Resolved
unique_ptr(pointer p) for pointer deleter types
http://cplusplus.github.io/LWG/lwg-defects.html#932



Howard Hinnant
-
d:lwg933
LWG933

LEWG
Unique_ptr defect
http://cplusplus.github.io/LWG/lwg-active.html#933



Alisdair Meredith
-
d:lwg934
LWG934

C++11
duration is missing operator%
http://cplusplus.github.io/LWG/lwg-defects.html#934



Terry Golubiewski
-
d:lwg935
LWG935

LEWG
clock error handling needs to be specified
http://cplusplus.github.io/LWG/lwg-active.html#935



Beman Dawes
-
d:lwg936
LWG936

LEWG
Mutex type overspecified
http://cplusplus.github.io/LWG/lwg-active.html#936



Pete Becker
-
d:lwg937
LWG937

NAD Editorial
Atomics for standard typedef types
http://cplusplus.github.io/LWG/lwg-closed.html#937



Clark Nelson
-
d:lwg938
LWG938

C++11
default_delete<T[]>::operator() should only accept T*
http://cplusplus.github.io/LWG/lwg-defects.html#938



Howard Hinnant
-
d:lwg939
LWG939

C++11
Problem with std::identity and reference-to-temporaries
http://cplusplus.github.io/LWG/lwg-defects.html#939



Alisdair Meredith
-
d:lwg94
LWG94

NAD
May library implementors add template parameters to Standard Library classes?
http://cplusplus.github.io/LWG/lwg-closed.html#94



Matt Austern
-
d:lwg940
LWG940

Resolved
std::distance
http://cplusplus.github.io/LWG/lwg-defects.html#940



Thomas
-
d:lwg941
LWG941

NAD
Ref-qualifiers for assignment operators
http://cplusplus.github.io/LWG/lwg-closed.html#941



Niels Dekker
-
d:lwg942
LWG942

Dup
Atomics synopsis typo
http://cplusplus.github.io/LWG/lwg-closed.html#942



Holger Grund
-
d:lwg943
LWG943

C++11
ssize_t undefined
http://cplusplus.github.io/LWG/lwg-defects.html#943



Holger Grund
-
d:lwg944
LWG944

Resolved
atomic<bool> derive from atomic_bool?
http://cplusplus.github.io/LWG/lwg-defects.html#944



Holger Grund
-
d:lwg945
LWG945

NAD Editorial
system_clock::rep not specified
http://cplusplus.github.io/LWG/lwg-closed.html#945



Pete Becker
-
d:lwg946
LWG946

NAD
duration_cast improperly specified
http://cplusplus.github.io/LWG/lwg-closed.html#946



Pete Becker
-
d:lwg947
LWG947

Resolved
duration arithmetic: contradictory requirements
http://cplusplus.github.io/LWG/lwg-defects.html#947



Pete Becker
-
d:lwg948
LWG948

C++11
ratio arithmetic tweak
http://cplusplus.github.io/LWG/lwg-defects.html#948



Howard Hinnant
-
d:lwg949
LWG949

C++11
owner_less
http://cplusplus.github.io/LWG/lwg-defects.html#949



Thomas Plum
-
d:lwg95
LWG95

NAD
Members added by the implementation
http://cplusplus.github.io/LWG/lwg-closed.html#95



AFNOR
-
d:lwg950
LWG950

Resolved
unique_ptr converting ctor shouldn't accept array form
http://cplusplus.github.io/LWG/lwg-defects.html#950



Howard Hinnant
-
d:lwg951
LWG951

C++11
Various threading bugs #1
http://cplusplus.github.io/LWG/lwg-defects.html#951



Pete Becker
-
d:lwg952
LWG952

NAD Editorial
Various threading bugs #2
http://cplusplus.github.io/LWG/lwg-closed.html#952



Pete Becker
-
d:lwg953
LWG953

Resolved
Various threading bugs #3
http://cplusplus.github.io/LWG/lwg-defects.html#953



Pete Becker
-
d:lwg954
LWG954

C++11
Various threading bugs #4
http://cplusplus.github.io/LWG/lwg-defects.html#954



Pete Becker
-
d:lwg955
LWG955

NAD
Various threading bugs #5
http://cplusplus.github.io/LWG/lwg-closed.html#955



Pete Becker
-
d:lwg956
LWG956

C++11
Various threading bugs #6
http://cplusplus.github.io/LWG/lwg-defects.html#956



Pete Becker
-
d:lwg957
LWG957

C++11
Various threading bugs #7
http://cplusplus.github.io/LWG/lwg-defects.html#957



Pete Becker
-
d:lwg958
LWG958

Resolved
Various threading bugs #8
http://cplusplus.github.io/LWG/lwg-defects.html#958



Pete Becker
-
d:lwg959
LWG959

NAD
Various threading bugs #9
http://cplusplus.github.io/LWG/lwg-closed.html#959



Pete Becker
-
d:lwg96
LWG96

NAD
Vector<bool> is not a container
http://cplusplus.github.io/LWG/lwg-closed.html#96



AFNOR
-
d:lwg960
LWG960

C++11
Various threading bugs #10
http://cplusplus.github.io/LWG/lwg-defects.html#960



Pete Becker
-
d:lwg961
LWG961

LEWG
Various threading bugs #11
http://cplusplus.github.io/LWG/lwg-active.html#961



Pete Becker
-
d:lwg962
LWG962

C++11
Various threading bugs #12
http://cplusplus.github.io/LWG/lwg-defects.html#962



Pete Becker
-
d:lwg963
LWG963

C++11
Various threading bugs #13
http://cplusplus.github.io/LWG/lwg-defects.html#963



Pete Becker
-
d:lwg964
LWG964

Resolved
Various threading bugs #14
http://cplusplus.github.io/LWG/lwg-defects.html#964



Pete Becker
-
d:lwg965
LWG965

C++11
Various threading bugs #15
http://cplusplus.github.io/LWG/lwg-defects.html#965



Pete Becker
-
d:lwg966
LWG966

Resolved
Various threading bugs #16
http://cplusplus.github.io/LWG/lwg-defects.html#966



Pete Becker
-
d:lwg967
LWG967

C++11
Various threading bugs #17
http://cplusplus.github.io/LWG/lwg-defects.html#967



Pete Becker
-
d:lwg968
LWG968

C++11
Various threading bugs #18
http://cplusplus.github.io/LWG/lwg-defects.html#968



Pete Becker
-
d:lwg969
LWG969

NAD Editorial
What happened to Library Issue 475?
http://cplusplus.github.io/LWG/lwg-closed.html#969



Stephan T. Lavavej
-
d:lwg97
LWG97

NAD
Insert inconsistent definition
http://cplusplus.github.io/LWG/lwg-closed.html#97



AFNOR
-
d:lwg970
LWG970

C++11
addressof overload unneeded
http://cplusplus.github.io/LWG/lwg-defects.html#970



Howard Hinnant
-
d:lwg971
LWG971

NAD
Spurious diagnostic conversion function
http://cplusplus.github.io/LWG/lwg-closed.html#971



Beman Dawes
-
d:lwg972
LWG972

NAD Editorial
The term "Assignable" undefined but still in use
http://cplusplus.github.io/LWG/lwg-closed.html#972



Niels Dekker
-
d:lwg973
LWG973

NAD Editorial
auto_ptr characteristics
http://cplusplus.github.io/LWG/lwg-closed.html#973



Maarten Hilferink
-
d:lwg974
LWG974

C++11
duration<double> should not implicitly convert to duration<int>
http://cplusplus.github.io/LWG/lwg-defects.html#974



Howard Hinnant
-
d:lwg975
LWG975

C++11
is_convertible cannot be instantiated for non-convertible types
http://cplusplus.github.io/LWG/lwg-defects.html#975



Daniel Krügler
-
d:lwg976
LWG976

Resolved
Class template std::stack should be movable
http://cplusplus.github.io/LWG/lwg-defects.html#976



Daniel Krügler
-
d:lwg977
LWG977

NAD
insert iterators inefficient for expensive to move types
http://cplusplus.github.io/LWG/lwg-closed.html#977



Howard Hinnant
-
d:lwg978
LWG978

C++11
Hashing smart pointers
http://cplusplus.github.io/LWG/lwg-defects.html#978



Alisdair Meredith
-
d:lwg979
LWG979

NAD Editorial
Bad example
http://cplusplus.github.io/LWG/lwg-closed.html#979



Howard Hinnant
-
d:lwg98
LWG98

CD1
Input iterator requirements are badly written
http://cplusplus.github.io/LWG/lwg-defects.html#98



AFNOR
-
d:lwg980
LWG980

NAD
mutex lock() missing error conditions
http://cplusplus.github.io/LWG/lwg-closed.html#980



Ion Gaztañaga
-
d:lwg981
LWG981

C++11
Unordered container requirements should add initializer_list support
http://cplusplus.github.io/LWG/lwg-defects.html#981



Daniel Krügler
-
d:lwg982
LWG982

C++11
Wrong complexity for initializer_list assignment in Table 85
http://cplusplus.github.io/LWG/lwg-defects.html#982



Daniel Krügler
-
d:lwg983
LWG983

Resolved
unique_ptr reference deleters should not be moved from
http://cplusplus.github.io/LWG/lwg-defects.html#983



Howard Hinnant
-
d:lwg984
LWG984

C++11
Does <cinttypes> have macro guards?
http://cplusplus.github.io/LWG/lwg-defects.html#984



Howard Hinnant
-
d:lwg985
LWG985

Resolved
Allowing throwing move
http://cplusplus.github.io/LWG/lwg-defects.html#985



Rani Sharoni
-
d:lwg986
LWG986

C++11
Generic try_lock contradiction
http://cplusplus.github.io/LWG/lwg-defects.html#986



Chris Fairles
-
d:lwg987
LWG987

C++11
reference_wrapper and function types
http://cplusplus.github.io/LWG/lwg-defects.html#987



Howard Hinnant
-
d:lwg988
LWG988

NAD
Reflexivity meaningless?
http://cplusplus.github.io/LWG/lwg-closed.html#988



Alisdair Meredith
-
d:lwg989
LWG989

NAD Concepts
late_check and library
http://cplusplus.github.io/LWG/lwg-closed.html#989



Alisdair Meredith
-
d:lwg99
LWG99

NAD
Reverse_iterator comparisons completely wrong
http://cplusplus.github.io/LWG/lwg-closed.html#99



AFNOR
-
d:lwg990
LWG990

C++11
monotonic_clock::is_monotonic must be true
http://cplusplus.github.io/LWG/lwg-defects.html#990



Howard Hinnant
-
d:lwg991
LWG991

C++11
Provide allocator for wstring_convert
http://cplusplus.github.io/LWG/lwg-defects.html#991



P.J. Plauger
-
d:lwg992
LWG992

NAD
Allow implementations to implement C library in the global namespace
http://cplusplus.github.io/LWG/lwg-closed.html#992



P.J. Plauger
-
d:lwg993
LWG993

C++11
_Exit needs better specification
http://cplusplus.github.io/LWG/lwg-defects.html#993



P.J. Plauger
-
d:lwg994
LWG994

C++11
quick_exit should terminate well-defined
http://cplusplus.github.io/LWG/lwg-defects.html#994



P.J. Plauger
-
d:lwg995
LWG995

NAD
Operational Semantics Unclear
http://cplusplus.github.io/LWG/lwg-closed.html#995



David Abrahams
-
d:lwg996
LWG996

NAD
Move operation not well specified
http://cplusplus.github.io/LWG/lwg-closed.html#996



David Abrahams
-
d:lwg997
LWG997

C++11
"Effects: Equivalent to" is underspecified
http://cplusplus.github.io/LWG/lwg-defects.html#997



Thomas Plum
-
d:lwg998
LWG998

C++11
Smart pointer referencing its owner
http://cplusplus.github.io/LWG/lwg-defects.html#998



Pavel Minaev
-
d:lwg999
LWG999

C++11
Taking the address of a function
http://cplusplus.github.io/LWG/lwg-defects.html#999



Peter Dimov
-
