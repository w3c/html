<section>

<h3 id="sections">Sections</h3>
<h4 id="the-body-element">The <dfn element><code>body</code></dfn> element</h4>

  <dl class="element">
    <dt><a>Categories</a>:</dt>
    <dd><a>Sectioning root</a>.</dd>
    <dt><a>Contexts in which this element can be used</a>:</dt>
    <dd>As the second element in an <{html}> element.</dd>
    <dt><a>Content model</a>:</dt>
    <dd><a>Flow content</a>.</dd>
    <dt><a>Tag omission in text/html</a>:</dt>
    <dd>
      A <{body}> element's <a>start tag</a> may be omitted if the element is empty, or if
      the first thing inside the <{body}> element is not a <a>space character</a> or a
      <a>comment</a>, except if the first thing inside the <{body}> element is a
      <{meta}>, <{link}>, <{script}>, <{style}>, or
      <{template}> element.</dd>
    <dd>
      A <{body}> element's <a>end tag</a> may be omitted if the <{body}> element
      is not immediately followed by a <a>comment</a>.
    </dd>
    <dt><a>Content attributes</a>:</dt>
    <dd><a>Global attributes</a></dd>
    <dd><code>onafterprint</code></dd>
    <dd><code>onbeforeprint</code></dd>
    <dd><code>onbeforeunload</code></dd>
    <dd><code>onhashchange</code></dd>
    <dd><code>onlanguagechange</code></dd>
    <dd><code>onmessage</code></dd>
    <dd><code>onoffline</code></dd>
    <dd><code>ononline</code></dd>
    <dd><code>onpagehide</code></dd>
    <dd><code>onpageshow</code></dd>
    <dd><code>onpopstate</code></dd>
    <dd><code>onrejectionhandled</code></dd>
    <dd><code>onstorage</code></dd>
    <dd><code>onunhandledrejection</code></dd>
    <dd><code>onunload</code></dd>
    <dt>Allowed <a href="#aria-role-attribute">ARIA role attribute</a> values:</dt>
    <dd>
      <a value for="role"><code>document</code></a> role (default - <a><em>do not set</em></a>),
      <a value for="role"><code>application</code></a>.
    </dd>
    <dt>Allowed <a href="#state-and-property-attributes">ARIA state and property attributes</a>:</dt>
    <dd><a>Global aria-* attributes</a></dd>
    <dd>Any <code>aria-*</code> attributes <a href="#allowed-aria-roles-states-and-properties">applicable to the allowed roles</a>.</dd>
    <dt><a>DOM interface</a>:</dt>
    <dd>
      <pre class="idl" data-highlight="webidl" dfn-for="HTMLBodyElement">
        interface HTMLBodyElement : HTMLElement {
        };
        HTMLBodyElement implements WindowEventHandlers;
      </pre>
    </dd>
  </dl>

  The <{body}> element <a>represents</a> the content of the document.

  In <a lt="conforming document">conforming documents</a>, there is only one <{body}> element. The
  <code>document.body</code> IDL attribute provides scripts with easy access to a document's
  <{body}> element.

  <p class="note">
    Some DOM operations (for example, parts of the <a href="#drag-and-drop">drag and drop</a> model) are defined in terms
    of "<a href="#the-body-element">the <code>body</code> element</a>". This refers to a particular element in the DOM, as per the
    definition of the term, and not any arbitrary <{body}> element.
  </p>

  The <{body}> element exposes as <a>event handler content attributes</a> a number of the
  <a>event handlers</a> of the <code>Window</code> object. It also mirrors their
  <a>event handler IDL attributes</a>.

  The <code>onblur</code>, <code>onerror</code>, <code>onfocus</code>, <a attribute for="GlobalEventHandlers"><code>onload</code></a>,
  <code>onresize</code>, and <code>onscroll</code> <a>event handlers</a> of the <code>Window</code>
  object, exposed on the <{body}> element, replace the generic <a>event handlers</a> with
  the same names normally supported by <a>html elements</a>.

  <p class="example">
    Thus, for example, a bubbling <code>error</code> event dispatched on a child of
    <a href="#the-body-element">the <code>body</code> element</a> of a {{Document}} would first trigger the <code>onerror</code>
    <a>event handler content attributes</a> of that element, then that of the root <code>html</code>
    element, and only <em>then</em> would it trigger the <code>onerror</code> <a>event handler
    content attribute</a> on the <{body}> element. This is because the event would bubble
    from the target, to the <{body}>, to the <{html}>, to the
    {{Document}}, to the {{Window}}, and the <a>event handler</a> on the
    <{body}> is watching the <code>Window</code> not the <{body}>. A regular event
    listener attached to the <{body}> using <code>addEventListener()</code>, however, would
    be run when the event bubbled through the <code>body</code> and not when it reaches the
    <code>Window</code> object.
  </p>

  <div class="example">
    This page updates an indicator to show whether or not the user is online:

    <pre highlight="html">
      &lt;!DOCTYPE HTML&gt;
      &lt;html&gt;
        &lt;head&gt;
          &lt;title&gt;Online or offline?&lt;/title&gt;
          &lt;script&gt;
            function update(online) {
              document.getElementById('status').textContent =
              online ? 'Online' : 'Offline';
            }
          &lt;/script&gt;
        &lt;/head&gt;
        &lt;body ononline="update(true)"
          onoffline="update(false)"
          onload="update(navigator.onLine)"&gt;
          &lt;p&gt;You are: &lt;span id="status"&gt;(Unknown)&lt;/span&gt;&lt;/p&gt;
        &lt;/body&gt;
      &lt;/html&gt;
    </pre>
  </div>

<h4 id="the-article-element">The <dfn element><code>article</code></dfn> element</h4>

  <dl class="element">
    <dt><a>Categories</a>:</dt>
    <dd><a>Flow content</a>, but with no <{main}> element descendants.</dd>
    <dd><a>Sectioning content</a>.</dd>
    <dd><a>Palpable content</a>.</dd>
    <dt><a>Contexts in which this element can be used</a>:</dt>
    <dd>Where <a>flow content</a> is expected.</dd>
    <dt><a>Content model</a>:</dt>
    <dd><a>Flow content</a>.</dd>
    <dt><a>Tag omission in text/html</a>:</dt>
    <dd>Neither tag is omissible</dd>
    <dt><a>Content attributes</a>:</dt>
    <dd><a>Global attributes</a></dd>
    <dt>Allowed <a href="#aria-role-attribute">ARIA role attribute</a> values:</dt>
    <dd>
      <a value for="role"><code>article</code></a> (default - <a><em>do not set</em></a>),
      <a value for="role"><code>application</code></a>, <a value for="role"><code>document</code></a> or <a value for="role"><code>main</code></a>.
    </dd>
    <dt>Allowed <a href="#state-and-property-attributes">ARIA state and property attributes</a>:</dt>
    <dd><a>Global aria-* attributes</a></dd>
    <dd>Any <code>aria-*</code> attributes <a href="#allowed-aria-roles-states-and-properties">applicable to the allowed roles</a>.</dd>
    <dt><a>DOM interface</a>:</dt>
    <dd>Uses {{HTMLElement}}.</dd>
  </dl>

  The <{article}> element <a>represents</a> a complete, or self-contained, composition in a document, 
  page, application, or site. This could be a magazine, newspaper, technical or 
  scholarly article, an essay or report, a blog or other social media post. 
  
  A general rule is that the <{article}> element is appropriate only if the element's
  contents would be listed explicitly in the document's outline. Each <{article}> should be 
  identified, typically by including a heading(<{h1}>-<{h6}> element) as a child of the <{article}> 
  element.

  <p>Assistive Technology may convey the semantics of the <{article}> to users. This
  information can provide a hint to users as to the type of content. For example the <a>role</a> of 
  the element, which in this case matches the element name "article", can be announced by 
  screen reader software when a user navigates to an <{article}> element. User Agents 
  may also provide methods to navigate to <{article}> elements.</p>
  
  When <{article}> elements are nested, the inner <{article}> elements represent
  articles that are in principle related to the contents of the outer article. For instance, a blog
  entry on a site could consist of summaries of other blog entries in <{article}> elements nested 
  within the <{article}> element for the blog entry.

  Author information associated with an <{article}> element (q.v. the <code>address</code>
  element) does not apply to nested <{article}> elements.
  
  <div class="example">
 <p>The following is an example of a blog post extract, marked up using the <{article}> element:</p>
 <pre highlight="html">
 &lt;article&gt;
  &lt;header&gt;
   &lt;h2&gt;&lt;a href="http://herbert.io"&gt;Short note on wearing shorts&lt;/a&gt;&lt;/h2&gt;
    &lt;p&gt;Posted on Wednesday, 10 February 2016 by Patrick Lauke.
    &lt;a href="http://herbert.io/short-note/#comments"&gt;6 comments&lt;/a&gt;&lt;/p&gt;
  &lt;/header&gt;
  &lt;p&gt;A fellow traveller posed an interesting question: Why do you wear shorts rather than 
  longs? The person was wearing <em>culottes</em> as the time, so I considered the question equivocal in nature, 
  but I attempted to provide an honest answer despite the dubiousness of the questioner's dress.&lt;/p&gt; 
  &lt;p&gt;The short answer is that I enjoy wearing shorts, the long answer is...&lt;/p&gt;
  &lt;p&gt;&lt;a href="http://herbert.io/short-note/"&gt;Continue reading: Short note on 
  wearing shorts&lt;/a&gt;&lt;/p&gt;
 &lt;/article&gt;</pre>
 </div>

 <p class="note">The schema.org  vocabulary can be used to provide more granular information about 
  the type of article, using the <a href="http://schema.org/Article">CreativeWork - Article</a> 
  subtypes, other information such as the publication date for the article can also be provided.</p>
  
  <div class="example">
  <p>This example shows a blog post using the <code>article</code> element, with some schema.org
  annotations: </p>
  <pre highlight="html">      
      &lt;article itemscope <mark>itemtype="http://schema.org/BlogPosting"</mark>&gt;
        &lt;header&gt;
          &lt;h2 itemprop="headline"&gt;The Very First Rule of Life&lt;/h2&gt;
          &lt;p&gt;&lt;time <mark>itemprop="datePublished"</mark> datetime="2016-02-28"&gt;3 days ago&lt;/time&gt;&lt;/p&gt;
        &lt;/header&gt;
        &lt;p&gt;If there's a microphone anywhere near you, assume it's hot and
        sending whatever you're saying to the world. Seriously.&lt;/p&gt;
        &lt;p&gt;<em>...</em>&lt;/p&gt;
        &lt;footer&gt;
          &lt;a itemprop="discussionUrl" href="?comments=1"&gt;Show comments...&lt;/a&gt;
        &lt;/footer&gt;
      &lt;/article&gt;
    </pre>

    <p>Here is that same blog post, but showing some of the comments: </p>
  <pre highlight="html">     &lt;article itemscope itemtype="http://schema.org/BlogPosting"&gt;
        &lt;header&gt;
          &lt;h2 itemprop="headline"&gt;The Very First Rule of Life&lt;/h2&gt;
          &lt;p&gt;&lt;time itemprop="datePublished" datetime="2009-10-09"&gt;3 days ago&lt;/time&gt;&lt;/p&gt;
        &lt;/header&gt;
         &lt;p&gt;If there's a microphone anywhere near you, assume it's hot and
         sending whatever you're saying to the world. Seriously.&lt;/p&gt;
         &lt;p&gt;<em>...</em>&lt;/p&gt;
        &lt;section&gt;
          &lt;h3&gt;Comments&lt;/h3&gt;
          &lt;ol&gt;
           &lt;li itemprop="comment" itemscope itemtype="http://schema.org/UserComments" id="c1"&gt;
              &lt;p&gt;Posted by: &lt;span itemprop="creator" itemscope itemtype="http://schema.org/Person"&gt;
              &lt;span itemprop="name"&gt;George Washington&lt;/span&gt;
              &lt;/span&gt;&lt;/p&gt;
              &lt;p&gt;&lt;time itemprop="commentTime" datetime="2009-10-10"&gt;15 minutes ago&lt;/time&gt;&lt;/p&gt;
              &lt;p&gt;Yeah! Especially when talking about your lobbyist friends!&lt;/p&gt;
           &lt;li itemprop="comment" itemscope itemtype="http://schema.org/UserComments" id="c2"&gt;
              &lt;p&gt;Posted by: &lt;span itemprop="creator" itemscope itemtype="http://schema.org/Person"&gt;
              &lt;span itemprop="name"&gt;George Hammond&lt;/span&gt;
              &lt;/span&gt;&lt;/p&gt;
              &lt;p&gt;&lt;time itemprop="commentTime" datetime="2009-10-10"&gt;5 minutes ago&lt;/time&gt;&lt;/p&gt;
              &lt;p&gt;Hey, you have the same first name as me.&lt;/p&gt;
           &lt;/li&gt;
         &lt;/ol&gt;
        &lt;/section&gt;
      &lt;/section&gt;
    </pre>

    <p>Notice the use of an ordered list <code>ol</code> to organize the comments. Also note the 
	comments are a subsection of the article, identified using a <code>section</code> element.</p>
</div>


<h4 id="the-section-element">The <dfn element><code>section</code></dfn> element</h4>

  <dl class="element">
    <dt><a>Categories</a>:</dt>
    <dd><a>Flow content</a>.</dd>
    <dd><a>Sectioning content</a>.</dd>
    <dd><a>Palpable content</a>.</dd>
    <dt><a>Contexts in which this element can be used</a>:</dt>
    <dd>Where <a>flow content</a> is expected.</dd>
    <dt><a>Content model</a>:</dt>
    <dd><a>Flow content</a>.</dd>
    <dt><a>Tag omission in text/html</a>:</dt>
    <dd>Neither tag is omissible</dd>
    <dt><a>Content attributes</a>:</dt>
    <dd><a>Global attributes</a></dd>
    <dt>Allowed <a href="#aria-role-attribute">ARIA role attribute</a> values:</dt>
    <dd>
      <a value for="role"><code>region</code></a> role (default - <a><em>do not set</em></a>),
      <a value for="role"><code>alert</code></a>, <a value for="role"><code>alertdialog</code></a>, <a value for="role"><code>application</code></a>,
      <a value for="role"><code>contentinfo</code></a>, <a value for="role"><code>dialog</code></a>, <a value for="role"><code>document</code></a>,
      <a value for="role"><code>log</code></a>, <a value for="role"><code>main</code></a>, <a value for="role"><code>marquee</code></a>,
      <a value for="role"><code>presentation</code></a>, <a value for="role"><code>search</code></a> or <a value for="role"><code>status</code></a>.
    </dd>
    <dt>Allowed <a href="#state-and-property-attributes">ARIA state and property attributes</a>:</dt>
    <dd><a>Global aria-* attributes</a></dd>
    <dd>Any <code>aria-*</code> attributes <a href="#allowed-aria-roles-states-and-properties">applicable to the allowed roles</a>.</dd>
    <dt><a>DOM interface</a>:</dt>
    <dd>Uses {{HTMLElement}}.</dd>
  </dl>

  The <a element>section</a> element <a>represents</a> a generic section of a document or application.
  A section, in this context, is a thematic grouping of content. Each <code>section</code> should be
  identified, typically by including a heading (<code>h1</code>-<code>h6</code> element) as a child
  of the <a element>section</a> element.

  <p class="example">
    Examples of sections would be chapters, the various tabbed pages in a tabbed dialog box, or the
    numbered sections of a thesis. A Web site's home page could be split into sections for an
    introduction, news items, and contact information.
  </p>

  <p class="note">
    Authors are encouraged to use the <{article}> element instead of the
    <{section}> element when the content is complete, or self-contained, composition.
  </p>

  <p class="note">
    The <{section}> element is not a generic container element. When an element is needed
    only for styling purposes or as a convenience for scripting, authors are encouraged to use the
    <{div}> element instead. A general rule is that the <{section}> element is
    appropriate only if the element's contents would be listed explicitly in the document's
    <a>outline</a>.
  </p>
  
  <p>Assistive Technology may convey the semantics of the <{section}> to users when 
  the element has an explicit label. This information can provide a hint to users as to the type of content. 
  For example the <a>role</a> of the element, which in this case is "region", 
  can be announced by screen reader software when a user navigates to an <{section}> element. User Agents 
  may also provide methods to navigate to <{section}> elements.</p>

  <div class="example">
    In the following example, we see an article (part of a larger Web page) about apples,
    containing two short sections. 
	
	<p class="note">The <{section}> has an <code>aria-label</code> attribute providing a brief description of 
	the contents. Assistive technology may convey the <a value for="role"><code>region</code></a> role 
	along with the <code>aria-label</code> value as a hint to users.</p>

    <pre highlight="html">
      &lt;article&gt;
        &lt;header&gt;
          &lt;h2&gt;Apples&lt;/h2&gt;
          &lt;p&gt;Tasty, delicious fruit!&lt;/p&gt;
        &lt;/header&gt;
        &lt;p&gt;The apple is the pomaceous fruit of the apple tree.&lt;/p&gt;
        &lt;section aria-label="Red apples."&gt;
          &lt;h3&gt;Red Delicious&lt;/h3&gt;
          &lt;p&gt;These bright red apples are the most common found in many
          supermarkets.&lt;/p&gt;
        &lt;/section&gt;
        &lt;section aria-label="Green apples."&gt;
          &lt;h3&gt;Granny Smith&lt;/h3&gt;
          &lt;p&gt;These juicy, green apples make a great filling for
          apple pies.&lt;/p&gt;
        &lt;/section&gt;
      &lt;/article&gt;
    </pre>
	
  </div>

  <div class="example">
    Here is a graduation program with two sections, one for the list of people graduating, and
    one for the description of the ceremony. (The markup in this example features an uncommon style
    sometimes used to minimize the amount of <a>inter-element whitespace</a>.)

    <pre highlight="html">
      &lt;!DOCTYPE Html&gt;
      &lt;html
        &gt;&lt;head
          &gt;&lt;title
            &gt;Graduation Ceremony Summer 2022&lt;/title
          &gt;&lt;/head
        &gt;&lt;body
          &gt;&lt;h1
            &gt;Graduation&lt;/h1
          &gt;&lt;section
            &gt;&lt;h2
              &gt;Ceremony&lt;/h2
            &gt;&lt;p
              &gt;Opening Procession&lt;/p
            &gt;&lt;p
              &gt;Speech by Validactorian&lt;/p
            &gt;&lt;p
              &gt;Speech by Class President&lt;/p
            &gt;&lt;p
              &gt;Presentation of Diplomas&lt;/p
            &gt;&lt;p
              &gt;Closing Speech by Headmaster&lt;/p
          &gt;&lt;/section
          &gt;&lt;section
            &gt;&lt;h2
              &gt;Graduates&lt;/h2
            &gt;&lt;ul
              &gt;&lt;li
                &gt;Molly Carpenter&lt;/li
              &gt;&lt;li
                &gt;Anastasia Luccio&lt;/li
              &gt;&lt;li
                &gt;Ebenezar McCoy&lt;/li
              &gt;&lt;li
                &gt;Karrin Murphy&lt;/li
              &gt;&lt;li
                &gt;Thomas Raith&lt;/li
              &gt;&lt;li
                &gt;Susan Rodriguez&lt;/li
            &gt;&lt;/ul
          &gt;&lt;/section
        &gt;&lt;/body
      &gt;&lt;/html&gt;
    </pre>
  </div>

  <div class="example">
    In this example, a book author has marked up some sections as chapters and some as appendices,
    and uses CSS to style the headers in these two classes of section differently. The whole book is
    wrapped in an <{article}> element as part of an even larger document containing other
    books.

    <pre highlight="html">
      &lt;style&gt;
        section { border: double medium; margin: 2em; }
        section.chapter h1 { font: 2em Roboto, Helvetica Neue, sans-serif; }
        section.appendix h1 { font: small-caps 2em Roboto, Helvetica Neue, sans-serif; }
      &lt;/style&gt;
      ...
      &lt;article class="book"&gt;
        &lt;header&gt;
          &lt;h2&gt;My Book&lt;/h2&gt;
          &lt;p&gt;A sample with not much content&lt;/p&gt;
          &lt;p&gt;&lt;small&gt;Published by Dummy Publicorp Ltd.&lt;/small&gt;&lt;/p&gt;
        &lt;/header&gt;

        &lt;section class="chapter"&gt;
          &lt;h3&gt;My First Chapter&lt;/h3&gt;
          &lt;p&gt;This is the first of my chapters. It doesn't say much.&lt;/p&gt;
          &lt;p&gt;But it has two paragraphs!&lt;/p&gt;
        &lt;/section&gt;
        &lt;section class="chapter"&gt;
          &lt;h3&gt;It Continues: The Second Chapter&lt;/h3&gt;
          &lt;p&gt;Bla dee bla, dee bla dee bla. Boom.&lt;/p&gt;
        &lt;/section&gt;
        &lt;section class="chapter"&gt;
          &lt;h3&gt;Chapter Three: A Further Example&lt;/h3&gt;
          &lt;p&gt;It's not like a battle between brightness and earthtones would go
          unnoticed.&lt;/p&gt;
          &lt;p&gt;But it might ruin my story.&lt;/p&gt;
        &lt;/section&gt;
        &lt;section class="appendix"&gt;
          &lt;h3&gt;Appendix A: Overview of Examples&lt;/h3&gt;
          &lt;p&gt;These are demonstrations.&lt;/p&gt;
        &lt;/section&gt;
        &lt;section class="appendix"&gt;
          &lt;h3&gt;Appendix B: Some Closing Remarks&lt;/h3&gt;
          &lt;p&gt;Hopefully this long example shows that you &lt;em&gt;can&lt;/em&gt; style
          sections, so long as they are used to indicate actual sections.&lt;/p&gt;
        &lt;/section&gt;
      &lt;/article&gt;
    </pre>

  </div>

<h4 id="the-nav-element">The <dfn element><code>nav</code></dfn> element</h4>

  <dl class="element">
    <dt><a>Categories</a>:</dt>
    <dd><a>Flow content</a>.</dd>
    <dd><a>Sectioning content</a>.</dd>
    <dd><a>Palpable content</a>.</dd>
    <dt><a>Contexts in which this element can be used</a>:</dt>
    <dd>Where <a>flow content</a> is expected.</dd>
    <dt><a>Content model</a>:</dt>
    <dd><a>Flow content</a>, but with no <{main}> element descendants.</dd>
    <dt><a>Tag omission in text/html</a>:</dt>
    <dd>Neither tag is omissible</dd>
    <dt><a>Content attributes</a>:</dt>
    <dd><a>Global attributes</a></dd>
    <dt>Allowed <a href="#aria-role-attribute">ARIA role attribute</a> values:</dt>
    <dd>
      <a value for="role"><code>navigation</code></a> role (default - <a><em>do not set</em></a>) or
      <a value for="role"><code>presentation</code></a>.
    </dd>
    <dt>Allowed <a href="#state-and-property-attributes">ARIA state and property attributes</a>:</dt>
    <dd><a>Global aria-* attributes</a></dd>
    <dd>Any <code>aria-*</code> attributes <a href="#allowed-aria-roles-states-and-properties">applicable to the allowed roles</a>.</dd>
    <dt><a>DOM interface</a>:</dt>
    <dd>Uses {{HTMLElement}}.</dd>
  </dl>

  The <{nav}> element <a>represents</a> a section of a page that links to other pages or to
  parts within the page: a section with navigation links.
  
   <p>Assistive Technology may convey the semantics of the <{nav}> to users. 
   This information can provide a hint to users as to the type of content.  For example the <a>role</a> 
   of the element, which in this case is "navigation", can be announced by screen reader software when a 
   user navigates to an <{nav}> element. User Agents may also provide methods to navigate to 
   <{nav}> elements.</p>

  <p class="note">
    In cases where the content of a <{nav}> element represents a list of items, use list
    markup to aid understanding and navigation.
  </p>

  <p class="note">
    Not all groups of links on a page need to be in a <{nav}> element — the element is
    primarily intended for sections that consist of major navigation blocks. In particular, it is
    common for footers to have a short list of links to various pages of a site, such as the terms
    of service, the home page, and a copyright page. The <{footer}> element alone is
    sufficient for such cases; while a <{nav}> element can be used in such cases, it is
    usually unnecessary.
  </p>

  <p class="note">
    User agents (such as screen readers) that are targeted at users who can benefit from navigation
    information being omitted in the initial rendering, or who can benefit from navigation
    information being immediately available, can use this element as a way to determine what content
    on the page to initially skip or provide on request (or both).
  </p>

  <div class="example">
    In the following example, there are two <{nav}> elements, one for primary navigation
    around the site, and one for secondary navigation around the page itself.

    <pre highlight="html">
      &lt;body&gt;
        &lt;h1&gt;The Wiki Center Of Exampland&lt;/h1&gt;
        &lt;nav&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href="/"&gt;Home&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href="/events"&gt;Current Events&lt;/a&gt;&lt;/li&gt;
            <em>...more...</em>
          &lt;/ul&gt;
        &lt;/nav&gt;
        &lt;article&gt;
          &lt;header&gt;
            &lt;h2&gt;Demos in Exampland&lt;/h2&gt;
            &lt;p&gt;Written by A. N. Other.&lt;/p&gt;
          &lt;/header&gt;
          &lt;nav&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href="#public"&gt;Public demonstrations&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#destroy"&gt;Demolitions&lt;/a&gt;&lt;/li&gt;
              <em>...more...</em>
            &lt;/ul&gt;
          &lt;/nav&gt;
          &lt;div&gt;
            &lt;section id="public"&gt;
              &lt;h2&gt;Public demonstrations&lt;/h2&gt;
              &lt;p&gt;<em>...more...</em>&lt;/p&gt;
            &lt;/section&gt;
            &lt;section id="destroy"&gt;
              &lt;h2&gt;Demolitions&lt;/h2&gt;
              &lt;p&gt;<em>...more...</em>&lt;/p&gt;
            &lt;/section&gt;
            <em>...more...</em>
          &lt;/div&gt;
          &lt;footer&gt;
            &lt;p&gt;&lt;a href="?edit"&gt;Edit&lt;/a&gt; | &lt;a href="?delete"&gt;Delete&lt;/a&gt; | &lt;a href="?Rename"&gt;Rename&lt;/a&gt;&lt;/p&gt;
          &lt;/footer&gt;
        &lt;/article&gt;
        &lt;footer&gt;
          &lt;p&gt;&lt;small&gt;© copyright 1998 Exampland Emperor&lt;/small&gt;&lt;/p&gt;
        &lt;/footer&gt;
      &lt;/body&gt;
    </pre>
  </div>

  <div class="example">
    In the following example, the page has several places where links are present, but only one of
    those places is considered a navigation section.

    <pre highlight="html">
      &lt;body typeof="schema:Blog"&gt;
        &lt;header&gt;
          &lt;h1&gt;Wake up sheeple!&lt;/h1&gt;
          &lt;p&gt;&lt;a href="news.html"&gt;News&lt;/a&gt; -
          &lt;a href="blog.html"&gt;Blog&lt;/a&gt; -
          &lt;a href="forums.html"&gt;Forums&lt;/a&gt;&lt;/p&gt;
          &lt;p&gt;Last Modified: &lt;span property="schema:dateModified"&gt;2009-04-01&lt;/span&gt;&lt;/p&gt;
          &lt;nav&gt;
            &lt;h2&gt;Navigation&lt;/h2&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href="articles.html"&gt;Index of all articles&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="today.html"&gt;Things sheeple need to wake up for today&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="successes.html"&gt;Sheeple we have managed to wake&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/nav&gt;
        &lt;/header&gt;
        &lt;main&gt;
          &lt;article property="schema:blogPosts" typeof="schema:BlogPosting"&gt;
            &lt;header&gt;
              &lt;h2 property="schema:headline"&gt;My Day at the Beach&lt;/h2&gt;
            &lt;/header&gt;
            &lt;main property="schema:articleBody"&gt;
              &lt;p&gt;Today I went to the beach and had a lot of fun.&lt;/p&gt;
              <em>...more content...</em>
            &lt;/main&gt;
            &lt;footer&gt;
              &lt;p&gt;Posted &lt;time property="schema:datePublished" datetime="2009-10-10"&gt;Thursday&lt;/time&gt;.&lt;/p&gt;
            &lt;/footer&gt;
          &lt;/article&gt;
          <em>...more blog posts...</em>
        &lt;/main&gt;
        &lt;footer&gt;
          &lt;p&gt;Copyright ©
            &lt;span property="schema:copyrightYear"&gt;2010&lt;/span&gt;
            &lt;span property="schema:copyrightHolder"&gt;The Example Company&lt;/span&gt;
          &lt;/p&gt;
          &lt;p&gt;&lt;a href="about.html"&gt;About&lt;/a&gt; -
            &lt;a href="policy.html"&gt;Privacy Policy&lt;/a&gt; -
            &lt;a href="contact.html"&gt;Contact Us&lt;/a&gt;&lt;/p&gt;
        &lt;/footer&gt;
      &lt;/body&gt;
    </pre>

    Notice the <{main}> element being used to wrap the main content of the page. In this
    case, all content other than the page header and footer.

    You can also see microdata annotations in the above example that use the schema.org vocabulary
    to provide the publication date and other metadata about the blog post.
  </div>

  <div class="example">
    A <{nav}> element doesn't have to contain a list, it can contain other kinds of content
    as well. In this navigation block, links are provided in prose:

    <pre highlight="html">
      &lt;nav&gt;
        &lt;h2&gt;Navigation&lt;/h2&gt;
        &lt;p&gt;You are on my home page. To the north lies &lt;a href="/blog"&gt;my
        blog&lt;/a&gt;, from whence the sounds of battle can be heard. To the east
        you can see a large mountain, upon which many &lt;a
        href="/school"&gt;school papers&lt;/a&gt; are littered. Far up thus mountain
        you can spy a little figure who appears to be me, desperately
        scribbling a &lt;a href="/school/thesis"&gt;thesis&lt;/a&gt;.&lt;/p&gt;
        &lt;p&gt;To the west are several exits. One fun-looking exit is labeled &lt;a
        href="https://games.example.com/"&gt;"games"&lt;/a&gt;. Another more
        boring-looking exit is labeled &lt;a
        href="https://isp.example.net/"&gt;ISP™&lt;/a&gt;.&lt;/p&gt;
        &lt;p&gt;To the south lies a dark and dank &lt;a href="/about"&gt;contacts
        page&lt;/a&gt;. Cobwebs cover its disused entrance, and at one point you
        see a rat run quickly out of the page.&lt;/p&gt;
      &lt;/nav&gt;
    </pre>

  </div>

  <div class="example">
    In this example, <{nav}> is used in an e-mail application, to let the user switch
    folders:

    <pre highlight="html">
      &lt;p&gt;&lt;input type=button value="Compose" onclick="compose()"&gt;&lt;/p&gt;
      &lt;nav&gt;
        &lt;h2&gt;Folders&lt;/h2&gt;
        &lt;ul&gt;
          &lt;li&gt; &lt;a href="/inbox" onclick="return openFolder(this.href)"&gt;Inbox&lt;/a&gt; &lt;span class=count&gt;&lt;/span&gt;
          &lt;li&gt; &lt;a href="/sent" onclick="return openFolder(this.href)"&gt;Sent&lt;/a&gt;
          &lt;li&gt; &lt;a href="/drafts" onclick="return openFolder(this.href)"&gt;Drafts&lt;/a&gt;
          &lt;li&gt; &lt;a href="/trash" onclick="return openFolder(this.href)"&gt;Trash&lt;/a&gt;
          &lt;li&gt; &lt;a href="/customers" onclick="return openFolder(this.href)"&gt;Customers&lt;/a&gt;
        &lt;/ul&gt;
      &lt;/nav&gt;
    </pre>

  </div>

<h4 id="the-aside-element">The <dfn element><code>aside</code></dfn> element</h4>

  <dl class="element">
    <dt><a>Categories</a>:</dt>
    <dd><a>Flow content</a>.</dd>
    <dd><a>Sectioning content</a>.</dd>
    <dd><a>Palpable content</a>.</dd>
    <dt><a>Contexts in which this element can be used</a>:</dt>
    <dd>Where <a>flow content</a> is expected.</dd>
    <dt><a>Content model</a>:</dt>
    <dd><a>Flow content</a>, but with no <{main}> element descendants.</dd>
    <dt><a>Tag omission in text/html</a>:</dt>
    <dd>Neither tag is omissible</dd>
    <dt><a>Content attributes</a>:</dt>
    <dd><a>Global attributes</a></dd>
    <dt>Allowed <a href="#aria-role-attribute">ARIA role attribute</a> values:</dt>
    <dd>
      <a value for="role"><code>complementary</code></a> role (default - <a><em>do not set</em></a>),
      <a value for="role"><code>note</code></a>, <a value for="role"><code>search</code></a> or <a value for="role"><code>presentation</code></a>.
    </dd>
    <dt>Allowed <a href="#state-and-property-attributes">ARIA state and property attributes</a>:</dt>
    <dd><a>Global aria-* attributes</a></dd>
    <dd>Any <code>aria-*</code> attributes <a href="#allowed-aria-roles-states-and-properties">applicable to the allowed roles</a>.</dd>
    <dt><a>DOM interface</a>:</dt>
    <dd>Uses <code>HTMLElement</code>.</dd>
  </dl>

  The <{aside}> element <a>represents</a> a section of a page that consists of content that
  is tangentially related to the content of the parenting <a>sectioning content</a>, and which
  could be considered separate from that content. Such sections are often represented as sidebars
  in printed typography.

  The element can be used for typographical effects like pull quotes or sidebars, for advertising,
  for groups of <{nav}> elements, and for other content that is considered separate from
  the main content of the nearest ancestor <a>sectioning content</a>.
  
   <p>Assistive Technology may convey the semantics of the <{aside}> to users. This 
   information can provide a hint to users as to the type of content. For example the <a>role</a> of
   the element, which in this case is "complementary", can be announced by screen reader software when a user 
   navigates to an <{aside}> element. User Agents may also provide methods to navigate to <{aside}> 
   elements.</p>

  <p class="note">
    It's not appropriate to use the <{aside}> element just for parentheticals, since those
    are part of the main flow of the document.
  </p>

  <div class="example">
    The following example shows how an aside is used to mark up background material on Switzerland
    in a much longer news story on Europe.

    <pre highlight="html">
      &lt;aside&gt;
        &lt;h2&gt;Switzerland&lt;/h2&gt;
        &lt;p&gt;Switzerland, a land-locked country in the middle of geographic
        Europe, has not joined the geopolitical European Union, though it is
        a signatory to a number of European treaties.&lt;/p&gt;
      &lt;/aside&gt;
    </pre>
  </div>

  <div class="example">
    The following example shows how an aside is used to mark up a pull quote in a longer article.

    <pre highlight="html">
      ...

      &lt;p&gt;He later joined a large company, continuing on the same work.
      &lt;q&gt;I love my job. People ask me what I do for fun when I'm not at
      work. But I'm paid to do my hobby, so I never know what to
      answer. Some people wonder what they would do if they didn't have to
      work... but I know what I would do, because I was unemployed for a
      year, and I filled that time doing exactly what I do now.&lt;/q&gt;&lt;/p&gt;

      &lt;aside&gt;
        &lt;q&gt; People ask me what I do for fun when I'm not at work. But I'm
        paid to do my hobby, so I never know what to answer. &lt;/q&gt;
      &lt;/aside&gt;

      &lt;p&gt;Of course his work — or should that be hobby? —
      isn't his only passion. He also enjoys other pleasures.&lt;/p&gt;

      ...
    </pre>

  </div>

  <div class="example">
    The following extract shows how <{aside}> can be used for blogrolls and other side
    content on a blog:

    <pre highlight="html">
      &lt;body&gt;
        &lt;header&gt;
          &lt;h1&gt;My wonderful blog&lt;/h1&gt;
          &lt;p&gt;My tagline&lt;/p&gt;
        &lt;/header&gt;
        &lt;aside&gt;
          &lt;!-- <em>this aside contains two sections that are tangentially related
          to the page, namely, links to other blogs, and links to blog posts
          from this blog</em> --&gt;
          &lt;nav&gt;
            &lt;h2&gt;My blogroll&lt;/h2&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href="https://blog.example.com/"&gt;Example Blog&lt;/a&gt;
            &lt;/ul&gt;
          &lt;/nav&gt;
          &lt;nav&gt;
            &lt;h2&gt;Archives&lt;/h2&gt;
            &lt;ol reversed&gt;
              &lt;li&gt;&lt;a href="/last-post"&gt;My last post&lt;/a&gt;
              &lt;li&gt;&lt;a href="/first-post"&gt;My first post&lt;/a&gt;
            &lt;/ol&gt;
          &lt;/nav&gt;
        &lt;/aside&gt;
        &lt;aside&gt;
          &lt;!-- <em>this aside is tangentially related to the page also, it
          contains twitter messages from the blog author</em> --&gt;
          &lt;h2&gt;Twitter Feed&lt;/h2&gt;
          &lt;blockquote cite="https://twitter.example.net/t31351234"&gt;
            I'm on vacation, writing my blog.
          &lt;/blockquote&gt;
          &lt;blockquote cite="https://twitter.example.net/t31219752"&gt;
            I'm going to go on vacation soon.
          &lt;/blockquote&gt;
        &lt;/aside&gt;
        &lt;article&gt;
          &lt;!-- <em>this is a blog post</em> --&gt;
          &lt;h2&gt;My last post&lt;/h2&gt;
          &lt;p&gt;This is my last post.&lt;/p&gt;
          &lt;footer&gt;
            &lt;p&gt;&lt;a href="/last-post" rel=bookmark&gt;Permalink&lt;/a&gt;
          &lt;/footer&gt;
        &lt;/article&gt;
        &lt;article&gt;
          &lt;!-- <em>this is also a blog post</em> --&gt;
          &lt;h2&gt;My first post&lt;/h2&gt;
          &lt;p&gt;This is my first post.&lt;/p&gt;
          &lt;aside&gt;
            &lt;!-- <em>this aside is about the blog post, since it's inside the
            &lt;article&gt; element; it would be wrong, for instance, to put the
              blogroll here, since the blogroll isn't really related to this post
              specifically, only to the page as a whole</em> --&gt;
              &lt;h1&gt;Posting&lt;/h1&gt;
              &lt;p&gt;While I'm thinking about it, I wanted to say something about
              posting. Posting is fun!&lt;/p&gt;
          &lt;/aside&gt;
          &lt;footer&gt;
            &lt;p&gt;&lt;a href="/first-post" rel=bookmark&gt;Permalink&lt;/a&gt;
          &lt;/footer&gt;
        &lt;/article&gt;
        &lt;footer&gt;
          &lt;nav&gt;
            &lt;a href="/archives"&gt;Archives&lt;/a&gt; —
            &lt;a href="/about"&gt;About me&lt;/a&gt; —
            &lt;a href="/copyright"&gt;Copyright&lt;/a&gt;
          &lt;/nav&gt;
        &lt;/footer&gt;
      &lt;/body&gt;
    </pre>
  </div>

<h4 id="the-h1-h2-h3-h4-h5-and-h6-elements">
  The <dfn element><code>h1</code></dfn>, <dfn element><code>h2</code></dfn>,
  <dfn element><code>h3</code></dfn>, <dfn element><code>h4</code></dfn>,
  <dfn element><code>h5</code></dfn>, and <dfn element><code>h6</code></dfn>
  elements
</h4>

  <dl class="element">
    <dt><a>Categories</a>:</dt>
    <dd><a>Flow content</a>.</dd>
    <dd><a>Heading content</a>.</dd>
    <dd><a>Palpable content</a>.</dd>
    <dt><a>Contexts in which this element can be used</a>:</dt>
    <dd>Where <a>flow content</a> is expected.</dd>
    <dt><a>Content model</a>:</dt>
    <dd><a>Phrasing content</a>.</dd>
    <dt><a>Tag omission in text/html</a>:</dt>
    <dd>Neither tag is omissible</dd>
    <dt><a>Content attributes</a>:</dt>
    <dd><a>Global attributes</a></dd>
    <dt>Allowed <a href="#aria-role-attribute">ARIA role attribute</a> values:</dt>
    <dd>
      <a value for="role"><code>heading</code></a> role (default - <a><em>do not set</em></a>),
      <a value for="role"><code>tab</code></a> or <a value for="role"><code>presentation</code></a>.
    </dd>
    <dt>Allowed <a href="#state-and-property-attributes">ARIA state and property attributes</a>:</dt>
    <dd><a>Global aria-* attributes</a></dd>
    <dd>Any <code>aria-*</code> attributes <a href="#allowed-aria-roles-states-and-properties">applicable to the allowed roles</a>.</dd>
    <dt><a>DOM interface</a>:</dt>
    <dd>
      <pre class="idl" data-highlight="webidl" dfn-for="HTMLHeadingElement">
        interface HTMLHeadingElement : HTMLElement {};
      </pre>
    </dd>
  </dl>

  These elements <a>represent</a> headings for their sections.

  The semantics and meaning of these elements are defined in the section on
  [[#headings-and-sections]].

  These elements have a <dfn>rank</dfn> given by the number in their name. The <code>h1</code>
  element is said to have the highest rank, the <code>h6</code> element has the lowest rank, and two
  elements with the same name have equal rank.

  <code>h2</code>–<code>h6</code> elements must not be used to markup subheadings, subtitles,
  alternative titles and taglines unless intended to be the heading for a new section or subsection.
  Instead use the markup patterns in the [[#common-idioms-without-dedicated-elements]] section of
  the specification.
  
  <p>Assistive technology often announces the presence and level of a heading to users, as a hint 
  to understand the structure of a document and construct a 'mental model' of its outline. For example 
  the <a>role</a> of the element, which in this case is "heading" and the heading level "1" to "6", can be 
   announced by screen reader software when a user navigates to an <code>h1</code>–<code>h6</code> element. 
   User Agents may also provide methods to navigate to <code>h1</code>–<code>h6</code> elements.</p>

  <div class="example">
    As far as their respective document outlines (their heading and section structures) are
    concerned, these two snippets are semantically equivalent:

    <pre highlight="html">
      &lt;body&gt;
        &lt;h1&gt;Let's call it a draw(ing surface)&lt;/h1&gt;
        &lt;h2&gt;Diving in&lt;/h2&gt;
        &lt;h2&gt;Simple shapes&lt;/h2&gt;
        &lt;h2&gt;Canvas coordinates&lt;/h2&gt;
        &lt;h3&gt;Canvas coordinates diagram&lt;/h3&gt;
        &lt;h2&gt;Paths&lt;/h2&gt;
      &lt;/body&gt;
    </pre>

    <pre highlight="html">
      &lt;body&gt;
        &lt;h1&gt;Let's call it a draw(ing surface)&lt;/h1&gt;
        &lt;section&gt;
          &lt;h2&gt;Diving in&lt;/h2&gt;
        &lt;/section&gt;
        &lt;section&gt;
          &lt;h2&gt;Simple shapes&lt;/h2&gt;
        &lt;/section&gt;
        &lt;section&gt;
          &lt;h2&gt;Canvas coordinates&lt;/h2&gt;
          &lt;section&gt;
            &lt;h3&gt;Canvas coordinates diagram&lt;/h3&gt;
          &lt;/section&gt;
        &lt;/section&gt;
        &lt;section&gt;
          &lt;h2&gt;Paths&lt;/h2&gt;
        &lt;/section&gt;
      &lt;/body&gt;
    </pre>

    Authors might prefer the former style for its terseness, or the latter style for its convenience
    in the face of heavy editing; which is best is purely an issue of preferred authoring style.

    The two styles can be combined, for compatibility with legacy tools while still future-proofing
    for when that compatibility is no longer needed.

  </div>

<h4 id="the-header-element">The <dfn element><code>header</code></dfn> element</h4>

  <dl class="element">
    <dt><a>Categories</a>:</dt>
    <dd><a>Flow content</a>.</dd>
    <dd><a>Palpable content</a>.</dd>
    <dt><a>Contexts in which this element can be used</a>:</dt>
    <dd>Where <a>flow content</a> is expected.</dd>
    <dt><a>Content model</a>:</dt>
    <dd>
      <a>Flow content</a>, but with no <{main}> element descendants, or <{header}>, <{footer}> elements
	  that are not descendants of <a>sectioning content</a> which is a descendant of the <{header}>. 
    </dd>
    <dt><a>Tag omission in text/html</a>:</dt>
    <dd>Neither tag is omissible</dd>
    <dt><a>Content attributes</a>:</dt>
    <dd><a>Global attributes</a></dd>
    <dt>Allowed <a href="#aria-role-attribute">ARIA role attribute</a> values:</dt>
    <dd>
      <a value for="role"><code>banner</code></a> role (default - <a><em>do not set</em></a>) or
      <a value for="role"><code>presentation</code></a>.
    </dd>
    <dt>Allowed <a href="#state-and-property-attributes">ARIA state and property attributes</a>:</dt>
    <dd><a>Global aria-* attributes</a></dd>
    <dd>Any <code>aria-*</code> attributes <a href="#allowed-aria-roles-states-and-properties">applicable to the allowed roles</a>.</dd>
    <dt><a>DOM interface</a>:</dt>
    <dd>Uses <code>HTMLElement</code>.</dd>
  </dl>

  The <{header}> element <a>represents</a> introductory content for its nearest ancestor
  <a>sectioning content</a> or <a>sectioning root</a> element. A <code>header</code> typically
  contains a group of introductory or navigational aids.

  When the nearest ancestor <a>sectioning content</a> or <a>sectioning root</a> element is
  <a href="#the-body-element">the <code>body</code> element</a>, then it applies to the whole page.

  <p class="note">
    A <{header}> element is intended to usually contain the section's heading (an
    <code>h1</code>–<code>h6</code> element), but this is not required. The <code>header</code>
    element can also be used to wrap a section's table of contents, a search form, or any relevant
    logos.
  </p>
  
 <p>Assistive Technology may convey the semantics of the <{header}> to users when the 
 nearest ancestor <a>sectioning content</a> or <a>sectioning root</a> element is the <{body}> element. 
   This information can provide a hint to users as to the type of content.  For example the <a>role</a> 
   of the element, which in this case is "banner", can be announced by screen reader software when a 
   user navigates to an <{header}> element that is scoped to the <{body}> element. User Agents may 
   also provide methods to navigate to <{header}> elements scoped to the <{body}> element.</p>

  <div class="example">
    Here are some sample headers. This first one is for a game:

    <pre highlight="html">
      &lt;header&gt;
        &lt;p&gt;Welcome to...&lt;/p&gt;
        &lt;h1&gt;Voidwars!&lt;/h1&gt;
      &lt;/header&gt;
    </pre>

    The following snippet shows how the element can be used to mark
    up a specification's header:

    <pre highlight="html">
      &lt;header&gt;
        &lt;h1&gt;Scalable Vector Graphics (SVG) 1.2&lt;/h1&gt;
        &lt;p&gt;W3C Working Draft 27 October 2004&lt;/p&gt;
        &lt;dl&gt;
          &lt;dt&gt;This version:&lt;/dt&gt;
          &lt;dd&gt;&lt;a href="https://www.w3.org/TR/2004/WD-SVG12-20041027/"&gt;https://www.w3.org/TR/2004/WD-SVG12-20041027/&lt;/a&gt;&lt;/dd&gt;
          &lt;dt&gt;Previous version:&lt;/dt&gt;
          &lt;dd&gt;&lt;a href="https://www.w3.org/TR/2004/WD-SVG12-20040510/"&gt;https://www.w3.org/TR/2004/WD-SVG12-20040510/&lt;/a&gt;&lt;/dd&gt;
          &lt;dt&gt;Latest version of SVG 1.2:&lt;/dt&gt;
          &lt;dd&gt;&lt;a href="https://www.w3.org/TR/SVG12/"&gt;https://www.w3.org/TR/SVG12/&lt;/a&gt;&lt;/dd&gt;
          &lt;dt&gt;Latest SVG Recommendation:&lt;/dt&gt;
          &lt;dd&gt;&lt;a href="https://www.w3.org/TR/SVG/"&gt;https://www.w3.org/TR/SVG/&lt;/a&gt;&lt;/dd&gt;
          &lt;dt&gt;Editor:&lt;/dt&gt;
          &lt;dd&gt;Dean Jackson, W3C, &lt;a href="mailto:dean@w3.org"&gt;dean@w3.org&lt;/a&gt;&lt;/dd&gt;
          &lt;dt&gt;Authors:&lt;/dt&gt;
          &lt;dd&gt;See &lt;a href="#authors"&gt;Author List&lt;/a&gt;&lt;/dd&gt;
        &lt;/dl&gt;
        &lt;p class="copyright"&gt;&lt;a href="https://www.w3.org/Consortium/Legal/ipr-notic <em>...</em>
      &lt;/header&gt;
    </pre>

  </div>

  <p class="note">
    The <{header}> element is not <a>sectioning content</a>; it doesn't introduce a new
    section.
  </p>

  <div class="example">
  In this example, the page has a page heading given by the <code>h1</code> element, and two
  subsections whose headings are given by <code>h2</code> elements. The content after the
  <{header}> element is still part of the last subsection started in the
  <{header}> element, because the <{header}> element doesn't take part in the
  <a>outline</a> algorithm.

  <pre highlight="html">
    &lt;body&gt;
      &lt;header&gt;
        &lt;h1&gt;Little Green Guys With Guns&lt;/h1&gt;
        &lt;nav&gt;
          &lt;ul&gt;
          &lt;li&gt;&lt;a href="/games"&gt;Games&lt;/a&gt;
          &lt;li&gt;&lt;a href="/forum"&gt;Forum&lt;/a&gt;
          &lt;li&gt;&lt;a href="/download"&gt;Download&lt;/a&gt;
          &lt;/ul&gt;
        &lt;/nav&gt;
        &lt;h2&gt;Important News&lt;/h2&gt; &lt;!-- this starts a second subsection --&gt;
        &lt;!-- this is part of the subsection entitled "Important News" --&gt;
        &lt;p&gt;To play today's games you will need to update your client.&lt;/p&gt;
        &lt;h2&gt;Games&lt;/h2&gt; &lt;!-- this starts a third subsection --&gt;
        &lt;/header&gt;
        &lt;p&gt;You have three active games:&lt;/p&gt;
        &lt;!-- this is still part of the subsection entitled "Games" --&gt;
        ...
  </pre>
  </div>
  <p class="note">
    For cases where an developer wants to nest a <code>header</code> or <code>footer</code> within 
	another <code>header</code>: The <{header}> element can only contain a <{header}> or <{footer}> 
	if they are themselves contained within <a>sectioning content</a>. 
  </p>

  <div class="example">
 <p>In this example, the <{article}> has a <{header}> which contains an <code>aside</code>
  which itself contains a <{header}>. This is conforming as the descendant <code>header</code> is contained 
  within the <{aside}> element.</p>

  <pre highlight="html">
&lt;article&gt;
 
&lt;header&gt;
&lt;h1&gt;Flexbox the definitive guide&lt;/h1&gt; 
 &lt;aside&gt;
  &lt;header&gt;
   &lt;h2&gt;About the author&lt;/h2&gt; 
    &lt;p&gt;A nice person that hates everything and everyone&lt;/p&gt;
    &lt;p&gt;&lt;a href="./wes/"&gt;Contact Wes!&lt;/a&gt;&lt;/p&gt;
   &lt;/header&gt;
  &lt;p&gt;This article is brought to you by Wesley, skilled expert in "always-in-beta" 
  applications that will never see the&lt;/p&gt;
 &lt;/aside&gt;
&lt;/header&gt;

&lt;p&gt;Actual article here... Actual article here... Actual article here...&lt;/p&gt;

&lt;/article&gt;</pre>
  </div>

<h4 id="the-footer-element">The <dfn element><code>footer</code></dfn> element</h4>

  <dl class="element">
    <dt><a>Categories</a>:</dt>
    <dd><a>Flow content</a>.</dd>
    <dd><a>Palpable content</a>.</dd>
    <dt><a>Contexts in which this element can be used</a>:</dt>
    <dd>Where <a>flow content</a> is expected.</dd>
    <dt><a>Content model</a>:</dt>
    <dd>
      <a>Flow content</a>, but with no <{main}> element descendants, or <{header}>, <{footer}> elements
	  that are not descendants of <a>sectioning content</a> which is a descendant of the <{footer}>. 
    </dd>
    <dt><a>Tag omission in text/html</a>:</dt>
    <dd>Neither tag is omissible</dd>
    <dt><a>Content attributes</a>:</dt>
    <dd><a>Global attributes</a></dd>
    <dt>Allowed <a href="#aria-role-attribute">ARIA role attribute</a> values:</dt>
    <dd>
      <a value for="role"><code>contentinfo</code></a> role (default - <a><em>do not set</em></a>) or
      <a value for="role"><code>presentation</code></a>.
    </dd>
    <dt>Allowed <a href="#state-and-property-attributes">ARIA state and property attributes</a>:</dt>
    <dd><a>Global aria-* attributes</a></dd>
    <dd>Any <code>aria-*</code> attributes <a href="#allowed-aria-roles-states-and-properties">applicable to the allowed roles</a>.</dd>
    <dt><a>DOM interface</a>:</dt>
    <dd>Uses <code>HTMLElement</code>.</dd>
  </dl>

  The <{footer}> element <a>represents</a> a footer for its nearest ancestor
  <a>sectioning content</a> or <a>sectioning root</a> element. A footer typically contains
  information about its section such as who wrote it, links to related documents, copyright data,
  and the like.

  When the <{footer}> element contains entire sections, they <a>represent</a> appendices,
  indexes, long colophons, verbose license agreements, and other such content.
  
  <p>Assistive Technology may convey the semantics of the <{footer}> to users when the 
 nearest ancestor <a>sectioning content</a> or <a>sectioning root</a> element is the <{body}> element. 
   This information can provide a hint to users as to the type of content.  For example the <a>role</a> 
   of the element, which in this case is "content information", can be announced by screen reader software when a 
   user navigates to an <{footer}> element that is scoped to the <{body}> element. User Agents may 
   also provide methods to navigate to <{footer}> elements scoped to the <{body}> element.</p>

  <p class="note">
    Contact information for the author or editor of a section belongs in an <code>address</code>
    element, possibly itself inside a <{footer}>. Bylines and other information that could
    be suitable for both a <code>header</code> or a <code>footer</code> can be placed in either (or
    neither). The primary purpose of these elements is merely to help the author write
    self-explanatory markup that is easy to maintain and style; they are not intended to impose
    specific structures on authors.
  </p>

  Footers don't necessarily have to appear at the <em>end</em> of a section, though they usually do.

  When the nearest ancestor <a>sectioning content</a> or <a>sectioning root</a> element is <a href="#the-body-element">the <code>body</code> element</a>, then it applies to the whole page.

  <p class="note">
    The <{footer}> element is not <a>sectioning content</a>; it doesn't introduce a new
    section.
  </p>

  <div class="example">
    Here is a page with two footers, one at the top and one at the bottom, with the same content:

    <pre highlight="html">
      &lt;body&gt;
        &lt;footer&gt;&lt;a href="../"&gt;Back to index...&lt;/a&gt;&lt;/footer&gt;
        &lt;div&gt;
          &lt;h1&gt;Lorem ipsum&lt;/h1&gt;
          &lt;p&gt;The ipsum of all lorems&lt;/p&gt;
        &lt;/div&gt;
        &lt;p&gt;A dolor sit amet, consectetur adipisicing elit, sed do eiusmod
        tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim
        veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex
        ea commodo consequat. Duis aute irure dolor in reprehenderit in
        voluptate velit esse cillum dolore eu fugiat nulla
        pariatur. Excepteur sint occaecat cupidatat non proident, sunt in
        culpa qui officia deserunt mollit anim id est laborum.&lt;/p&gt;
        &lt;footer&gt;&lt;a href="../"&gt;Back to index...&lt;/a&gt;&lt;/footer&gt;
      &lt;/body&gt;
    </pre>
  </div>

  <div class="example">
    Here is an example which shows the <{footer}> element being used both for a site-wide
    footer and for a section footer.

    <pre highlight="html">
      &lt;!DOCTYPE HTML&gt;
      &lt;HTML&gt;&lt;HEAD&gt;
      &lt;TITLE&gt;The Ramblings of a Scientist&lt;/TITLE&gt;
      &lt;BODY&gt;
      &lt;h1&gt;The Ramblings of a Scientist&lt;/h1&gt;
      &lt;MAIN&gt;
        &lt;ARTICLE&gt;
        &lt;H2&gt;Episode 15&lt;/H2&gt;
        &lt;VIDEO SRC="/fm/015.ogv" CONTROLS PRELOAD&gt;
        &lt;P&gt;&lt;A HREF="/fm/015.ogv"&gt;Download video&lt;/A&gt;.&lt;/P&gt;
        &lt;/VIDEO&gt;
        &lt;FOOTER&gt; &lt;!-- footer for article --&gt;
        &lt;P&gt;Published &lt;TIME DATETIME="2009-10-21T18:26-07:00"&gt;on 2009/10/21 at 6:26pm&lt;/TIME&gt;&lt;/P&gt;
        &lt;/FOOTER&gt;
      &lt;/ARTICLE&gt;
      &lt;ARTICLE&gt;
        &lt;H2&gt;My Favorite Trains&lt;/H2&gt;
        &lt;P&gt;I love my trains. My favorite train of all time is a Köf.&lt;/P&gt;
        &lt;P&gt;It is fun to see them pull some coal cars because they look so
        dwarfed in comparison.&lt;/P&gt;
        &lt;FOOTER&gt; &lt;!-- footer for article --&gt;
        &lt;P&gt;Published &lt;TIME DATETIME="2009-09-15T14:54-07:00"&gt;on 2009/09/15 at 2:54pm&lt;/TIME&gt;&lt;/P&gt;
        &lt;/FOOTER&gt;
        &lt;/ARTICLE&gt;
      &lt;/MAIN&gt;
      &lt;FOOTER&gt; &lt;!-- site wide footer --&gt;
        &lt;NAV&gt;
        &lt;P&gt;&lt;A HREF="/credits.html"&gt;Credits&lt;/A&gt; —
            &lt;A HREF="/tos.html"&gt;Terms of Service&lt;/A&gt; —
            &lt;A HREF="/index.html"&gt;Blog Index&lt;/A&gt;&lt;/P&gt;
        &lt;/NAV&gt;
        &lt;P&gt;Copyright © 2009 Gordon Freeman&lt;/P&gt;
      &lt;/FOOTER&gt;
      &lt;/BODY&gt;
      &lt;/HTML&gt;
    </pre>
  </div>

  <div class="example">
    Some site designs have what is sometimes referred to as "fat footers" — footers that contain a
    lot of material, including images, links to other articles, links to pages for sending feedback,
    special offers... in some ways, a whole "front page" in the footer.

    This fragment shows the bottom of a page on a site with a "fat footer":

    <pre highlight="html">
      ...
        &lt;footer&gt;
          &lt;nav&gt;
            &lt;section&gt;
              &lt;h2&gt;Articles&lt;/h2&gt;
              &lt;p&gt;&lt;img src="images/somersaults.jpeg" alt=""&gt; Go to the gym with
              our somersaults class! Our teacher Jim takes you through the paces
              in this two-part article. &lt;a href="articles/somersaults/1"&gt;Part
              1&lt;/a&gt; · &lt;a href="articles/somersaults/2"&gt;Part 2&lt;/a&gt;&lt;/p&gt;
              &lt;p&gt;&lt;img src="images/kindplus.jpeg"&gt; Tired of walking on the edge of
              a clif&lt;!-- sic --&gt;? Our guest writer Lara shows you how to bumble
              your way through the bars. &lt;a href="articles/kindplus/1"&gt;Read
              more...&lt;/a&gt;&lt;/p&gt;
              &lt;p&gt;&lt;img src="images/crisps.jpeg"&gt; The chips are down, now all
              that's left is a potato. What can you do with it? &lt;a
              href="articles/crisps/1"&gt;Read more...&lt;/a&gt;&lt;/p&gt;
            &lt;/section&gt;
            &lt;ul&gt;
              &lt;li&gt; &lt;a href="/about"&gt;About us...&lt;/a&gt;
              &lt;li&gt; &lt;a href="/feedback"&gt;Send feedback!&lt;/a&gt;
              &lt;li&gt; &lt;a href="/sitemap"&gt;Sitemap&lt;/a&gt;
            &lt;/ul&gt;
          &lt;/nav&gt;
          &lt;p&gt;&lt;small&gt;Copyright © 2015 The Snacker —
          &lt;a href="/tos"&gt;Terms of Service&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;
        &lt;/footer&gt;
      &lt;/body&gt;
    </pre>
  </div>

<h4 id="the-address-element">The <dfn element><code>address</code></dfn> element</h4>

  <dl class="element">
    <dt><a>Categories</a>:</dt>
    <dd><a>Flow content</a>.</dd>
    <dd><a>Palpable content</a>.</dd>
    <dt><a>Contexts in which this element can be used</a>:</dt>
    <dd>Where <a>flow content</a> is expected.</dd>
    <dt><a>Content model</a>:</dt>
    <dd><a>Flow content</a>, but with no <a>heading
    content</a> descendants, no <a>sectioning content</a>
    descendants, and no <{header}>, <{footer}>, or
    <{address}> element descendants.</dd>
    <dt><a>Tag omission in text/html</a>:</dt>
    <dd>Neither tag is omissible</dd>
    <dt><a>Content attributes</a>:</dt>
    <dd><a>Global attributes</a></dd>
    <dt>Allowed <a href="#aria-role-attribute">ARIA role attribute</a> values:</dt>
    <dd><a value for="role"><code>contentinfo</code></a> role.</dd>
    <dt>Allowed <a href="#state-and-property-attributes">ARIA state and property attributes</a>:</dt>
    <dd><a>Global aria-* attributes</a></dd>
    <dd>Any <code>aria-*</code> attributes <a href="#allowed-aria-roles-states-and-properties">applicable to the allowed roles</a>.</dd>
    <dt><a>DOM interface</a>:</dt>
    <dd>Uses <code>HTMLElement</code>.</dd>
  </dl>

  The <{address}> element <a>represents</a> the contact information for its nearest
    <{article}> or <{body}> element ancestor. If that is <a href="#the-body-element">the <code>body</code> element</a>,
    then the contact information applies to the document as a whole.

  <div class="example">
    For example, a page at the W3C Web site related to HTML might include the following contact
    information:

    <pre highlight="html">
      &lt;ADDRESS&gt;
        &lt;A href="../People/Raggett/"&gt;Dave Raggett&lt;/A&gt;,
        &lt;A href="../People/Arnaud/"&gt;Arnaud Le Hors&lt;/A&gt;,
        contact persons for the &lt;A href="Activity"&gt;W3C HTML Activity&lt;/A&gt;
      &lt;/ADDRESS&gt;
    </pre>
  </div>

  The <{address}> element must not be used to represent arbitrary addresses (e.g., postal
  addresses), unless those addresses are in fact the relevant contact information. (The
  <{p}> element is the appropriate element for marking up postal addresses in general.)

  The <{address}> element must not contain information other than contact information.

  <div class="example">
    For example, the following is non-conforming use of the <{address}> element:

    <pre class="bad" highlight="html">&lt;ADDRESS&gt;Last Modified: 1999/12/24 23:37:50&lt;/ADDRESS&gt;</pre>
  </div>

  Typically, the <{address}> element would be included along with other information in a
  <{footer}> element.

  <div class="impl">
    The contact information for a node <var>node</var> is a collection of <code>address</code>
    elements defined by the first applicable entry from the following list:

    <dl class="switch">
      <dt>If <var>node</var> is an <{article}> element</dt>
      <dt>If <var>node</var> is a <{body}> element</dt>
      <dd>
        The contact information consists of all the <{address}> elements that have
        <var>node</var> as an ancestor and do not have another <code>body</code> or
        <{article}> element ancestor that is a descendant of <var>node</var>.
      </dd>

      <dt>If <var>node</var> has an ancestor element that is an <{article}> element</dt>
      <dt>If <var>node</var> has an ancestor element that is a <{body}> element</dt>
      <dd>
        The contact information of <var>node</var> is the same as the contact information of the
        nearest <{article}> or <{body}> element ancestor, whichever is nearest.
      </dd>

      <dt>If <var>node</var>'s <a>node document</a> has a <{body}> element</dt>
      <dd>
        The contact information of <var>node</var> is the same as the contact information of
        <a href="#the-body-element">the <code>body</code> element</a> of the {{Document}}.
      </dd>

      <dt>Otherwise</dt>
      <dd> There is no contact information for <var>node</var>.</dd>
    </dl>

    User agents may expose the contact information of a node to the user, or use it for other
    purposes, such as indexing sections based on the sections' contact information.
  </div>

  <div class="example">
    In this example the footer contains contact information and a copyright notice.

    <pre highlight="html">
      &lt;footer&gt;
        &lt;address&gt;
        For more details, contact
        &lt;a href="mailto:js@example.com"&gt;John Smith&lt;/a&gt;.
        &lt;/address&gt;
        &lt;p&gt;&lt;small&gt;© copyright 2038 Example Corp.&lt;/small&gt;&lt;/p&gt;
      &lt;/footer&gt;
    </pre>
  </div>

<h4 id="headings-and-sections">Headings and sections</h4>

  The <code>h1</code>–<code>h6</code> elements are headings.

  The first element of <a>heading content</a> in an element of <a>sectioning content</a>
  <a>represents</a> the heading for that section. Subsequent headings of equal or higher <a>rank</a>
  start new (implied) sections, headings of lower <a>rank</a> start implied subsections that are
  part of the previous one. In both cases, the element <a>represents</a> the heading of the implied
  section.

  <code>h1</code>–<code>h6</code> elements must not be used to markup subheadings, subtitles,
  alternative titles and taglines unless intended to be the heading for a new section or subsection.
  Instead use the markup patterns in the [[#common-idioms-without-dedicated-elements]] section of
  the specification.

  Certain elements are said to be <dfn>sectioning roots</dfn>, including <code>blockquote</code> and
  <{td}> elements. These elements can have their own outlines, but the sections and
  headings inside these elements do not contribute to the outlines of their ancestors.

  <ul class="brief category-list">
    <li><{blockquote}></li>
    <li><{body}></li>
    <li><{details}></li>
    <li><{dialog}></li>
    <li><{fieldset}></li>
    <li><{figure}></li>
    <li><{td}></li>
  </ul>

  <a>Sectioning content</a> elements are always considered subsections of their nearest ancestor
  <a>sectioning root</a> or their nearest ancestor element of <a>sectioning content</a>, whichever
  is nearest, regardless of what implied sections other headings may have created.

  <div class="example">
    For the following fragment:

    <pre highlight="html">
      &lt;body&gt;
        &lt;h1&gt;Foo&lt;/h1&gt;
        &lt;h2&gt;Bar&lt;/h2&gt;
        &lt;blockquote&gt;
          &lt;h3&gt;Bla&lt;/h3&gt;
        &lt;/blockquote&gt;
        &lt;p&gt;Baz&lt;/p&gt;
        &lt;h2&gt;Quux&lt;/h2&gt;
        &lt;section&gt;
          &lt;h3&gt;Thud&lt;/h3&gt;
        &lt;/section&gt;
        &lt;p&gt;Grunt&lt;/p&gt;
      &lt;/body&gt;
    </pre>

    ...the structure would be:

    1. Foo (heading of explicit <code>body</code> section, containing the "Grunt" paragraph)
        1. Bar (heading starting implied section, containing a block quote and the "Baz" paragraph)
        2. Quux (heading starting implied section with no content other than the heading itself)
        3. Thud (heading of explicit <code>section</code> section)

    Notice how the <code>section</code> ends the earlier implicit section so that a later paragraph
    ("Grunt") is back at the top level.
  </div>

  Sections may contain headings of a <a>rank</a> equal to their section nesting level. Authors should use
  headings of the appropriate <a>rank</a> for the section's nesting level.

  Authors are also encouraged to explicitly wrap sections in elements of <a>sectioning content</a>,
  instead of relying on the implicit sections generated by having multiple headings in one element
  of <a>sectioning content</a>.

  <div class="example">
    For example, the following is correct:

    <pre highlight="html">
      &lt;body&gt;
        &lt;h1&gt;Apples&lt;/h1&gt;
        &lt;p&gt;Apples are fruit.&lt;/p&gt;
        &lt;section&gt;
          &lt;h2&gt;Taste&lt;/h2&gt;
          &lt;p&gt;They taste lovely.&lt;/p&gt;
          &lt;h3&gt;Sweet&lt;/h3&gt;
          &lt;p&gt;Red apples are sweeter than green ones.&lt;/p&gt;
          &lt;h3&gt;Color&lt;/h3&gt;
          &lt;p&gt;Apples come in various colors.&lt;/p&gt;
        &lt;/section&gt;
      &lt;/body&gt;
    </pre>

    However, the same document would be more clearly expressed as:

    <pre highlight="html">
      &lt;body&gt;
        &lt;h1&gt;Apples&lt;/h1&gt;
        &lt;p&gt;Apples are fruit.&lt;/p&gt;
        &lt;section&gt;
          &lt;h2&gt;Taste&lt;/h2&gt;
          &lt;p&gt;They taste lovely.&lt;/p&gt;
          &lt;section&gt;
            &lt;h3&gt;Sweet&lt;/h3&gt;
            &lt;p&gt;Red apples are sweeter than green ones.&lt;/p&gt;
          &lt;/section&gt;
        &lt;/section&gt;
        &lt;section&gt;
          &lt;h3&gt;Color&lt;/h3&gt;
          &lt;p&gt;Apples come in various colors.&lt;/p&gt;
        &lt;/section&gt;
      &lt;/body&gt;
    </pre>

    Both of the documents above are semantically identical and would produce the same outline in
    compliant user agents.
  </div>

<h5 id="creating-an-outline">Creating an outline</h5>

  <p class="warning">
    There are currently no known native implementations of the outline algorithm in graphical browsers or
    assistive technology user agents, although the algorithm is implemented in other software such
    as conformance checkers and browser extensions. Therefore the <a>outline</a> algorithm 
	cannot be relied upon to convey document structure to users. Authors should use heading <a>rank</a>
    (<code>h1</code>-<code>h6</code>) to convey document structure.
  </p>

  <div class="impl">
    This section defines an algorithm for creating an outline for a <a>sectioning content</a>
    element or a <a>sectioning root</a> element. It is defined in terms of a walk over the nodes
    of a DOM tree, in <a>tree order</a>, with each node being visited when it is <i>entered</i> and
    when it is <i>exited</i> during the walk.
  </div>

  The <dfn>outline</dfn> for a <a>sectioning content</a> element or a <a>sectioning root</a> element
  consists of a list of one or more potentially nested <a>sections</a>. The element for which an
  <a>outline</a> is created is said to be <dfn>the outline's owner</dfn>.

  A <dfn>section</dfn> is a container that corresponds to some nodes in the original DOM tree. Each
  section can have one heading associated with it, and can contain any number of further nested
  sections. <span class="impl">The algorithm for the outline also associates each node in the DOM
  tree with a particular section and potentially a heading.</span> (The sections in the outline
  aren't <a element>section</a> elements, though some may correspond to such elements — they are
  merely conceptual sections.)

  <div class="example">
    The following markup fragment:

    <pre highlight="html">
      &lt;body&gt;
        &lt;h1&gt;A&lt;/h1&gt;
        &lt;p&gt;B&lt;/p&gt;
        &lt;h2&gt;C&lt;/h2&gt;
        &lt;p&gt;D&lt;/p&gt;
        &lt;h2&gt;E&lt;/h2&gt;
        &lt;p&gt;F&lt;/p&gt;
      &lt;/body&gt;
    </pre>

    ...results in the following outline being created for the <code>body</code> node (and thus the
    entire document):

    1. Section created for <code>body</code> node. Associated with heading "A". Also associated with
        paragraph "B". Nested sections:
        1. Section implied for first <code>h2</code> element. Associated with heading "C". Also
            associated with paragraph "D". No nested sections.
        2. Section implied for second <code>h2</code> element. Associated with heading "E". Also
            associated with paragraph "F". No nested sections.
  </div>

  <div class="impl">
    The algorithm that must be followed during a walk of a DOM subtree rooted at a
    <a>sectioning content</a> element or a <a>sectioning root</a> element to determine that
    element's <a>outline</a> is as follows:

    1. Let <var>current outline target</var> be null. (It holds the element whose <a>outline</a> is
        being created.)
    2. Let <var>current section</var> be null. (It holds a pointer to a <a>section</a>, so that
        elements in the DOM can all be associated with a section.)
    3. Create a stack to hold elements, which is used to handle nesting. Initialize this stack to
        empty.
    4. Walk over the DOM in <a>tree order</a>, starting with the <a>sectioning content</a> element
        or <a>sectioning root</a> element at the root of the subtree for which an outline is to be
        created, and trigger the first relevant step below for each element as the walk enters and
        exits it.

        <dl class="switch">
          <dt>When exiting an element, if that element is the element at the top of the stack</dt>
          <dd>
            <p class="note">
              The element being exited is a <a>heading content</a> element or an element with a
              <code>hidden</code> attribute.
            </p>

            Pop that element from the stack.
          </dd>

          <dt>
            If the top of the stack is a <a>heading content</a> element or an element with a
            <code>hidden</code> attribute
          </dt>
          <dd>Do nothing.</dd>

          <dt>When entering an element with a <code>hidden</code> attribute</dt>
          <dd>
            Push the element being entered onto the stack. (This causes the algorithm to skip that
            element and any descendants of the element.)
          </dd>

          <dt>When entering a <a>sectioning content</a> element</dt>
          <dd>
            Run these steps:
            1. If <var>current outline target</var> is not null, run these substeps:
                1. If the <var>current section</var> has no heading, create an implied heading and
                    let that be the heading for the <var>current section</var>.
                2. Push <var>current outline target</var> onto the stack.
            2. Let <var>current outline target</var> be the element that is being entered.
            3. Let <var>current section</var> be a newly created <a>section</a> for the
                <var>current outline target</var> element.
            4. Associate <var>current outline target</var> with <var>current section</var>.
            5. Let there be a new <a>outline</a> for the new <var>current outline target</var>,
                initialized with just the new <var>current section</var> as the only <a>section</a>
                in the outline.
          </dd>

          <dt>When exiting a <a>sectioning content</a> element, if the stack is not empty</dt>
          <dd>
            Run these steps:
            1. If the <var>current section</var> has no heading, create an implied heading and let
                that be the heading for the <var>current section</var>.
            2. Pop the top element from the stack, and let the <var>current outline target</var> be
                that element.
            3. Let <var>current section</var> be the last section in the <a>outline</a> of the
                <var>current outline target</var> element.
            4. Append the <a>outline</a> of the <a>sectioning content</a> element being exited to
                the <var>current section</var>. (This does not change which section is the last
                section in the <a>outline</a>.)
          </dd>

          <dt>When entering a <a>sectioning root</a> element</dt>
          <dd>
            Run these steps:
            1. If <var>current outline target</var> is not null, push
                <var>current outline target</var> onto the stack.
            2. Let <var>current outline target</var> be the element that is being entered.
            3. Let <var>current outline target</var>'s <i>parent section</i> be
                <var>current section</var>.
            4. Let <var>current section</var> be a newly created <a>section</a> for the
                <var>current outline target</var> element.
            5. Let there be a new <a>outline</a> for the new <var>current outline target</var>,
                initialized with just the new <var>current section</var> as the only <a>section</a>
                in the outline.
          </dd>

          <dt>When exiting a <a>sectioning root</a> element, if the stack is not empty</dt>
          <dd>
            Run these steps:
            1. If the <var>current section</var> has no heading, create an implied heading and let
                that be the heading for the <var>current section</var>.
            2. Let <var>current section</var> be <var>current outline target</var>'s
                <i>parent section</i>.
            3. Pop the top element from the stack, and let the <var>current outline target</var> be
                that element.
          </dd>

          <dt>
            When exiting a <a>sectioning content</a> element or a <a>sectioning root</a> element
            (when the stack is empty)
          </dt>
          <dd>
            <p class="note">
              The <var>current outline target</var> is the element being exited, and it is the
              <a>sectioning content</a> element or a <a>sectioning root</a> element at the root of
              the subtree for which an outline is being generated.
            </p>

            If the <var>current section</var> has no heading, create an implied heading and
            let that be the heading for the <var>current section</var>.

            Skip to the next step in the overall set of steps. (The walk is over.)
          </dd>

          <dt>When entering a <a>heading content</a> element</dt>
          <dd>
            If the <var>current section</var> has no heading, let the element being entered be the
            heading for the <var>current section</var>.

            Otherwise, if the element being entered has a <a>rank</a> equal to or higher than the
            heading of the last section of the <a>outline</a> of the
            <var>current outline target</var>, or if the heading of the last section of the
            <a>outline</a> of the <var>current outline target</var> is an implied heading, then
            create a new <a>section</a> and append it to the <a>outline</a> of the
            <var>current outline target</var> element, so that this new section is the new last
            section of that outline. Let <var>current section</var> be that new section. Let the
            element being entered be the new heading for the <var>current section</var>.

            Otherwise, run these substeps:
            1. Let <var>candidate section</var> be <var>current section</var>.
            2. <i>Heading loop</i>: If the element being entered has a <a>rank</a> lower than the
                <a>rank</a> of the heading of the <var>candidate section</var>, then create a new
                <a>section</a>, and append it to <var>candidate section</var>. (This does not change
                which section is the last section in the outline.) Let <var>current section</var> be
                this new section. Let the element being entered be the new heading for the
                <var>current section</var>. Abort these substeps.
            3. Let <var>new candidate section</var> be the <a>section</a> that contains
                <var>candidate section</var> in the <a>outline</a> of
                <var>current outline target</var>.
            4. Let <var>candidate section</var> be <var>new candidate section</var>.
            5. Return to the step labeled <i>heading loop</i>.

            Push the element being entered onto the stack. (This causes the algorithm to skip any
            descendants of the element.)

            <p class="note">
              Recall that <code>h1</code> has the <em>highest</em> rank, and <code>h6</code> has the
              lowest rank.
            </p>
          </dd>

          <dt>Otherwise</dt>
          <dd>Do nothing.</dd>
        </dl>

        In addition, whenever the walk exits a node, after doing the steps above, if the node is not
        associated with a <a>section</a> yet, <dfn lt="associate section">associate the node with the <a>section</a></dfn>
        <var>current section</var>.

    5. Associate all non-element nodes that are in the subtree for which an outline is being created
        with the <a>section</a> with which their parent element is associated.
    6. Associate all nodes in the subtree with the heading of the <a>section</a> with which they are
        associated, if any.

    The tree of sections created by the algorithm above, or a proper subset thereof, must be used
    when generating document outlines, for example when generating tables of contents.

    The outline created for <a href="#the-body-element">the <code>body</code> element</a> of a {{Document}} is the <a>outline</a>
      of the entire document.

    When creating an interactive table of contents, entries should jump the user to the relevant
    <a>sectioning content</a> element, if the <a>section</a> was created for a real element in the
    original document, or to the relevant <a>heading content</a> element, if the <a>section</a> in
    the tree was generated for a heading in the above process.

    <p class="note">
      Selecting the first <a>section</a> of the document therefore always takes the user to the top
      of the document, regardless of where the first heading in the <code>body</code> is to be
      found.
    </p>

    The <dfn>outline depth</dfn> of a <a>heading content</a> element associated with a
    <a>section</a> <var>section</var> is the number of <a>sections</a> that are ancestors of
    <var>section</var> in the outermost <a>outline</a> that <var>section</var> finds itself in when
    the <a>outlines</a> of its {{Document}}'s elements are created, plus 1. The
    <a>outline depth</a> of a <a>heading content</a> element not associated with a <a>section</a>
    is 1.

    User agents should provide default headings for sections that do not have explicit section
    headings.

    <div class="example">
      Consider the following snippet:

      <pre highlight="html">
        &lt;body&gt;
          &lt;nav&gt;
            &lt;p&gt;&lt;a href="/"&gt;Home&lt;/a&gt;&lt;/p&gt;
          &lt;/nav&gt;
          &lt;p&gt;Hello world.&lt;/p&gt;
          &lt;aside&gt;
            &lt;p&gt;My cat is cute.&lt;/p&gt;
          &lt;/aside&gt;
        &lt;/body&gt;
      </pre>

      Although it contains no headings, this snippet has three sections: a document (the
      <{body}>) with two subsections (a <{nav}> and an <{aside}>). A user
      agent could present the outline as follows:

      1. Untitled document
          1. Navigation
          2. Sidebar

      These default headings ("Untitled document", "Navigation", "Sidebar") are not specified by
      this specification, and might vary with the user's language, the page's language, the user's
      preferences, the user agent implementor's preferences, etc.
    </div>

    <div class="note">
      The following JavaScript function shows how the tree walk could be implemented. The
      <var>root</var> argument is the root of the tree to walk (either a <a>sectioning content</a>
      element or a <a>sectioning root</a> element), and the <var>enter</var> and <var>exit</var>
      arguments are callbacks that are called with the nodes as they are entered and exited.
      [[!ECMA-262]]

      <pre highlight="javascript">
        function (root, enter, exit) {
          var node = root;
          start: while (node) {
            enter(node);
            if (node.firstChild) {
              node = node.firstChild;
              continue start;
            }
            while (node) {
              exit(node);
              if (node == root) {
                node = null;
              } else if (node.nextSibling) {
                node = node.nextSibling;
                continue start;
              } else {
                node = node.parentNode;
              }
            }
          }
        }
      </pre>
    </div>
  </div>

<h5 id="sample-outlines">Sample outlines</h5>

  <em>This section is non-normative.</em>

  <div class="example">
    The following document shows a straight-forward application of the <a>outline</a> algorithm.
    First, here is the document, which is a book with very short chapters and subsections:

    <pre highlight="html">
      &lt;!DOCTYPE HTML&gt;
      &lt;title&gt;The Tax Book (all in one page)&lt;/title&gt;
      &lt;h1&gt;The Tax Book&lt;/h1&gt;
      &lt;h2&gt;Earning money&lt;/h2&gt;
      &lt;p&gt;Earning money is good.&lt;/p&gt;
      &lt;h3&gt;Getting a job&lt;/h3&gt;
      &lt;p&gt;To earn money you typically need a job.&lt;/p&gt;
      &lt;h2&gt;Spending money&lt;/h2&gt;
      &lt;p&gt;Spending is what money is mainly used for.&lt;/p&gt;
      &lt;h3&gt;Cheap things&lt;/h3&gt;
      &lt;p&gt;Buying cheap things often not cost-effective.&lt;/p&gt;
      &lt;h3&gt;Expensive things&lt;/h3&gt;
      &lt;p&gt;The most expensive thing is often not the most cost-effective either.&lt;/p&gt;
      &lt;h2&gt;Investing money&lt;/h2&gt;
      &lt;p&gt;You can lend your money to other people.&lt;/p&gt;
      &lt;h2&gt;Losing money&lt;/h2&gt;
      &lt;p&gt;If you spend money or invest money, sooner or later you will lose money.
      &lt;h3&gt;Poor judgement&lt;/h3&gt;
      &lt;p&gt;Usually if you lose money it's because you made a mistake.&lt;/p&gt;
    </pre>

    This book would form the following outline:

    1. The Tax Book
        1. Earning money
            1. Getting a job
        2. Spending money
            1. Cheap things
            2. Expensive things
        3. Investing money
        4. Losing money
            1. Poor judgement

    Notice that the <a element for="html"><code>title</code></a> element does not participate in the outline.
  </div>

  <div class="example">
    Here is a similar document, but this time using <{section}> elements to get the same
    effect:

    <pre highlight="html">
      &lt;!DOCTYPE HTML&gt;
      &lt;title&gt;The Tax Book (all in one page)&lt;/title&gt;
      &lt;h1&gt;The Tax Book&lt;/h1&gt;
      &lt;section&gt;
        &lt;h1&gt;Earning money&lt;/h1&gt;
        &lt;p&gt;Earning money is good.&lt;/p&gt;
        &lt;section&gt;
          &lt;h1&gt;Getting a job&lt;/h1&gt;
          &lt;p&gt;To earn money you typically need a job.&lt;/p&gt;
        &lt;/section&gt;
      &lt;/section&gt;
      &lt;section&gt;
        &lt;h1&gt;Spending money&lt;/h1&gt;
        &lt;p&gt;Spending is what money is mainly used for.&lt;/p&gt;
        &lt;section&gt;
          &lt;h1&gt;Cheap things&lt;/h1&gt;
          &lt;p&gt;Buying cheap things often not cost-effective.&lt;/p&gt;
        &lt;/section&gt;
        &lt;section&gt;
          &lt;h1&gt;Expensive things&lt;/h1&gt;
          &lt;p&gt;The most expensive thing is often not the most cost-effective either.&lt;/p&gt;
        &lt;/section&gt;
      &lt;/section&gt;
      &lt;section&gt;
        &lt;h1&gt;Investing money&lt;/h1&gt;
        &lt;p&gt;You can lend your money to other people.&lt;/p&gt;
      &lt;/section&gt;
      &lt;section&gt;
        &lt;h1&gt;Losing money&lt;/h1&gt;
        &lt;p&gt;If you spend money or invest money, sooner or later you will lose money.
        &lt;section&gt;
          &lt;h1&gt;Poor judgement&lt;/h1&gt;
          &lt;p&gt;Usually if you lose money it's because you made a mistake.&lt;/p&gt;
        &lt;/section&gt;
      &lt;/section&gt;
    </pre>

    This book would form the same outline:

    1. The Tax Book
        1. Earning money
            1. Getting a job
        2. Spending money
            1. Cheap things
            2. Expensive things
        3. Investing money
        4. Losing money
            1. Poor judgement
  </div>

  <div class="example">
    A document can contain multiple top-level headings:

    <pre highlight="html">
      &lt;!DOCTYPE HTML&gt;
      &lt;title&gt;Alphabetic Fruit&lt;/title&gt;
      &lt;h1&gt;Apples&lt;/h1&gt;
      &lt;p&gt;Pomaceous.&lt;/p&gt;
      &lt;h1&gt;Bananas&lt;/h1&gt;
      &lt;p&gt;Edible.&lt;/p&gt;
      &lt;h1&gt;Oranges&lt;/h1&gt;
      &lt;p&gt;Star.&lt;/p&gt;
    </pre>

    This would form the following simple outline consisting of three top-level sections:

    1. Apples
    2. Bananas
    3. Oranges

    Effectively, the <{body}> element is split into three.
  </div>

  <div class="example">
    Mixing both the <code>h1</code>–<code>h6</code> model and the
    <code>section</code>/<code>h1</code> model can lead to some unintuitive results.

    Consider for example the following, which is just the previous example but with the contents
    of the (implied) <code>body</code> wrapped in a <code>section</code>:

    <pre highlight="html">
      &lt;!DOCTYPE HTML&gt;
      &lt;title&gt;Alphabetic Fruit&lt;/title&gt;
      &lt;section&gt;
        &lt;h1&gt;Apples&lt;/h1&gt;
        &lt;p&gt;Pomaceous.&lt;/p&gt;
        &lt;h1&gt;Bananas&lt;/h1&gt;
        &lt;p&gt;Edible.&lt;/p&gt;
        &lt;h1&gt;Oranges&lt;/h1&gt;
        &lt;p&gt;Star.&lt;/p&gt;
      &lt;/section&gt;
    </pre>

    The resulting outline would be:

    1. <i>(untitled page)</i>
        1. Apples
        2. Bananas
        3. Oranges

    This result is described as <i>unintuitive</i> because it results in three subsections even
    though there's only one <{section}> element. Effectively, the <code>section</code> is
    split into three, just like the implied <{body}> element in the previous example.

    (In this example, "<i>(untitled page)</i>" is the implied heading for the <code>body</code>
    element, since it has no explicit heading.)
  </div>

  <div class="example">
    Headings never rise above other sections. Thus, in the following example, the first
    <code>h1</code> does not actually describe the page header; it describes the header for the
    second half of the page:

    <pre highlight="html">
      &lt;!DOCTYPE HTML&gt;
      &lt;title&gt;Feathers on The Site of Encyclopedic Knowledge&lt;/title&gt;
      &lt;section&gt;
        &lt;h1&gt;A plea from our caretakers&lt;/h1&gt;
        &lt;p&gt;Please, we beg of you, send help! We're stuck in the server room!&lt;/p&gt;
      &lt;/section&gt;
      &lt;h1&gt;Feathers&lt;/h1&gt;
      &lt;p&gt;Epidermal growths.&lt;/p&gt;
    </pre>

    The resulting outline would be:

    1. <i>(untitled page)</i>
        1. A plea from our caretakers
    2. Feathers
  </div>

  <div class="example">
    Thus, when an <{article}> element starts with a <{nav}> block and only later
    has its heading, the result is that the <{nav}> block is not part of the same section
    as the rest of the <{article}> in the outline. For instance, take this document:

    <pre highlight="html">
      &lt;!DOCTYPE HTML&gt;
      &lt;title&gt;We're adopting a child! — Ray's blog&lt;/title&gt;
      ...

      &lt;h1&gt;Ray's blog&lt;/h1&gt;

      &lt;main&gt;
        &lt;article&gt;
          &lt;header&gt;
            &lt;nav&gt;
              &lt;a href="?t=-1d"&gt;Yesterday&lt;/a&gt;;
              &lt;a href="?t=-7d"&gt;Last week&lt;/a&gt;;
              &lt;a href="?t=-1m"&gt;Last month&lt;/a&gt;
            &lt;/nav&gt;
          &lt;/header&gt;
          &lt;h2&gt;We're adopting a child!&lt;/h2&gt;

          &lt;p&gt;As of today, Janine and I have signed the papers to become
          the proud parents of baby Diane! We've been looking forward to
          this day for weeks.&lt;/p&gt;
        &lt;/article&gt;
      &lt;/main&gt;
      ...
    </pre>

    The resulting outline would be:

    1. Ray's blog
        1. <i>Untitled article</i>
            1. <i>Untitled navigation section</i>
        2. We're adopting a child!

    Also worthy of note in this example is that the <{header}> and <{main}>
    elements have no effect whatsoever on the document outline.
  </div>

<h5 id="exposing-outlines-to-users">Exposing outlines to users</h5>

  User agents are encouraged to expose page outlines to users to aid in navigation. This is
  especially true for non-visual media, e.g., screen readers.

  However, to mitigate the difficulties that arise from authors misusing <a>sectioning content</a>,
  user agents are also encouraged to offer a mode that navigates the page using
  <a>heading content</a> alone.

  <div class="example">
    For instance, a user agent could map the arrow keys as follows:

    : <kbd>Shift</kbd>+<kbd>← Left</kbd>
    :: Go to previous section, including subsectons of previous sections

    : <kbd>Shift</kbd>+<kbd>→ Right</kbd>
    :: Go to next section, including subsections of the current section

    : <kbd>Shift</kbd>+<kbd>↑ Up</kbd>
    :: Go to parent section of the current section

    : <kbd>Shift</kbd>+<kbd>↓ Down</kbd>
    :: Go to next section, skipping subsections of the current section

    Plus in addition, the user agent could map the <kbd>j</kbd> and
    <kbd>k</kbd> keys to navigating to the previous or next element of
    <a>heading content</a>, regardless of the section's outline depth and ignoring sections with no
    headings.
  </div>

<h4 id="sections-usage-summary">Usage summary</h4>

  <em>This section is non-normative.</em>

  <table class="vertical-summary-table">
    <thead>
      <tr>
        <th rowspan="2">Element</th>
        <th>Purpose</th>
      </tr>
      <tr>
        <th>Example</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td rowspan="2"><{body}></td>
        <td></td>
      </tr>
      <tr>
        <td>
          <pre highlight="html">
            &lt;!DOCTYPE HTML&gt;
            &lt;html&gt;
              &lt;head&gt; &lt;title&gt;Steve Hill's Home Page&lt;/title&gt; &lt;/head&gt;
              &lt;body&gt; &lt;p&gt;Hard Trance is My Life.&lt;/p&gt; &lt;/body&gt;
            &lt;/html&gt;
          </pre>
        </td>
      </tr>
      <tr>
        <td rowspan="2"><{article}></td>
        <td></td>
      </tr>
      <tr>
        <td>
          <pre highlight="html">
            &lt;article&gt;
              &lt;img src="/tumblr_masqy2s5yn1rzfqbpo1_500.jpg" alt="Yellow smiley face with the caption 'masif'"&gt;
              &lt;p&gt;My fave Masif tee so far!&lt;/p&gt;
              &lt;footer&gt;Posted 2 days ago&lt;/footer&gt;
            &lt;/article&gt;
            &lt;article&gt;
              &lt;img src="/tumblr_m9tf6wSr6W1rzfqbpo1_500.jpg" alt=""&gt;
              &lt;p&gt;Happy 2nd birthday Masif Saturdays!!!&lt;/p&gt;
              &lt;footer&gt;Posted 3 weeks ago&lt;/footer&gt;
            &lt;/article&gt;
          </pre>
        </td>
      </tr>
      <tr>
        <td rowspan="2"><{section}></td>
        <td></td>
      </tr>
      <tr>
        <td>
          <pre highlight="html">
            &lt;h1&gt;Biography&lt;/h1&gt;
            &lt;section&gt;
              &lt;h1&gt;The facts&lt;/h1&gt;
              &lt;p&gt;1500+ shows, 14+ countries&lt;/p&gt;
            &lt;/section&gt;
            &lt;section&gt;
              &lt;h1&gt;2010/2011 figures per year&lt;/h1&gt;
              &lt;p&gt;100+ shows, 8+ countries&lt;/p&gt;
            &lt;/section&gt;
          </pre>
        </td>
      </tr>
      <tr>
        <td rowspan="2"><{nav}></td>
        <td></td>
      </tr>
      <tr>
        <td>
          <pre highlight="html">
            &lt;nav&gt;
              &lt;ul&gt;
                &lt;li&gt;&lt;a href="/"&gt;Home&lt;/a&gt;
                &lt;li&gt;&lt;a href="/biog.html"&gt;Bio&lt;/a&gt;
                &lt;li&gt;&lt;a href="/discog.html"&gt;Discog&lt;/a&gt;
              &lt;/ul&gt;
            &lt;/nav&gt;
          </pre>
        </td>
      </tr>
      <tr>
        <td rowspan="2"><{aside}></td>
        <td></td>
      </tr>
      <tr>
        <td>
          <pre highlight="html">
            &lt;h1&gt;Music&lt;/h1&gt;
            &lt;p&gt;As any burner can tell you, the event has a lot of trance.&lt;/p&gt;
            &lt;aside&gt;You can buy the music we played at our &lt;a href="buy.html"&gt;playlist page&lt;/a&gt;.&lt;/aside&gt;
            &lt;p&gt;This year we played a kind of trance that originated in Belgium, Germany, and the Netherlands in the mid 90s.&lt;/p&gt;
          </pre>
        </td>
      </tr>
      <tr>
        <td rowspan="2"><{h1}>–<code>h6</code></td>
        <td>A section heading</td>
      </tr>
      <tr>
        <td>
          <pre highlight="html">
            &lt;h1&gt;The Guide To Music On The Playa&lt;/h1&gt;
            &lt;h2&gt;The Main Stage&lt;/h2&gt;
            &lt;p&gt;If you want to play on a stage, you should bring one.&lt;/p&gt;
            &lt;h2&gt;Amplified Music&lt;/h2&gt;
            &lt;p&gt;Amplifiers up to 300W or 90dB are welcome.&lt;/p&gt;
          </pre>
        </td>
      </tr>
      <tr>
        <td rowspan="2"><{header}></td>
        <td></td>
      </tr>
      <tr>
        <td>
          <pre highlight="html">
            &lt;article&gt;
              &lt;header&gt;
              &lt;h1&gt;Hard Trance is My Life&lt;/h1&gt;
              &lt;p&gt;By DJ Steve Hill and Technikal&lt;/p&gt;
              &lt;/header&gt;
              &lt;p&gt;The album with the amusing punctuation has red artwork.&lt;/p&gt;
            &lt;/article&gt;
          </pre>
        </td>
      </tr>
      <tr>
        <td rowspan="2"><{footer}></td>
        <td></td>
      </tr>
      <tr>
        <td>
          <pre highlight="html">
            &lt;article&gt;
              &lt;h1&gt;Hard Trance is My Life&lt;/h1&gt;
              &lt;p&gt;The album with the amusing punctuation has red artwork.&lt;/p&gt;
              &lt;footer&gt;
              &lt;p&gt;Artists: DJ Steve Hill and Technikal&lt;/p&gt;
              &lt;/footer&gt;
            &lt;/article&gt;
          </pre>
        </td>
      </tr>
    </tbody>
  </table>

<h5 id="article-or-section">Article or section?</h5>

  <em>This section is non-normative.</em>

  A <{section}> forms part of something else. An <{article}> is its own thing. But
  how does one know which is which? Mostly the real answer is "it depends on author intent".

  For example, one could imagine a book with a "Granny Smith" chapter that just said "These juicy,
  green apples make a great filling for apple pies."; that would be a <{section}> because
  there'd be lots of other chapters on (maybe) other kinds of apples.

  On the other hand, one could imagine a tweet or reddit comment or tumblr post or newspaper
  classified ad that just said "Granny Smith. These juicy, green apples make a great filling for
  apple pies."; it would then be <{article}>s because that was the whole thing.

  A comment on an article is not part of the <{article}> on which it is commenting,
  therefore it is its own <{article}>.

</section>
