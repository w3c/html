<section>
<!--
 ███████  ████████   ██████   ███████  ██       ████████ ████████ ████████
██     ██ ██     ██ ██    ██ ██     ██ ██       ██          ██    ██
██     ██ ██     ██ ██       ██     ██ ██       ██          ██    ██
██     ██ ████████   ██████  ██     ██ ██       ██████      ██    ██████
██     ██ ██     ██       ██ ██     ██ ██       ██          ██    ██
██     ██ ██     ██ ██    ██ ██     ██ ██       ██          ██    ██
 ███████  ████████   ██████   ███████  ████████ ████████    ██    ████████
-->

<h2 id="obsolete">Obsolete features</h2>

<h3 id="obsolete-but-conforming-features">Obsolete but conforming features</h3>

  Features listed in this section will trigger warnings in conformance checkers.

  Authors should not specify a <{img/border}> attribute on an <{img}> element. If the
  attribute is present, its value must be the string "<code>0</code>". CSS should be used instead.

  Authors should not specify a <{script/language}> attribute on a <{script}> element. If
  the attribute is present, its value must be an <a>ASCII case-insensitive</a> match for the string
  "<code>JavaScript</code>" and either the <{script/type}> attribute must be omitted or its value
  must be an <a>ASCII case-insensitive</a> match for the string "<code>text/javascript</code>".
  The attribute should be entirely omitted instead (with the value "<code>JavaScript</code>", it has
  no effect), or replaced with use of the <{script/type}> attribute.

  Authors should not specify the <{a/name}> attribute on <{a}> elements. If the
  attribute is present, its value must not be the empty string and must neither be equal to the
  value of any of the <a>IDs</a> in the element's <a>home subtree</a> other than the element's own
  <{global/id}>, if any, nor be equal to the value of any of the other <{a/name}> attributes on
  <{a}> elements in the element's <a>home subtree</a>. If this attribute is present and the
  element has an <{global/id}>, then the attribute's value must be equal to the element's <{global/id}>. In
  earlier versions of the language, this attribute was intended as a way to specify possible targets
  for fragment identifiers in <a for="url">URLs</a>. The <{global/id}> attribute should be used instead.

  Authors should not, but may despite requirements to the contrary elsewhere in this specification,
  specify the <{input/maxlength}> and <{input/size}> attributes on <{input}> elements
  whose <{input/type}> attributes are in the <a element-state for="input">Number</a> state. One
  valid reason for using these attributes regardless is to help legacy user agents that do not
  support <{input}> elements with <code>type="number"</code> to still render the text field with a
  useful width.

  <p class="note">
    In <a href="#syntax">the HTML syntax</a>, specifying a <a>DOCTYPE</a> that is an <a>obsolete permitted
    DOCTYPE</a> will also trigger a warning.
  </p>

    <h4 id="warnings-for-obsolete-but-conforming-features">Warnings for obsolete but conforming features</h4>

  To ease the transition from HTML Transitional documents to the language defined in <em>this</em>
  specification, and to discourage certain features that are only allowed in very few circumstances,
  conformance checkers must warn the user when the following features are used in a document. These
  are generally old obsolete features that have no effect, and are allowed only to distinguish
  between likely mistakes (regular conformance errors) and mere vestigial markup or unusual and
  discouraged practices (these warnings).

    The following features must be categorized as described above:

    * The presence of an <a>obsolete permitted DOCTYPE</a> in an <a>HTML document</a>.

  * The presence of a <{img/border}> attribute on an <{img}> element if its value is the string
    "<code>0</code>".

  * The presence of a <{script/language}> attribute on a <{script}> element if its value is an
    <a>ASCII case-insensitive</a> match for the string "<code>JavaScript</code>" and if there is no
    <{script/type}> attribute or there is and its value is an <a>ASCII case-insensitive</a> match
    for the string "<code>text/javascript</code>".

  * The presence of a <{a/name}> attribute on an <{a}> element, if its value is not the empty string.

  * The presence of a <{input/maxlength}> attribute on an <{input}> element whose <{input/type}>
    attribute is in the <a element-state for="input">Number</a> state.

  * The presence of a <{input/size}> attribute on an <{input}> element whose <{input/type}>
    attribute is in the <a element-state for="input">Number</a> state.

  Conformance checkers must distinguish between pages that have no conformance errors and have none
  of these obsolete features, and pages that have no conformance errors but do have some of these
  obsolete features.

    <p class="example">
    For example, a validator could report some pages as "Valid HTML" and others as "Valid HTML with
    warnings".
    </p>

<h3 id="non-conforming-features">Non-conforming features</h3>

  Elements in the following list are entirely obsolete, and must not be used by authors:

  : <code>applet</code>
  :: Use <{embed}> or <{object}> instead.

  : <dfn element><code>acronym</code></dfn>
  :: Use <{abbr}> instead.

  : <dfn element><code>bgsound</code></dfn>
  :: Use <{audio}> instead.

  : <dfn element><code>dir</code></dfn>
  :: Use <{ul}> instead.

  : <code>frame</code>
  : <code>frameset</code>
  : <dfn element><code>noframes</code></dfn>
  :: Either use <{iframe}> and CSS instead, or use server-side includes to generate
      complete pages with the various invariant parts merged in.

  : <dfn element><code>isindex</code></dfn>
  :: Use an explicit <{form}> and <a element-state for="input" lt="Text">text field</a> combination instead.

  : <dfn element><code>listing</code></dfn>
  :: Use <{pre}> and <{code}> instead.

  : <dfn element><code>nextid</code></dfn>
  :: Use GUIDs instead.

  : <dfn element><code>noembed</code></dfn>
  :: Use <{object}> instead of <{embed}> when fallback is necessary.

  : <dfn element><code>plaintext</code></dfn>
  :: Use the "<code>text/plain</code>" <a>MIME type</a> instead.

  : <{rb}>
  : <{rtc}>
  :: Providing the ruby base directly inside the <{ruby}> element or using nested <{ruby}> elements
      is sufficient.

  : <dfn element><code>strike</code></dfn>
  :: Use <code>del</code> instead if the element is marking an edit, otherwise use <code>s</code>
      instead.

  : <dfn element><code>xmp</code></dfn>
  :: Use <{pre}> and <{code}> instead, and escape "<code>&lt;</code>" and
      "<code>&amp;</code>" characters as "<code>&amp;lt;</code>" and "<code>&amp;amp;</code>"
      respectively.

  : <dfn element><code>basefont</code></dfn>
  : <dfn element><code>big</code></dfn>
  : <dfn element><code>blink</code></dfn>
  : <dfn element><code>center</code></dfn>
  : <dfn element><code>font</code></dfn>
  : <{marquee}>
  : <dfn element><code>multicol</code></dfn>
  : <dfn element><code>nobr</code></dfn>
  : <dfn element><code>spacer</code></dfn>
  : <dfn element><code>tt</code></dfn>
  :: Use appropriate elements or CSS instead.

      Where the <{tt}> element would have been used for marking up keyboard input,
      consider the <{kbd}> element; for variables, consider the <{var}> element;
      for computer code, consider the <{code}> element; and for computer output, consider
      the <{samp}> element.

      Similarly, if the <{big}> element is being used to denote a heading, consider using
      the <code>h1</code> element; if it is being used for marking up important passages, consider
      the <{strong}> element; and if it is being used for highlighting text for reference
      purposes, consider the <{mark}> element.

      See also the <a href="#text-level-semantics-usage-summary">text-level semantics usage summary</a> for more suggestions with examples.

  <hr />

  The following attributes are obsolete (though the elements are still part of the language), and
  must not be used by authors:

  : <dfn element-attr for="a"><code>charset</code></dfn> on <{a}> elements
  : <dfn element-attr for="link"><code>charset</code></dfn> on <{link}> elements
  :: Use an HTTP <code>Content-Type</code> header on the linked resource instead.

  : <dfn element-attr for="a"><code>coords</code></dfn> on <{a}> elements
  : <dfn element-attr for="a"><code>shape</code></dfn> on <{a}> elements
  :: Use <code>area</code> instead of <{a}> for image maps.

  : <dfn element-attr for="a"><code>methods</code></dfn> on <{a}> elements
  : <dfn element-attr for="link"><code>methods</code></dfn> on <{link}> elements
  :: Use the HTTP OPTIONS feature instead.

  : <dfn element-attr for="a"><code>name</code></dfn> on <{a}> elements (except as noted in the
      previous section)
  : <dfn element-attr for="embed"><code>name</code></dfn> on <{embed}> elements
  : <dfn element-attr for="img"><code>name</code></dfn> on <{img}> elements
  : <dfn element-attr for="option"><code>name</code></dfn> on <{option}> elements
  :: Use the <{global/id}> attribute instead.

  : <dfn element-attr for="a"><code>urn</code></dfn> on <{a}> elements
  : <dfn element-attr for="link"><code>urn</code></dfn> on <{link}> elements
  :: Specify the preferred persistent identifier using the <{link/href}> attribute instead.

  : <dfn element-attr for="form"><code>accept</code></dfn> on <{form}> elements
  :: Use the <{input/accept}> attribute directly on the <{input}> elements instead.

  : <dfn element-attr for="area"><code>type</code></dfn> on <{area}> elements
  :: These attributes do not do anything useful, and for historical reasons there are no
      corresponding IDL attributes on <{area}> elements. Omit them altogether.

  : <dfn element-attr for="area"><code>nohref</code></dfn> on <{area}> elements
  :: Omitting the <{links/href}> attribute is sufficient; the <code>nohref</code> attribute is
      unnecessary. Omit it altogether.

  : <dfn element-attr for="head"><code>profile</code></dfn> on <{head}> elements
  :: When used for declaring which <code>meta</code> terms are used in the document, unnecessary;
      omit it altogether, and <a>register the names</a>.
  :: When used for triggering specific user agent behaviors: use a <{link}> element
      instead.

  : <dfn element-attr for="html"><code>version</code></dfn> on <{html}> elements
  :: Unnecessary. Omit it altogether.

  : <dfn element-attr for="input"><code>ismap</code></dfn> on <{input}> elements
  :: Unnecessary. Omit it altogether. All <{input}> elements with a <code>type</code> attribute in
      the <a element-state for="input">image button</a> state are processed as server-side image
      maps.

  : <dfn element-attr for="input"><code>usemap</code></dfn> on <{input}> elements
  :: Use <code>img</code> instead of <code>input</code> for image maps.

  : <dfn element-attr for="iframe,frame"><code>longdesc</code></dfn> on <{iframe}> and <{frame}> elements

  : <dfn element-attr for="img"><code>lowsrc</code></dfn> on <{img}> elements
  :: Use a progressive JPEG image (given in the <code>src</code> attribute), instead of using two
      separate images.

  : <dfn element-attr for="link"><code>target</code></dfn> on <{link}> elements
  :: Unnecessary. Omit it altogether.

  : <dfn element-attr for="meta"><code>scheme</code></dfn> on <{meta}> elements
  :: Use only one scheme per field, or make the scheme declaration part of the value.

  : <dfn element-attr for="object"><code>archive</code></dfn> on <{object}> elements
  : <dfn element-attr for="object"><code>classid</code></dfn> on <{object}> elements
  : <dfn element-attr for="object"><code>code</code></dfn> on <{object}> elements
  : <dfn element-attr for="object"><code>codebase</code></dfn> on <{object}> elements
  : <dfn element-attr for="object"><code>codetype</code></dfn> on <{object}> elements
  :: Use the <{object/data}> and <{object/type}> attributes to invoke <a>plugins</a>. To set
      parameters with these names in particular, the <{param}> element can be used.

  : <dfn element-attr for="object"><code>declare</code></dfn> on <{object}> elements
  :: Repeat the <{object}> element completely each time the resource is to be reused.

  : <dfn element-attr for="object"><code>standby</code></dfn> on <{object}> elements
  :: Optimize the linked resource so that it loads quickly or, at least, incrementally.

  : <dfn element-attr for="param"><code>type</code></dfn> on <{param}> elements
  : <dfn element-attr for="param"><code>valuetype</code></dfn> on <{param}> elements
  :: Use the <code>name</code> and <code>value</code> attributes without declaring value types.

  : <dfn element-attr for="script"><code>language</code></dfn> on <{script}> elements (except as
      noted in the previous section)
  :: Use the <code>type</code> attribute instead.

  : <dfn element-attr for="script"><code>event</code></dfn> on <{script}> elements
  : <dfn element-attr for="script"><code>for</code></dfn> on <{script}> elements
  :: Use DOM events mechanisms to register event listeners. [[!DOM]]

  : <{source/media}> on <{source}> elements
  :: Use script to select the media resource(s) to use.

  : <dfn element-attr for="table"><code>datapagesize</code></dfn> on <{table}> elements
  :: Unnecessary. Omit it altogether.

  : <dfn element-attr for="table"><code>summary</code></dfn> on <{table}> elements
  :: Use one of the [[#sec-techniques-for-describing-tables]] given in the <code>table</code>
      section instead.

  : <dfn element-attr for="td"><code>abbr</code></dfn> on <{td}> elements
  :: Use text that begins in an unambiguous and terse manner, and include any more elaborate text
      after that. The <code>title</code> attribute can also be useful in including more detailed
      text, so that the cell's contents can be made terse. If it's a heading, use <code>th</code>
      (which has an <code>abbr</code> attribute).

  : <dfn element-attr for="td"><code>axis</code></dfn> on <{td}> and <{th}> elements
  :: Use the <{th/scope}> attribute on the relevant <{th}>.

  : <dfn element-attr for="td"><code>scope</code></dfn> on <{td}> elements
  :: Use <{th}> elements for heading cells.

  : <dfn element-attr for="data"><code>datasrc</code></dfn> on <{a}>, <{applet}>, <{button}>,
      <{div}>, <{frame}>, <{iframe}>, <{img}>, <{input}>, <{label}>, <{legend}>, <{marquee}>,
      <{object}>, <{option}>, <{select}>, <{span}>, <{table}>, and <{textarea}> elements
  : <dfn element-attr for="data"><code>datafld</code></dfn> on <{a}>, <{applet}>, <{button}>,
      <{div}>, <{fieldset}>, <{frame}>, <{iframe}>, <{img}>, <{input}>, <{label}>, <{legend}>,
      <{marquee}>, <{object}>, <{param}>, <{select}>, <{span}>, and <{textarea}> elements
  : <dfn element-attr for="data"><code>dataformatas</code></dfn> on <{button}>, <{div}>,
      <{input}>, <{label}>, <{legend}>, <{marquee}>, <{object}>, <{option}>, <{select}>, <{span}>,
      and <{table}> elements
  :: Use script and a mechanism such as <code>XMLHttpRequest</code> to populate the page
      dynamically. [[!XHR]]

  : <dfn element-attr for="body"><code>alink</code></dfn> on <{body}> elements
  : <dfn element-attr for="body"><code>bgcolor</code></dfn> on <{body}> elements
  : <dfn element-attr for="body"><code>bottommargin</code></dfn> on <{body}> elements
  : <dfn element-attr for="body"><code>leftmargin</code></dfn> on <{body}> elements
  : <dfn element-attr for="body"><code>link</code></dfn> on <{body}> elements
  : <dfn element-attr for="body"><code>marginheight</code></dfn> on <{body}> elements
  : <dfn element-attr for="body"><code>marginwidth</code></dfn> on <{body}> elements
  : <dfn element-attr for="body"><code>rightmargin</code></dfn> on <{body}> elements
  : <dfn element-attr for="body"><code>text</code></dfn> on <{body}> elements
  : <dfn element-attr for="body"><code>margintop</code></dfn> on <{body}> elements
  : <dfn element-attr for="body"><code>vlink</code></dfn> on <{body}> elements
  : <dfn element-attr for="br"><code>clear</code></dfn> on <{br}> elements
  : <dfn element-attr for="caption"><code>align</code></dfn> on <{caption}> elements
  : <dfn element-attr for="col"><code>align</code></dfn> on <{col}> elements
  : <dfn element-attr for="col"><code>char</code></dfn> on <{col}> elements
  : <dfn element-attr for="col"><code>charoff</code></dfn> on <{col}> elements
  : <dfn element-attr for="col"><code>valign</code></dfn> on <{col}> elements
  : <dfn element-attr for="col"><code>width</code></dfn> on <{col}> elements
  : <dfn element-attr for="div"><code>align</code></dfn> on <{div}> elements
  : <dfn element-attr for="dl"><code>compact</code></dfn> on <{dl}> elements
  : <dfn element-attr for="embed"><code>align</code></dfn> on <{embed}> elements
  : <dfn element-attr for="embed"><code>hspace</code></dfn> on <{embed}> elements
  : <dfn element-attr for="embed"><code>vspace</code></dfn> on <{embed}> elements
  : <dfn element-attr for="hr"><code>align</code></dfn> on <{hr}> elements
  : <dfn element-attr for="hr"><code>color</code></dfn> on <{hr}> elements
  : <dfn element-attr for="hr"><code>noshade</code></dfn> on <{hr}> elements
  : <dfn element-attr for="hr"><code>size</code></dfn> on <{hr}> elements
  : <dfn element-attr for="hr"><code>width</code></dfn> on <{hr}> elements
  : <dfn element-attr for="headings"><code>align</code></dfn> on <{h1}>&mdash;<{h6}> elements
  : <dfn element-attr for="iframe"><code>align</code></dfn> on <{iframe}> elements
  : <dfn element-attr for="iframe"><code>allowtransparency</code></dfn> on <{iframe}> elements
  : <dfn element-attr for="iframe"><code>frameborder</code></dfn> on <{iframe}> elements
  : <dfn element-attr for="iframe"><code>framespacing</code></dfn> on <{iframe}> elements
  : <dfn element-attr for="iframe"><code>hspace</code></dfn> on <{iframe}> elements
  : <dfn element-attr for="iframe"><code>marginheight</code></dfn> on <{iframe}> elements
  : <dfn element-attr for="iframe"><code>marginwidth</code></dfn> on <{iframe}> elements
  : <dfn element-attr for="iframe"><code>scrolling</code></dfn> on <{iframe}> elements
  : <dfn element-attr for="iframe"><code>vspace</code></dfn> on <{iframe}> elements
  : <dfn element-attr for="input"><code>align</code></dfn> on <{input}> elements
  : <dfn element-attr for="input"><code>border</code></dfn> on <{input}> elements
  : <dfn element-attr for="input"><code>hspace</code></dfn> on <{input}> elements
  : <dfn element-attr for="input"><code>vspace</code></dfn> on <{input}> elements
  : <dfn element-attr for="img"><code>align</code></dfn> on <{img}> elements
  : <dfn element-attr for="img"><code>border</code></dfn> on <{img}> elements (except as noted in the previous section)
  : <dfn element-attr for="img"><code>hspace</code></dfn> on <{img}> elements
  : <dfn element-attr for="img"><code>vspace</code></dfn> on <{img}> elements
  : <dfn element-attr for="legend"><code>align</code></dfn> on <{legend}> elements
  : <dfn element-attr for="li"><code>type</code></dfn> on <{li}> elements
  : <dfn element-attr for="menu"><code>compact</code></dfn> on <{menu}> elements
  : <dfn element-attr for="object"><code>align</code></dfn> on <{object}> elements
  : <dfn element-attr for="object"><code>border</code></dfn> on <{object}> elements
  : <dfn element-attr for="object"><code>hspace</code></dfn> on <{object}> elements
  : <dfn element-attr for="object"><code>vspace</code></dfn> on <{object}> elements
  : <dfn element-attr for="ol"><code>compact</code></dfn> on <{ol}> elements
  : <dfn element-attr for="p"><code>align</code></dfn> on <{p}> elements
  : <dfn element-attr for="pre"><code>width</code></dfn> on <{pre}> elements
  : <dfn element-attr for="table"><code>align</code></dfn> on <{table}> elements
  : <dfn element-attr for="table"><code>bgcolor</code></dfn> on <{table}> elements
  : <dfn element-attr for="table"><code>border</code></dfn> on <{table}> elements
  : <dfn element-attr for="table"><code>bordercolor</code></dfn> on <{table}> elements
  : <dfn element-attr for="table"><code>cellpadding</code></dfn> on <{table}> elements
  : <dfn element-attr for="table"><code>cellspacing</code></dfn> on <{table}> elements
  : <dfn element-attr for="table"><code>frame</code></dfn> on <{table}> elements
  : <dfn element-attr for="table"><code>height</code></dfn> on <{table}> elements
  : <dfn element-attr for="table"><code>rules</code></dfn> on <{table}> elements
  : <dfn element-attr for="table"><code>width</code></dfn> on <{table}> elements
  : <dfn element-attr for="tbody,thead,tfoot,tablesection"><code>align</code></dfn> on <{tbody}>,
      <{thead}>, and <{tfoot}> elements
  : <dfn element-attr for="tbody,thead,tfoot,tablesection"><code>char</code></dfn> on <{tbody}>,
      <{thead}>, and <{tfoot}> elements
  : <dfn element-attr for="tbody,thead,tfoot,tablesection"><code>charoff</code></dfn> on <{tbody}>,
      <{thead}>, and <{tfoot}> elements
  : <dfn element-attr for="tbody,thead,tfoot,tablesection"><code>valign</code></dfn> on <{tbody}>,
      <{thead}>, and <{tfoot}> elements
  : <dfn element-attr for="td,th,tablecells"><code>align</code></dfn> on <{td}> and <{th}> elements
  : <dfn element-attr for="td,th,tablecells"><code>bgcolor</code></dfn> on <{td}> and <{th}> elements
  : <dfn element-attr for="td,th,tablecells"><code>char</code></dfn> on <{td}> and <{th}> elements
  : <dfn element-attr for="td,th,tablecells"><code>charoff</code></dfn> on <{td}> and <{th}> elements
  : <dfn element-attr for="td,th,tablecells"><code>height</code></dfn> on <{td}> and <{th}> elements
  : <dfn element-attr for="td,th,tablecells"><code>nowrap</code></dfn> on <{td}> and <{th}> elements
  : <dfn element-attr for="td,th,tablecells"><code>valign</code></dfn> on <{td}> and <{th}> elements
  : <dfn element-attr for="td,th,tablecells"><code>width</code></dfn> on <{td}> and <{th}> elements
  : <dfn element-attr for="tr"><code>align</code></dfn> on <{tr}> elements
  : <dfn element-attr for="tr"><code>bgcolor</code></dfn> on <{tr}> elements
  : <dfn element-attr for="tr"><code>char</code></dfn> on <{tr}> elements
  : <dfn element-attr for="tr"><code>charoff</code></dfn> on <{tr}> elements
  : <dfn element-attr for="tr"><code>height</code></dfn> on <{tr}> elements
  : <dfn element-attr for="tr"><code>valign</code></dfn> on <{tr}> elements
  : <dfn element-attr for="ul"><code>compact</code></dfn> on <{ul}> elements
  : <dfn element-attr for="ul"><code>type</code></dfn> on <{ul}> elements
  : <dfn element-attr for="body,table,thead,tbody,tfoot,tr,td,th,common"><code>background</code></dfn> on <{body}>, <{table}>, <{thead}>,
      <{tbody}>, <{tfoot}>, <{tr}>, <{td}>, and <{th}> elements
  :: Use CSS instead.

  <hr />

  The <{table/border}> attribute on the <{table}> element can be used to provide basic  fallback
  styling for the purpose of making tables legible in browsing environments where CSS support is
  limited or absent, such as text-based browsers, WYSIWYG editors, and in situations where CSS
  support is disabled or the style sheet is lost. Only the empty string and the value
  "<code>1</code>" may be used as <{table/border}> values for this purpose. Other values are
  considered obsolete. To regulate the thickness of such borders, authors should instead use CSS.

<h3 id="requirements-for-implementations">Requirements for implementations</h3>

  <h4 id="the-applet-element">The <dfn element><code>applet</code></dfn> element</h4>

  <p class="critical">
    This feature is in the process of being removed from the Web platform. (This is a long process
    that takes many years.) Using the <{applet}> element at this time is highly
    discouraged.
  </p>

  The <{applet}> element is a Java-specific variant of the <{embed}> element.
  The <{applet}> element is now obsoleted so that all extension frameworks (Java, .NET,
  Flash, etc) are handled in a consistent manner.

  When the element matches any of the following conditions, it <a>represents</a> its contents:

  * The element is still in the <a>stack of open elements</a> of an <a>HTML parser</a> or
      <a>XML parser</a>.
  * The element is not <a>in a <code>Document</code></a>.
  * The element's <a>node document</a> is not <a>fully active</a>.
  * The element's <a>node document</a>'s <a>active sandboxing flag set</a> has its <a>sandboxed
    plugins browsing context flag</a> set.
  * The element has an ancestor <a>media element</a>.
  * The element has an ancestor <{object}> element that is <em>not</em> showing its
    <a>fallback content</a>.
  * No Java Language runtime <a>plugin</a> is available.
  * A Java runtime <a>plugin</a> is available but it is disabled.

  Otherwise, the user agent should instantiate a Java Language runtime <a>plugin</a>, and should
  pass the names and values of all the attributes on the element, in the order they were added to
  the element, with the attributes added by the parser being ordered in source order, and then a
  parameter named "PARAM" whose value is null, and then all the names and values of
  <a>parameters</a> given by <{param}> elements that are children of the
  <{applet}> element, in <a>tree order</a>, to the <a>plugin</a> used. If the <a>plugin</a>
  supports a scriptable interface, the <code>HTMLAppletElement</code> object representing the
  element should expose that interface. The <{applet}> element <a>represents</a> the
  <a>plugin</a>.

  <p class="note">
    The <{applet}> element is unaffected by the CSS 'display' property. The
    Java Language runtime is instantiated even if the element is hidden with a 'display:none' CSS
    style.
  </p>

  The <{applet}> element must implement the <code>HTMLAppletElement</code> interface.

  <pre class="idl" data-highlight="webidl" dfn-for="HTMLAppletElement">
    interface HTMLAppletElement : HTMLElement {
      attribute DOMString align;
      attribute DOMString alt;
      attribute DOMString archive;
      attribute DOMString code;
      attribute DOMString codeBase;
      attribute DOMString height;
      attribute unsigned long hspace;
      attribute DOMString name;
      attribute DOMString _object; // the underscore is not part of the identifier
      attribute unsigned long vspace;
      attribute DOMString width;
    };
  </pre>

  The <dfn attribute for="HTMLAppletElement"><code>align</code></dfn>,
  <dfn attribute for="HTMLAppletElement"><code>alt</code></dfn>,
  <dfn attribute for="HTMLAppletElement"><code>archive</code></dfn>,
  <dfn attribute for="HTMLAppletElement"><code>code</code></dfn>,
  <dfn attribute for="HTMLAppletElement"><code>height</code></dfn>,
  <dfn attribute for="HTMLAppletElement"><code>hspace</code></dfn>,
  <dfn attribute for="HTMLAppletElement"><code>name</code></dfn>,
  <dfn attribute for="HTMLAppletElement"><code>object</code></dfn>,
  <dfn attribute for="HTMLAppletElement"><code>vspace</code></dfn>, and
  <dfn attribute for="HTMLAppletElement"><code>width</code></dfn> IDL attributes must <a>reflect</a>
  the respective content attributes of the same name. For the purposes of reflection, the <{applet}>
  element's {{HTMLAppletElement/_object|object}} content attribute is defined as containing a
  <a for="url">URL</a>.

  The <dfn attribute for="HTMLAppletElement"><code>codeBase</code></dfn> IDL attribute must
  <a>reflect</a> the <code>codebase</code> content attribute, which for the purposes of reflection
  is defined as containing a <a for="url">URL</a>.

<h4 id="the-marquee-element">The <dfn element><code>marquee</code></dfn> element</h4>

  The <{marquee}> element is a presentational element that animates content. CSS transitions and
  animations are a more appropriate mechanism. [[CSS3-ANIMATIONS]] [[CSS3-TRANSITIONS]]

  The <a>task source</a> for tasks mentioned in this section is the <a>DOM manipulation task source</a>.

  The <{marquee}> element must implement the <code>HTMLMarqueeElement</code> interface.

  <pre class="idl" data-highlight="webidl" dfn-for="HTMLMarqueeElement">
    interface HTMLMarqueeElement : HTMLElement {
      attribute DOMString behavior;
      attribute DOMString bgColor;
      attribute DOMString direction;
      attribute DOMString height;
      attribute unsigned long hspace;
      attribute long loop;
      attribute unsigned long scrollAmount;
      attribute unsigned long scrollDelay;
      attribute boolean trueSpeed;
      attribute unsigned long vspace;
      attribute DOMString width;

      attribute EventHandler onbounce;
      attribute EventHandler onfinish;
      attribute EventHandler onstart;

      void start();
      void stop();
    };
  </pre>

  A <{marquee}> element can be <dfn>turned on</dfn> or <dfn>turned off</dfn>. When it is created, it
  is <a>turned on</a>.

  When the <dfn method for="HTMLMarqueeElement"><code>start()</code></dfn> method is called, the
  <{marquee}> element must be <a>turned on</a>.

  When the <dfn method for="HTMLMarqueeElement"><code>stop()</code></dfn> method is called, the
  <{marquee}> element must be <a>turned off</a>.

  When a <{marquee}> element is created, the user agent must <a>queue a task</a> to
  <a>fire a simple event</a> named <code>start</code> at the element.

  <hr />

  The <dfn element-attr for="marquee"><code>behavior</code></dfn> content attribute on <{marquee}>
  elements is an <a>enumerated attribute</a> with the following keywords (all non-conforming):

  <table>
    <thead>
      <tr>
        <th>Keyword</th>
        <th>State</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><dfn attr-value for="marquee/behavior"><code>scroll</code></dfn></td>
        <td><dfn state for="marquee/behavior">scroll</dfn></td>
      </tr>
      <tr>
        <td><dfn attr-value for="marquee/behavior"><code>slide</code></dfn></td>
        <td><dfn state for="marquee/behavior">slide</dfn></td>
      </tr>
      <tr>
        <td><dfn attr-value for="marquee/behavior"><code>alternate</code></dfn></td>
        <td><dfn state for="marquee/behavior">alternate</dfn></td>
      </tr>
    </tbody>
  </table>

  The <i>missing value default</i> is the <a state for="marquee/behavior">scroll</a> state.

  <hr />

  The <dfn element-attr for="marquee"><code>direction</code></dfn> content attribute on <{marquee}>
  elements is an <a>enumerated attribute</a> with the following keywords (all non-conforming):

  <table>
    <thead>
      <tr>
        <th>Keyword</th>
        <th>State</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a attr-value for="marquee/direction"><code>left</code></a></td>
        <td><dfn state for="marquee">left</dfn></td>
      </tr>
      <tr>
        <td><a attr-value for="marquee/direction"><code>right</code></a></td>
        <td><dfn state for="marquee">right</dfn></td>
      </tr>
      <tr>
        <td><a attr-value for="marquee/direction"><code>up</code></a></td>
        <td><dfn state for="marquee">up</dfn></td>
      </tr>
      <tr>
        <td><a attr-value for="marquee/direction"><code>down</code></a></td>
        <td><dfn state for="marquee">down</dfn></td>
      </tr>
    </tbody>
  </table>

  The <i>missing value default</i> is the <a state for="marquee">left</a> state.

  <hr />

  The <dfn element-attr for="marquee"><code>truespeed</code></dfn> content attribute on <{marquee}>
  elements is a <a>boolean attribute</a>.

  <hr />

  A <{marquee}> element has a <dfn>marquee scroll interval</dfn>, which is obtained as follows:

  1. If the element has a <dfn element-attr for="marquee"><code>scrolldelay</code></dfn> content
      attribute, and parsing its value using the <a>rules for parsing non-negative integers</a> does
      not return an error, then let <var>delay</var> be the parsed value. Otherwise, let
      <var>delay</var> be 85.
  2. If the element does not have a <{marquee/truespeed}> attribute, and the <var>delay</var> value
      is less than 60, then let <var>delay</var> be 60 instead.
  3. The <a>marquee scroll interval</a> is <var>delay</var>, interpreted in milliseconds.

  <hr />

  A <{marquee}> element has a <dfn for="marquee">marquee scroll distance</dfn>, which, if the
  element has a <dfn element-attr for="marquee"><code>scrollamount</code></dfn> content attribute,
  and parsing its value using the <a>rules for parsing non-negative integers</a> does not return an
  error, is the parsed value interpreted in CSS pixels, and otherwise is 6 CSS pixels.

  <hr />

  A <{marquee}> element has a <dfn>marquee loop count</dfn>, which, if the element has a
  <dfn element-attr for="marquee"><code>loop</code></dfn> content attribute, and parsing its value
  using the <a>rules for parsing integers</a> does not return an error or a number less than 1, is
  the parsed value, and otherwise is -1.

  The <dfn attribute for="HTMLMarqueeElement"><code>loop</code></dfn> IDL attribute, on getting,
  must return the element's <a>marquee loop count</a>; and on setting, if the new value is different
  than the element's <a>marquee loop count</a> and either greater than zero or equal to -1, must set
  the element's <{marquee/loop}> content attribute (adding it if necessary) to the
  <a>valid integer</a> that represents the new value. (Other values are ignored.)

  A <{marquee}> element also has a <dfn>marquee current loop index</dfn>, which is zero when the
  element is created.

  The rendering layer will occasionally <dfn>increment the marquee current loop index</dfn>, which
  must cause the following steps to be run:

  1. If the <a>marquee loop count</a> is -1, then abort these steps.
  2. Increment the <a>marquee current loop index</a> by one.
  3. If the <a>marquee current loop index</a> is now equal to or greater than the element's
      <a>marquee loop count</a>, <a lt="turned off">turn off</a> the <{marquee}> element and
      <a>queue a task</a> to <a>fire a simple event</a> named <a event><code>finish</code></a> at
      the <{marquee}> element.

      Otherwise, if the {{HTMLMarqueeElement/behavior}} attribute is in the
      <a state for="marquee/behavior">alternate</a> state, then <a>queue a task</a> to <a>fire a
      simple event</a> named <a event><code>bounce</code></a> at the <{marquee}> element.

      Otherwise, <a>queue a task</a> to <a>fire a simple event</a> named
      <a event><code>start</code></a> at the <{marquee}> element.

  <hr />

  The following are the <a>event handlers</a> (and their corresponding
  <a>event handler event types</a>) that must be supported, as
  <a>event handler content attributes</a> and <a>event handler IDL attributes</a>, by
    <{marquee}> elements:

  <table>
    <thead>
      <tr>
        <th><a>Event handler</a></th>
        <th><a>Event handler event type</a></th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><dfn attribute for="HTMLMarqueeElement"><code>onbounce</code></dfn></td>
        <td><dfn event for="marquee"><code>bounce</code></dfn></td>
      </tr>
      <tr>
        <td><dfn attribute for="HTMLMarqueeElement"><code>onfinish</code></dfn></td>
        <td><dfn event for="marquee"><code>finish</code></dfn></td>
      </tr>
      <tr>
        <td><dfn attribute for="HTMLMarqueeElement"><code>onstart</code></dfn></td>
        <td><dfn event for="marquee"><code>start</code></dfn></td>
      </tr>
    </tbody>
  </table>

  <hr />

  The <dfn attribute for="HTMLMarqueeElement"><code>behavior</code></dfn>,
  <dfn attribute for="HTMLMarqueeElement"><code>direction</code></dfn>,
  <dfn attribute for="HTMLMarqueeElement"><code>height</code></dfn>,
  <dfn attribute for="HTMLMarqueeElement"><code>hspace</code></dfn>,
  <dfn attribute for="HTMLMarqueeElement"><code>vspace</code></dfn>,
  and <dfn attribute for="HTMLMarqueeElement"><code>width</code></dfn> IDL attributes must
  <a>reflect</a> the respective content attributes of the same name.

  The <dfn attribute for="HTMLMarqueeElement"><code>bgColor</code></dfn> IDL attribute must
  <a>reflect</a> the <code>bgcolor</code> content attribute.

  The <dfn attribute for="HTMLMarqueeElement"><code>scrollAmount</code></dfn> IDL attribute must
  <a>reflect</a> the <{marquee/scrollamount}> content attribute. The default value is 6.

  The <dfn attribute for="HTMLMarqueeElement"><code>scrollDelay</code></dfn> IDL attribute must
  <a>reflect</a> the <{marquee/scrolldelay}> content attribute. The default value is 85.

  The <dfn attribute for="HTMLMarqueeElement"><code>trueSpeed</code></dfn> IDL attribute must
  <a>reflect</a> the <{marquee/truespeed}> content attribute.

<h4 id="frames">Frames</h4>

  The <dfn element><code>frameset</code></dfn> element acts as the <{body}> element in documents
  that use frames.

  The <{frameset}> element must implement the <code>HTMLFrameSetElement</code> interface.

  <pre class="idl" data-highlight="webidl" dfn-for="HTMLFrameSetElement">
    interface HTMLFrameSetElement : HTMLElement {
      attribute DOMString cols;
      attribute DOMString rows;
    };
    HTMLFrameSetElement implements WindowEventHandlers;
  </pre>

  The <dfn element-attr for="frameset"><code>cols</code></dfn> and
  <dfn element-attr for="frameset"><code>rows</code></dfn> IDL attributes of the <{frameset}>
  element must <a>reflect</a> the respective content attributes of the same name.

  The <{frameset}> element exposes as <a>event handler content attributes</a> a number of the
  <a>event handlers</a> of the <code>Window</code> object. It also mirrors their
  <a>event handler IDL attributes</a>.

  The <a attribute for="GlobalEventHandlers"><code>onblur</code></a>,
  <a attribute for="GlobalEventHandlers"><code>onerror</code></a>,
  <a attribute for="GlobalEventHandlers"><code>onfocus</code></a>,
  <a attribute for="GlobalEventHandlers"><code>onload</code></a>,
  <a attribute for="GlobalEventHandlers"><code>onresize</code></a>, and
  <a attribute for="GlobalEventHandlers"><code>onscroll</code></a> <a>event handlers</a> of the
  {{Window}} object, exposed on the <{frameset}> element, replace the generic <a>event handlers</a>
  with the same names normally supported by <a>html elements</a>.

  <hr />

  The <dfn element><code>frame</code></dfn> element defines a <a>nested browsing context</a> similar
  to the <{iframe}> element, but rendered within a <{frameset}> element.

  A <{frame}> element is said to be an <dfn>active <{frame}> element</dfn> when it is
  <a>in a <code>Document</code></a>.

  When a <{frame}> element is created as an <a>active <code>frame</code> element</a>, or becomes an
  <a>active <code>frame</code> element</a> after not having been one, the user agent must create a
  <a>nested browsing context</a>, and then <a>process the <code>frame</code> attributes</a> for the
  first time.

  When a <{frame}> element stops being an <a>active <code>frame</code> element</a>, the
  user agent must <a>discard</a> the <a>nested browsing context</a>.

  Whenever a <{frame}> element with a <a>nested browsing context</a> has its <{frame/src}> attribute
  set, changed, or removed, the user agent must <a>process the <code>frame</code> attributes</a>.

  When the user agent is to <dfn>process the <{frame}> attributes</dfn>, it must run the
  first appropriate steps from the following list:

  <dl class="switch">
    <dt>
      If the element has no <dfn element-attr for="frame"><code>src</code></dfn> attribute
      specified, and the user agent is processing the <{frame}>'s attributes for the first time
    </dt>
    <dd>
      <a>Queue a task</a> to <a>fire a simple event</a> named
      <a event for="global"><code>load</code></a> at the <{frame}> element.
    </dd>

    <dt>Otherwise</dt>
    <dd>
      1. If the value of the <{frame/src}> attribute is the empty string, let <var>url</var> be
          the string "<code>about:blank</code>".

          Otherwise, <a>resolve</a> the value of the <{frame/src}> attribute, relative to the
          <{frame}> element.

          If that is not successful, then let <var>url</var> be the string
          "<code>about:blank</code>". Otherwise, let <var>url</var> be the resulting
          <a>absolute URL</a>.
      2. <a>Navigate</a> the element's <a>child browsing context</a>to <var>url</var>.

    </dd>
  </dl>

  Furthermore, if the <a>active document</a> of the element's <a>child browsing context</a> before
  such a <a>navigation</a> was not <a>completely loaded</a> at the time of the new
  <a>navigation</a>, then the <a>navigation</a> must be completed  with <a>replacement enabled</a>.

  Similarly, if the <a>child browsing context</a>'s <a>session history</a> contained only one
  {{Document}} when the <a>process the <code>frame</code> attributes</a> algorithm was
  invoked, and that was the <code>about:blank</code> {{Document}} created when the <a>child
  browsing context</a> was created, then any <a>navigation</a> required of the user agent in that
  algorithm must be completed with <a>replacement enabled</a>.

  When a {{Document}} in a <{frame}> is marked as <a>completely loaded</a>, the user agent
  must <a>queue a task</a> to <a>fire a simple event</a> named
  <a event for="global"><code>load</code></a> at the <{frame}> element.

  The <a>task source</a> for the <a>tasks</a> above is the <a>DOM manipulation task source</a>.

  When a <{frame}> element's <a>nested browsing context</a>'s <a>active document</a> is not
  <a>ready for post-load tasks</a>, and when anything is <a>delaying the load event</a> of the
  <{frame}> element's <a>browsing context</a>'s <a>active document</a>, and when the <{frame}>
  element's <a>browsing context</a> is in the <a>delaying <code>load</code> events mode</a>, the
  <{frame}> must <a>delay the load event</a> of its document.

  When the browsing context is created, if a <dfn element-attr for="frame"><code>name</code></dfn>
  content attribute is present, the <a>browsing context name</a> must be set to the value of this
  attribute; otherwise, the <a>browsing context name</a> must be set to the empty string.

  Whenever the <{frame/name}> attribute is set, the nested <a>browsing context</a>'s
  <a lt="browsing context name">name</a> must be changed to the new value. If the attribute is
  removed, the <a>browsing context name</a> must be set to the empty string.

  The <{frame}> element must implement the {{HTMLFrameElement}} interface.

  <pre class="idl" data-highlight="webidl" dfn-for="HTMLFrameElement">
    interface HTMLFrameElement : HTMLElement {
      attribute DOMString name;
      attribute DOMString scrolling;
      attribute DOMString src;
      attribute DOMString frameBorder;
      attribute DOMString longDesc;
      attribute boolean noResize;
      readonly attribute Document? contentDocument;
      readonly attribute WindowProxy? contentWindow;

      [TreatNullAs=EmptyString] attribute DOMString marginHeight;
      [TreatNullAs=EmptyString] attribute DOMString marginWidth;
    };
  </pre>

  The <dfn attribute for="HTMLFrameElement"><code>name</code></dfn>,
  <dfn attribute for="HTMLFrameElement"><code>scrolling</code></dfn>, and
  <dfn attribute for="HTMLFrameElement"><code>src</code></dfn> IDL attributes of the <{frame}>
  element must <a>reflect</a> the respective content attributes of the same name. For the purposes
  of reflection, the <{frame}> element's <{frame/src}> content attribute is defined as containing a
  <a for="url">URL</a>.

  The <dfn attribute for="HTMLFrameElement"><code>frameBorder</code></dfn> IDL attribute of the
  <{frame}> element must <a>reflect</a> the element's <code>frameborder</code> content attribute.

  The <dfn attribute for="HTMLFrameElement"><code>longDesc</code></dfn> IDL attribute of the
  <{frame}> element must <a>reflect</a> the element's <{frame/longdesc}> content attribute, which
  for the purposes of reflection is defined as containing a <a for="url">URL</a>.

  The <dfn attribute for="HTMLFrameElement"><code>noResize</code></dfn> IDL attribute of the
  <{frame}> element must <a>reflect</a> the element's <code>noresize</code> content attribute.

  The <dfn attribute for="HTMLFrameElement"><code>contentDocument</code></dfn> IDL attribute of the
  <{frame}> element must return the {{Document}} object of the <a>active document</a> of the
  <{frame}> element's <a>nested browsing context</a>, if any and if its
  <a for="concept">origin</a> is the <a>same origin-domain</a> as the <a for="concept">origin</a>
  specified by the <a>incumbent settings object</a>, or null otherwise.

  The <dfn attribute for="HTMLFrameElement"><code>contentWindow</code></dfn> IDL attribute must
  return the <code>WindowProxy</code> object of the <{frame}> element's
  <a>nested browsing context</a>.

  The <dfn attribute for="HTMLFrameElement"><code>marginHeight</code></dfn> IDL attribute of the
  <{frame}> element must <a>reflect</a> the element's <code>marginheight</code> content attribute.

  The <dfn attribute for="HTMLFrameElement"><code>marginWidth</code></dfn> IDL attribute of the
  <{frame}> element must <a>reflect</a> the element's <code>marginwidth</code> content attribute.

<h4 id="other-elements-attributes-and-apis">Other elements, attributes and APIs</h4>

  User agents must treat <{acronym}> elements in a manner equivalent to <{abbr}> elements in terms
  of semantics and for purposes of rendering.

  <hr />

  <pre class="idl" data-highlight="webidl" dfn-for="HTMLAnchorElement">
    partial interface HTMLAnchorElement {
      attribute DOMString coords;
      attribute DOMString charset;
      attribute DOMString name;
      attribute DOMString shape;
    };
  </pre>

  The <dfn attribute for="HTMLAnchorElement"><code>coords</code></dfn>,
  <dfn attribute for="HTMLAnchorElement"><code>charset</code></dfn>,
  <dfn attribute for="HTMLAnchorElement"><code>name</code></dfn>, and
  <dfn attribute for="HTMLAnchorElement"><code>shape</code></dfn> IDL attributes of the
  <{th}> element must <a>reflect</a> the respective content attributes of the same name.

  <hr />

  <pre class="idl" data-highlight="webidl" dfn-for="HTMLAreaElement">
    partial interface HTMLAreaElement {
      attribute boolean noHref;
    };
  </pre>

  The <dfn attribute for="HTMLAreaElement"><code>noHref</code></dfn> IDL attribute of the <{area}>
  element must <a>reflect</a> the element's <{area/nohref}> content attribute.

  <hr />

  <pre class="idl" data-highlight="webidl" dfn-for="HTMLBodyElement">
    partial interface HTMLBodyElement {
      [TreatNullAs=EmptyString] attribute DOMString text;
      [TreatNullAs=EmptyString] attribute DOMString link;
      [TreatNullAs=EmptyString] attribute DOMString vLink;
      [TreatNullAs=EmptyString] attribute DOMString aLink;
      [TreatNullAs=EmptyString] attribute DOMString bgColor;
      attribute DOMString background;
    };
  </pre>

  The <dfn attribute for="HTMLBodyElement"><code>text</code></dfn> IDL attribute of the <{body}>
  element must <a>reflect</a> the element's <{body/text}> content attribute.

  The <dfn attribute for="HTMLBodyElement"><code>link</code></dfn> IDL attribute of the <{body}>
  element must <a>reflect</a> the element's <{body/link}> content attribute.

  The <dfn attribute for="HTMLBodyElement"><code>aLink</code></dfn> IDL attribute of the <{body}>
  element must <a>reflect</a> the element's <{body/alink}> content attribute.

  The <dfn attribute for="HTMLBodyElement"><code>vLink</code></dfn> IDL attribute of the <{body}>
  element must <a>reflect</a> the element's <{body/vlink}> content attribute.

  The <dfn attribute for="HTMLBodyElement"><code>bgColor</code></dfn> IDL attribute of the <{body}>
  element must <a>reflect</a> the element's <{body/bgcolor}> content attribute.

  The <dfn attribute for="HTMLBodyElement"><code>background</code></dfn> IDL attribute of the
  <{body}> element must <a>reflect</a> the element's <{body/background}> content attribute. (The
  <{body/background}> content is <em>not</em> defined to contain a <a for="url">URL</a>, despite
  rules regarding its handling in [[#rendering]] above.)

  <hr />

  <pre class="idl" data-highlight="webidl" dfn-for="HTMLBRElement">
    partial interface HTMLBRElement {
      attribute DOMString clear;
    };
  </pre>

  The <dfn attribute for="HTMLBRElement"><code>clear</code></dfn> IDL attribute of the <{br}>
  element must <a>reflect</a> the content attribute of the same name.

  <hr />

  <pre class="idl" data-highlight="webidl" dfn-for="HTMLTableCaptionElement">
    partial interface HTMLTableCaptionElement {
      attribute DOMString align;
    };
  </pre>

  The <dfn attribute for="HTMLTableCaptionElement"><code>align</code></dfn> IDL attribute of the
  <{caption}> element must <a>reflect</a> the content attribute of the same name.

  <hr />

  <pre class="idl" data-highlight="webidl" dfn-for="HTMLTableColElement">
    partial interface HTMLTableColElement {
      attribute DOMString align;
      attribute DOMString ch;
      attribute DOMString chOff;
      attribute DOMString vAlign;
      attribute DOMString width;
    };
  </pre>

  The <dfn attribute for="HTMLTableColElement"><code>align</code></dfn> and
  <dfn attribute for="HTMLTableColElement"><code>width</code></dfn> IDL attributes of the <{col}>
  element must <a>reflect</a> the respective content attributes of the same name.

  The <dfn attribute for="HTMLTableColElement"><code>ch</code></dfn> IDL attribute of the <{col}>
  element must <a>reflect</a> the element's <{col/char}> content attribute.

  The <dfn attribute for="HTMLTableColElement"><code>chOff</code></dfn> IDL attribute of the
  <{col}> element must <a>reflect</a> the element's <{col/charoff}> content attribute.

  The <dfn attribute for="HTMLTableColElement"><code>vAlign</code></dfn> IDL attribute of the
  <{col}> element must <a>reflect</a> the element's <{col/valign}> content attribute.

  <hr />

  User agents must treat <{dir}> elements in a manner equivalent to <code>ul</code>
  elements in terms of semantics and for purposes of rendering.

  The <{dir}> element must implement the <code>HTMLDirectoryElement</code> interface.

  <pre class="idl" data-highlight="webidl" dfn-for="HTMLDirectoryElement">
    interface HTMLDirectoryElement : HTMLElement {
      attribute boolean compact;
    };
  </pre>

  The <dfn attribute for="HTMLDirectoryElement"><code>compact</code></dfn> IDL attribute of the
  <{dir}> element must <a>reflect</a> the content attribute of the same name.

  <hr />

  <pre class="idl" data-highlight="webidl" dfn-for="HTMLDivElement">
    partial interface HTMLDivElement {
      attribute DOMString align;
    };
  </pre>

  The <dfn attribute for="HTMLDivElement"><code>align</code></dfn> IDL attribute of the <{div}>
  element must <a>reflect</a> the content attribute of the same name.

  <hr />

  <pre class="idl" data-highlight="webidl" dfn-for="HTMLDListElement">
    partial interface HTMLDListElement {
      attribute boolean compact;
    };
  </pre>

  The <dfn attribute for="HTMLDListElement"><code>compact</code></dfn> IDL attribute of the <{dl}>
  element must <a>reflect</a> the content attribute of the same name.

  <hr />

  <pre class="idl" data-highlight="webidl" dfn-for="HTMLEmbedElement">
    partial interface HTMLEmbedElement {
      attribute DOMString align;
      attribute DOMString name;
    };
  </pre>

  The <dfn attribute for="HTMLEmbedElement"><code>name</code></dfn> and
  <dfn attribute for="HTMLEmbedElement"><code>align</code></dfn> IDL attributes of the <{embed}>
  element must <a>reflect</a> the respective content attributes of the same name.

  <hr />

  The <{font}> element must implement the <code>HTMLFontElement</code> interface.

  <pre class="idl" data-highlight="webidl" dfn-for="HTMLFontElement">
    interface HTMLFontElement : HTMLElement {
      [TreatNullAs=EmptyString] attribute DOMString color;
      attribute DOMString face;
      attribute DOMString size;
    };
  </pre>

  The <dfn attribute for="HTMLFontElement"><code>color</code></dfn>,
  <dfn attribute for="HTMLFontElement"><code>face</code></dfn>, and
  <dfn attribute for="HTMLFontElement"><code>size</code></dfn>
  IDL attributes of the <{font}> element must <a>reflect</a> the respective content
  attributes of the same name.

  <hr />

  <pre class="idl" data-highlight="webidl" dfn-for="HTMLHeadingElement">
    partial interface HTMLHeadingElement {
      attribute DOMString align;
    };
  </pre>

  The <dfn attribute for="HTMLHeadingElement"><code>align</code></dfn> IDL attribute of the
  <{h1}>&ndash;<{h6}> elements must <a>reflect</a> the content attribute of the same name.

  <hr />

  <p class="note">
    The <dfn attribute for="HTMLHeadElement"><code>profile</code></dfn> IDL attribute on <{head}>
    elements (with the {{HTMLHeadElement}} interface) is intentionally omitted. Unless so required
    by <a lt="applicable specification">another applicable specification</a>, implementations would
    therefore not support this attribute. (It is mentioned here as it was defined in a previous
    version of the DOM specifications.)
  </p>

  <hr />

  <pre class="idl" data-highlight="webidl" dfn-for="HTMLHRElement">
    partial interface HTMLHRElement {
      attribute DOMString align;
      attribute DOMString color;
      attribute boolean noShade;
      attribute DOMString size;
      attribute DOMString width;
    };
  </pre>

  The <dfn attribute for="HTMLHRElement"><code>align</code></dfn>,
  <dfn attribute for="HTMLHRElement"><code>color</code></dfn>,
  <dfn attribute for="HTMLHRElement"><code>size</code></dfn>,
  and <dfn attribute for="HTMLHRElement"><code>width</code></dfn> IDL attributes of the <{hr}>
  element must <a>reflect</a> the respective content attributes of the same name.

  The <dfn><code>noShade</code></dfn> IDL attribute of the <{hr}> element must
  <a>reflect</a> the element's <code>noshade</code> content attribute.

  <hr />

  <pre class="idl" data-highlight="webidl" dfn-for="HTMLHtmlElement">
    partial interface HTMLHtmlElement {
      attribute DOMString version;
    };
  </pre>

  The <dfn attribute for="HTMLHtmlElement"><code>version</code></dfn> IDL attribute of the <{html}>
  element must <a>reflect</a> the content attribute of the same name.

  <hr />

  <pre class="idl" data-highlight="webidl" dfn-for="HTMLIFrameElement">
    partial interface HTMLIFrameElement {
      attribute DOMString align;
      attribute DOMString scrolling;
      attribute DOMString frameBorder;
      attribute DOMString longDesc;

      [TreatNullAs=EmptyString] attribute DOMString marginHeight;
      [TreatNullAs=EmptyString] attribute DOMString marginWidth;
    };
  </pre>

  The <dfn attribute for="HTMLIFrameElement"><code>align</code></dfn> and
  <dfn attribute for="HTMLIFrameElement"><code>scrolling</code></dfn> IDL attributes of the
  <{iframe}> element must <a>reflect</a> the respective content attributes of the same name.

  The <dfn attribute for="HTMLIFrameElement"><code>frameBorder</code></dfn> IDL attribute of the
  <{iframe}> element must <a>reflect</a> the element's <{iframe/frameborder}> content attribute.

  The <dfn attribute for="HTMLIFrameElement"><code>longDesc</code></dfn> IDL attribute of the
  <{iframe}> element must <a>reflect</a> the element's <{iframe/longdesc}> content attribute,
  which for the purposes of reflection is defined as containing a <a for="url">URL</a>.

  The <dfn attribute for="HTMLIFrameElement"><code>marginHeight</code></dfn> IDL attribute of the
  <{iframe}> element must <a>reflect</a> the element's <{iframe/marginheight}> content attribute.

  The <dfn attribute for="HTMLIFrameElement"><code>marginWidth</code></dfn> IDL attribute of the
  <{iframe}> element must <a>reflect</a> the element's <{iframe/marginwidth}> content attribute.

  <hr />

  <pre class="idl" data-highlight="webidl" dfn-for="HTMLImageElement">
    partial interface HTMLImageElement {
      attribute DOMString name;
      attribute DOMString lowsrc;
      attribute DOMString align;
      attribute unsigned long hspace;
      attribute unsigned long vspace;

      [TreatNullAs=EmptyString] attribute DOMString border;
    };
  </pre>

  The <dfn attribute for="HTMLImageElement"><code>name</code></dfn>,
  <dfn attribute for="HTMLImageElement"><code>align</code></dfn>,
  <dfn attribute for="HTMLImageElement"><code>border</code></dfn>,
  <dfn attribute for="HTMLImageElement"><code>hspace</code></dfn>, and
  <dfn attribute for="HTMLImageElement"><code>vspace</code></dfn> IDL attributes of the <{img}>
  element must <a>reflect</a> the respective content attributes of the same name.

  The <dfn attribute for="HTMLImageElement"><code>lowsrc</code></dfn> IDL attribute of the <{img}>
  element must <a>reflect</a> the element's <{img/lowsrc}> content attribute, which for the
  purposes of reflection is defined as containing a <a for="url">URL</a>.

  <hr />

  <pre class="idl" data-highlight="webidl" dfn-for="HTMLInputElement">
    partial interface HTMLInputElement {
      attribute DOMString align;
      attribute DOMString useMap;
    };
  </pre>

  The <dfn attribute for="HTMLInputElement"><code>align</code></dfn> IDL attribute of the <{input}>
  element must <a>reflect</a> the content attribute of the same name.

  The <dfn attribute for="HTMLInputElement"><code>useMap</code></dfn> IDL attribute of the <{input}>
  element must <a>reflect</a> the element's <{input/usemap}> content attribute.

  <hr />

  <pre class="idl" data-highlight="webidl" dfn-for="HTMLLegendElement">
    partial interface HTMLLegendElement {
      attribute DOMString align;
    };
  </pre>

  The <dfn attribute for="HTMLLegendElement"><code>align</code></dfn> IDL attribute of the
  <{legend}> element must <a>reflect</a> the content attribute of the same name.

  <hr />

  <pre class="idl" data-highlight="webidl" dfn-for="HTMLLIElement">
    partial interface HTMLLIElement {
      attribute DOMString type;
    };
  </pre>

  The <dfn attribute for="HTMLLIElement"><code>type</code></dfn> IDL attribute of the <{li}> element
  must <a>reflect</a> the content attribute of the same name.

  <hr />

  <pre class="idl" data-highlight="webidl" dfn-for="HTMLLinkElement">
    partial interface HTMLLinkElement {
      attribute DOMString charset;
      attribute DOMString target;
    };
  </pre>

  The <dfn attribute for="HTMLLinkElement"><code>charset</code></dfn> and
  <dfn attribute for="HTMLLinkElement"><code>target</code></dfn> IDL attributes of the <{link}>
  element must <a>reflect</a> the respective content attributes of the same name.

  <hr />

  User agents must treat <{listing}> elements in a manner equivalent to <code>pre</code> elements in
  terms of semantics and for purposes of rendering.

  <hr />

  <pre class="idl" data-highlight="webidl" dfn-for="HTMLMenuElement">
    partial interface HTMLMenuElement {
      attribute boolean compact;
    };
  </pre>

  The <dfn attribute for="HTMLMenuElement"><code>compact</code></dfn> IDL attribute of the <{menu}>
  element must <a>reflect</a> the content attribute of the same name.

  <hr />

  <pre class="idl" data-highlight="webidl" dfn-for="HTMLMetaElement">
    partial interface HTMLMetaElement {
      attribute DOMString scheme;
    };
  </pre>

  User agents may treat the <{meta/scheme}> content attribute
  on the <{meta}> element as an extension of the element's <{meta/name}> content attribute when
  processing a <{meta}> element with a <{meta/name}> attribute whose value is one that the user
  agent recognizes as supporting the <{meta/scheme}> attribute.

  User agents are encouraged to ignore the <{meta/scheme}> attribute and instead process the
  value given to the metadata name as if it had been specified for each expected value of the
  <{meta/scheme}> attribute.

  <div class="example">
    For example, if the user agent acts on <{meta}> elements with <{meta/name}>
    attributes having the value "eGMS.subject.keyword", and knows that the <{meta/scheme}>
    attribute is used with this metadata name, then it could take the <{meta/scheme}> attribute
    into account, acting as if it was an extension of the <{meta/name}> attribute. Thus the
    following two <{meta}> elements could be treated as two elements giving values for two
    different metadata names, one consisting of a combination of "eGMS.subject.keyword" and "LGCL",
    and the other consisting of a combination of "eGMS.subject.keyword" and "ORLY":

    <pre class="bad" highlight="html">
      &lt;!-- this markup is invalid -->
      &lt;meta name="eGMS.subject.keyword" scheme="LGCL" content="Abandoned vehicles">
      &lt;meta name="eGMS.subject.keyword" scheme="ORLY" content="Mah car: kthxbye">
    </pre>

    The suggested processing of this markup, however, would be equivalent to the following:

    <pre highlight="html">
      &lt;meta name="eGMS.subject.keyword" content="Abandoned vehicles">
      &lt;meta name="eGMS.subject.keyword" content="Mah car: kthxbye">
    </pre>
  </div>

  The <dfn attribute for="HTMLMetaElement"><code>scheme</code></dfn> IDL attribute of the <{meta}>
  element must <a>reflect</a> the content attribute of the same name.

  <hr />

  <pre class="idl" data-highlight="webidl" dfn-for="HTMLObjectElement">
    partial interface HTMLObjectElement {
      attribute DOMString align;
      attribute DOMString archive;
      attribute DOMString code;
      attribute boolean declare;
      attribute unsigned long hspace;
      attribute DOMString standby;
      attribute unsigned long vspace;
      attribute DOMString codeBase;
      attribute DOMString codeType;

      [TreatNullAs=EmptyString] attribute DOMString border;
    };
  </pre>

  The <dfn attribute for="HTMLObjectElement"><code>align</code></dfn>,
  <dfn attribute for="HTMLObjectElement"><code>archive</code></dfn>,
  <dfn attribute for="HTMLObjectElement"><code>border</code></dfn>,
  <dfn attribute for="HTMLObjectElement"><code>code</code></dfn>,
  <dfn attribute for="HTMLObjectElement"><code>declare</code></dfn>,
  <dfn attribute for="HTMLObjectElement"><code>hspace</code></dfn>,
  <dfn attribute for="HTMLObjectElement"><code>standby</code></dfn>, and
  <dfn attribute for="HTMLObjectElement"><code>vspace</code></dfn> IDL attributes of the <{object}>
  element must <a>reflect</a> the respective content attributes of the same name.

  The <dfn attribute for="HTMLObjectElement"><code>codeBase</code></dfn> IDL attribute of the
  <{object}> element must <a>reflect</a> the element's <{object/codebase}> content attribute,
  which for the purposes of reflection is defined as containing a <a for="url">URL</a>.

  The <dfn attribute for="HTMLObjectElement"><code>codeType</code></dfn> IDL attribute of the
  <{object}> element must <a>reflect</a> the element's <{object/codetype}> content attribute.

  <hr />

  <pre class="idl" data-highlight="webidl" dfn-for="HTMLOListElement">
    partial interface HTMLOListElement {
      attribute boolean compact;
    };
  </pre>

  The <dfn attribute for="HTMLOListElement"><code>compact</code></dfn> IDL attribute of the <{ol}>
  element must <a>reflect</a> the content attribute of the same name.

  <hr />

  <pre class="idl" data-highlight="webidl" dfn-for="HTMLParagraphElement">
    partial interface HTMLParagraphElement {
      attribute DOMString align;
    };
  </pre>

  The <dfn attribute for="HTMLParagraphElement"><code>align</code></dfn> IDL attribute of the <{p}>
  element must <a>reflect</a> the content attribute of the same name.

  <hr />

  <pre class="idl" data-highlight="webidl" dfn-for="HTMLParamElement">
    partial interface HTMLParamElement {
      attribute DOMString type;
      attribute DOMString valueType;
    };
  </pre>

  The <dfn attribute for="HTMLParamElement"><code>type</code></dfn> IDL attribute of the <{param}>
  element must <a>reflect</a> the content attribute of the same name.

  The <dfn attribute for="HTMLParamElement"><code>valueType</code></dfn> IDL attribute of the
  <{param}> element must <a>reflect</a> the element's <{param/valuetype}> content attribute.

  <hr />

  User agents must treat <{plaintext}> elements in a manner equivalent to <code>pre</code> elements
  in terms of semantics and for purposes of rendering. (The parser has special behavior for this
  element, though.)

  <hr />

  <pre class="idl" data-highlight="webidl" dfn-for="HTMLPreElement">
    partial interface HTMLPreElement {
      attribute long width;
    };
  </pre>

  The <dfn attribute for="HTMLPreElement"><code>width</code></dfn> IDL attribute of the <{pre}>
  element must <a>reflect</a> the content attribute of the same name.

  <hr />

  <pre class="idl" data-highlight="webidl" dfn-for="HTMLScriptElement">
    partial interface HTMLScriptElement {
      attribute DOMString event;
      attribute DOMString htmlFor;
    };
  </pre>

  The <dfn attribute for="HTMLScriptElement"><code>event</code></dfn> IDL attribute of the
 <{script}> element must reflect the element's <{script/event}> content attribute.

  The <dfn attribute for="HTMLScriptElement"><code>htmlFor</code></dfn> IDL attribute of the
  <{script}> element must reflect the element's <{script/for}> content attribute.

  <hr />

  <pre class="idl" data-highlight="webidl" dfn-for="HTMLTableElement">
    partial interface HTMLTableElement {
      attribute DOMString align;
      attribute DOMString border;
      attribute DOMString frame;
      attribute DOMString rules;
      attribute DOMString summary;
      attribute DOMString width;

      [TreatNullAs=EmptyString] attribute DOMString bgColor;
      [TreatNullAs=EmptyString] attribute DOMString cellPadding;
      [TreatNullAs=EmptyString] attribute DOMString cellSpacing;
    };
  </pre>

  The <dfn attribute for="HTMLTableElement"><code>align</code></dfn>,
  <dfn attribute for="HTMLTableElement"><code>border</code></dfn>,
  <dfn attribute for="HTMLTableElement"><code>frame</code></dfn>,
  <dfn attribute for="HTMLTableElement"><code>summary</code></dfn>,
  <dfn attribute for="HTMLTableElement"><code>rules</code></dfn>, and
  <dfn attribute for="HTMLTableElement"><code>width</code></dfn>,
  IDL attributes of the <{table}> element must <a>reflect</a> the respective content
  attributes of the same name.

  The <dfn attribute for="HTMLTableElement"><code>bgColor</code></dfn> IDL attribute of the
  <{table}> element must <a>reflect</a> the element's <{table/bgcolor}> content attribute.

  The <dfn attribute for="HTMLTableElement"><code>cellPadding</code></dfn> IDL attribute of the
  <{table}> element must <a>reflect</a> the element's <{table/cellpadding}> content attribute.

  The <dfn attribute for="HTMLTableElement"><code>cellSpacing</code></dfn> IDL attribute of the
  <{table}> element must <a>reflect</a> the element's <{table/cellspacing}> content attribute.

  <hr />

  <pre class="idl" data-highlight="webidl" dfn-for="HTMLTableSectionElement">
    partial interface HTMLTableSectionElement {
      attribute DOMString align;
      attribute DOMString ch;
      attribute DOMString chOff;
      attribute DOMString vAlign;
    };
  </pre>

  The <dfn attribute for="HTMLTableSectionElement"><code>align</code></dfn> IDL attribute of the
  <{tbody}>, <{thead}>, and <{tfoot}> elements must <a>reflect</a> the content attribute of the same
  name.

  The <dfn attribute for="HTMLTableSectionElement"><code>ch</code></dfn> IDL attribute of the
  <{tbody}>, <{thead}>, and <{tfoot}> elements must <a>reflect</a> the elements'
  <{tablesection/char}> content attributes.

  The <dfn attribute for="HTMLTableSectionElement"><code>chOff</code></dfn> IDL attribute of the
  <{tbody}>, <{thead}>, and <{tfoot}> elements must <a>reflect</a> the elements'
  <{tablesection/charoff}> content attributes.

  The <dfn attribute for="HTMLTableSectionElement"><code>vAlign</code></dfn> IDL attribute of the
  <{tbody}>, <{thead}>, and <{tfoot}> element must <a>reflect</a> the elements'
  <{tablesection/valign}> content attributes.

  <hr />

  <pre class="idl" data-highlight="webidl" dfn-for="HTMLTableCellElement">
    partial interface HTMLTableCellElement {
      attribute DOMString align;
      attribute DOMString axis;
      attribute DOMString height;
      attribute DOMString width;

      attribute DOMString ch;
      attribute DOMString chOff;
      attribute boolean noWrap;
      attribute DOMString vAlign;

      [TreatNullAs=EmptyString] attribute DOMString bgColor;
    };
  </pre>

  The <dfn attribute for="HTMLTableCellElement"><code>align</code></dfn>,
  <dfn attribute for="HTMLTableCellElement"><code>axis</code></dfn>,
  <dfn attribute for="HTMLTableCellElement"><code>height</code></dfn>,
  and <dfn attribute for="HTMLTableCellElement"><code>width</code></dfn> IDL attributes of the
 <{td}> and <{th}> elements must <a>reflect</a> the respective content attributes of the same name.

  The <dfn attribute for="HTMLTableCellElement"><code>ch</code></dfn> IDL attribute of the <{td}>
  and <{th}> elements must <a>reflect</a> the elements' <{tablecells/char}> content attributes.

  The <dfn attribute for="HTMLTableCellElement"><code>chOff</code></dfn> IDL attribute of the <{td}>
  and <{th}> elements must <a>reflect</a> the elements' <{tablecells/charoff}> content attributes.

  The <dfn attribute for="HTMLTableCellElement"><code>noWrap</code></dfn> IDL attribute of the
  <{td}> and <{th}> elements must <a>reflect</a> the elements' <{tablecells/nowrap}> content
  attributes.

  The <dfn attribute for="HTMLTableCellElement"><code>vAlign</code></dfn> IDL attribute of the
  <{td}> and <{th}> element must <a>reflect</a> the elements' <{tablecells/valign}> content
  attributes.

  The <dfn attribute for="HTMLTableCellElement"><code>bgColor</code></dfn> IDL attribute of the
  <{td}> and <{th}> elements must <a>reflect</a> the elements' <{tablecells/bgcolor}> content
  attributes.

  <hr />

  <pre class="idl" data-highlight="webidl" dfn-for="HTMLTableDataCellElement">
    partial interface HTMLTableDataCellElement {
      attribute DOMString abbr;
    };
  </pre>

  The <dfn attribute for="HTMLTableDataCellElement"><code>abbr</code></dfn> IDL attribute of the
  <{td}> element must <a>reflect</a> the respective content attributes of the same name.

  <hr />

  <pre class="idl" data-highlight="webidl" dfn-for="HTMLTableRowElement">
    partial interface HTMLTableRowElement {
      attribute DOMString align;
      attribute DOMString ch;
      attribute DOMString chOff;
      attribute DOMString vAlign;

      [TreatNullAs=EmptyString] attribute DOMString bgColor;
    };
  </pre>

  The <dfn attribute for="HTMLTableRowElement"><code>align</code></dfn> IDL attribute of the <{tr}>
  element must <a>reflect</a> the content attribute of the same name.

  The <dfn attribute for="HTMLTableRowElement"><code>ch</code></dfn> IDL attribute of the <{tr}>
  element must <a>reflect</a> the element's <{tr/char}> content attribute.

  The <dfn attribute for="HTMLTableRowElement"><code>chOff</code></dfn> IDL attribute of the <{tr}>
  element must <a>reflect</a> the element's <{tr/charoff}> content attribute.

  The <dfn attribute for="HTMLTableRowElement"><code>vAlign</code></dfn> IDL attribute of the <{tr}>
  element must <a>reflect</a> the element's <{tr/valign}> content attribute.

  The <dfn attribute for="HTMLTableRowElement"><code>bgColor</code></dfn> IDL attribute of the
  <{tr}> element must <a>reflect</a> the element's <{tr/bgcolor}> content attribute.

  <hr />

  <pre class="idl" data-highlight="webidl" dfn-for="HTMLUListElement">
    partial interface HTMLUListElement {
      attribute boolean compact;
      attribute DOMString type;
    };
  </pre>

  The <dfn attribute for="HTMLUListElement"><code>compact</code></dfn> and {{HTMLUListElement/type}}
  IDL attributes of the <{ul}> element must <a>reflect</a> the respective content attributes of the
  same name.

  <hr />

  User agents must treat <{xmp}> elements in a manner equivalent to <{pre}> elements in terms of
  semantics and for purposes of rendering. (The parser has special behavior for this element though.)

  <hr />

  The <{blink}>, <{bgsound}>, <{isindex}>, <{multicol}>, <{nextid}>, and <{spacer}> elements must
  use the {{HTMLUnknownElement}} interface.

  <hr />

  <pre class="idl" data-highlight="webidl" dfn-for="Document">
    partial interface Document {
      [TreatNullAs=EmptyString] attribute DOMString fgColor;
      [TreatNullAs=EmptyString] attribute DOMString linkColor;
      [TreatNullAs=EmptyString] attribute DOMString vlinkColor;
      [TreatNullAs=EmptyString] attribute DOMString alinkColor;
      [TreatNullAs=EmptyString] attribute DOMString bgColor;

      [SameObject] readonly attribute HTMLCollection anchors;
      [SameObject] readonly attribute HTMLCollection applets;

      void clear();
      void captureEvents();
      void releaseEvents();

      [SameObject] readonly attribute HTMLAllCollection all;
    };
  </pre>

  The attributes of the {{Document}} object listed in the first column of the following table must
  <a>reflect</a> the content attribute on the <{body}> element with the name given in the
  corresponding cell in the second column on the same row, if the <{body}> element is a <{body}>
  element (as opposed to a <{frameset}> element). When there is no <{body}> element or if it is a
  <{frameset}> element, the attributes must instead return the empty string on getting and do
  nothing on setting.

  <table>
    <thead>
      <tr>
        <th>IDL attribute</th>
        <th>Content attribute</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><dfn attribute for="Document"><code>fgColor</code></dfn></td>
        <td><{body/text}></td>
      </tr>
      <tr>
        <td><dfn attribute for="Document"><code>linkColor</code></dfn></td>
        <td><{body/link}></td>
      </tr>
      <tr>
        <td><dfn attribute for="Document"><code>vlinkColor</code></dfn></td>
        <td><{body/vlink}></td>
      </tr>
      <tr>
        <td><dfn attribute for="Document"><code>alinkColor</code></dfn></td>
        <td><{body/alink}></td>
      </tr>
      <tr>
        <td><dfn attribute for="Document"><code>bgColor</code></dfn></td>
        <td><{body/bgcolor}></td>
      </tr>
    </tbody>
  </table>

  <hr />

  The <dfn attribute for="Document"><code>anchors</code></dfn> attribute must return an
  {{HTMLCollection}} rooted at the {{Document}} node, whose filter matches only <{a}> elements with
  <{a/name}> attributes.

  The <dfn attribute for="Document"><code>applets</code></dfn> attribute must return an
  {{HTMLCollection}} rooted at the {{Document}} node, whose filter matches only <{applet}> elements.

  The <dfn method for="Document"><code>clear()</code></dfn>,
  <dfn method for="Document"><code>captureEvents()</code></dfn>, and
  <dfn method for="Document"><code>releaseEvents()</code></dfn> methods must do nothing.

  <hr />

  The <dfn attribute for="Document"><code>all</code></dfn> attribute must return an
  {{HTMLAllCollection}} rooted at the {{Document}} node, whose filter matches all elements.

  The object returned for <code>all</code> has several unusual behaviors:

  * The user agent must act as if the ToBoolean() operator in JavaScript converts the object
    returned for <code>all</code> to the false value.
  * The user agent must act as if, for the purposes of the <code>==</code> and <code>!=</code>
    operators in JavaScript, the object returned for <code>all</code> compares as equal to the
    <code>undefined</code> and <code>null</code> values. (Comparisons using the <code>===</code>
    operator, and comparisons to other values such as strings or objects, are unaffected.)
  * The user agent must act such that the <code>typeof</code> operator in JavaScript returns the
    string <code>undefined</code> when applied to the object returned for <code>all</code>.

  <p class="note">
    These requirements are a <a>willful violation</a> of the JavaScript specification current at the
    time of writing (ECMAScript edition 6). The JavaScript specification requires that the
    ToBoolean() operator convert all objects to the true value, and does not have provisions for
    objects acting as if they were <code>undefined</code> for the purposes of certain operators.
    This violation is motivated by a desire for compatibility with two classes of legacy content:
    one that uses the presence of <code>document.all</code> as a way to detect legacy user agents,
    and one that only supports those legacy user agents and uses the <code>document.all</code>
    object without testing for its presence first. [[!ECMA-262]]
  </p>

  <hr />

  <pre class="idl" data-highlight="webidl" dfn-for="Window">
    partial interface Window {
      void captureEvents();
      void releaseEvents();
    };
  </pre>

  The <dfn method for="Window"><code>captureEvents()</code></dfn> and <dfn method for="Window"><code>releaseEvents()</code></dfn> methods
  must do nothing.

</section>
